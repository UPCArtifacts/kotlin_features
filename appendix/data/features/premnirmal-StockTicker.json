{
  "complexity_metrics": {
    "loc": 7374,
    "sloc": 6042,
    "lloc": 3868,
    "cloc": 297,
    "mcc": 1054,
    "n_smell": 467,
    "comment_ratio": 4,
    "mcc_per_thlines": 272
  },
  "metrics": {
    "number_of_string": 294,
    "number_of_string_template": 20,
    "number_of_inline_func": 0,
    "number_of_inferred_fun": 1,
    "number_of_inferred_var": 565,
    "number_of_objects_declarations": 62,
    "number_of_companion_objects": 33,
    "number_of_singletons": 5,
    "number_of_declaration": 765,
    "number_of_var_declaration": 765,
    "number_of_func_call": 2537,
    "number_of_arguments": 2135,
    "number_of_parameters": 704,
    "number_of_qualified_expressions": 3369,
    "number_of_inheritances": 47,
    "number_of_unsafe_calls": 21,
    "number_of_safe_calls": 60,
    "number_of_destructuring_declarations": 1,
    "number_of_when_expressions": 15,
    "number_of_functions_with_default_value": 24,
    "number_of_function_call_with_named_value": 4,
    "number_of_named_argument": 10,
    "number_of_argument_with_default_value": 49,
    "number_of_overloaded_op": 1,
    "number_of_extension_function": 16,
    "number_of_properties_delegation": 7,
    "number_of_super_delegation": 0,
    "number_of_ranges": 3,
    "number_of_lambdas": 166,
    "number_of_possible_smart_casts": 11,
    "number_of_data_class": 14,
    "number_of_properties": 764,
    "number_of_functions": 570,
    "number_of_interfaces": 17,
    "number_of_classes": 103,
    "number_of_packages": 17,
    "number_of_kts_files": 0,
    "number_of_kt_files": 106
  },
  "findings": [{
    "group": "complexity",
    "smells": [{
      "name": "LargeClass",
      "description": "One class should have one responsibility. Large classes tend to handle many things at once. Split up large classes into smaller classes that are easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/SettingsActivity.kt:47:1",
        "message": "Class SettingsActivity is too large. Consider splitting it into smaller pieces."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/ParanormalActivity.kt:48:1",
        "message": "Class ParanormalActivity is too large. Consider splitting it into smaller pieces."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/StocksProvider.kt:37:1",
        "message": "Class StocksProvider is too large. Consider splitting it into smaller pieces."
      }]
    }, {
      "name": "ComplexMethod",
      "description": "Prefer splitting up complex methods into smaller, easier to understand methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/SettingsActivity.kt:112:3",
        "message": "The function setupSimplePreferencesScreen appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/SettingsActivity.kt:368:3",
        "message": "The function onRequestPermissionsResult appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/WidgetSettingsActivity.kt:59:3",
        "message": "The function onCreate appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/FileImportTask.kt:21:3",
        "message": "The function doInBackground appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/ParanormalActivity.kt:72:3",
        "message": "The function onCreate appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/RemoteStockViewAdapter.kt:62:3",
        "message": "The function getViewAt appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/news/GraphActivity.kt:50:3",
        "message": "The function onCreate appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/AlarmScheduler.kt:37:3",
        "message": "The function msToNextAlarm appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/StocksProvider.kt:174:3",
        "message": "The function fetch appears to be too complex."
      }]
    }, {
      "name": "TooManyFunctions",
      "description": "Too many functions inside a/an file/class/object/interface always indicate a violation of the single responsibility principle. Maybe the file/class/object/interface wants to manage to many things at once. Extract functionality which clearly belongs together.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/SettingsActivity.kt:47:1",
        "message": "Class 'SettingsActivity' with '14' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/WidgetSettingsActivity.kt:42:1",
        "message": "Class 'WidgetSettingsActivity' with '12' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/ParanormalActivity.kt:48:1",
        "message": "Class 'ParanormalActivity' with '16' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/WidgetData.kt:18:1",
        "message": "Class 'WidgetData' with '27' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/AppPreferences.kt:17:1",
        "message": "Class 'AppPreferences' with '15' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/NetworkModule.kt:30:1",
        "message": "Class 'NetworkModule' with '15' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Quote.kt:5:1",
        "message": "Class 'Quote' with '22' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/components/AppComponent.kt:34:1",
        "message": "Interface 'AppComponent' with '30' functions detected. Defined threshold inside interfaces is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/IStocksProvider.kt:8:1",
        "message": "Interface 'IStocksProvider' with '17' functions detected. Defined threshold inside interfaces is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/StocksProvider.kt:37:1",
        "message": "Class 'StocksProvider' with '23' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/PortfolioFragment.kt:34:1",
        "message": "Class 'PortfolioFragment' with '11' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/base/BaseActivity.kt:32:1",
        "message": "Class 'BaseActivity' with '13' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/base/BaseFragment.kt:23:1",
        "message": "Class 'BaseFragment' with '11' functions detected. Defined threshold inside classes is set to '11'"
      }]
    }, {
      "name": "LabeledExpression",
      "description": "Expression with labels increase complexity and affect maintainability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/SettingsActivity.kt:211:36",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/SettingsActivity.kt:230:36",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/SettingsActivity.kt:250:38",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/SettingsActivity.kt:278:38",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/SettingsActivity.kt:288:43",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/SettingsActivity.kt:293:39",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/WidgetSettingsActivity.kt:94:42",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/ParanormalActivity.kt:278:40",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/news/NewsFeedActivity.kt:125:40",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/news/NewsFeedActivity.kt:231:40",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/search/TickerSelectorActivity.kt:62:44",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/search/TickerSelectorActivity.kt:73:55",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/search/TickerSelectorActivity.kt:77:40",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/search/TickerSelectorActivity.kt:151:42",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/search/TickerSelectorActivity.kt:166:34",
        "message": "Expression with labels increase complexity and affect maintainability."
      }]
    }, {
      "name": "LongMethod",
      "description": "One method should have one responsibility. Long methods tend to handle many things at once. Prefer smaller methods to make them easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/ParanormalActivity.kt:72:3",
        "message": "The function onCreate is too long. The maximum length is 20."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/StockWidget.kt:124:3",
        "message": "The function updateWidget is too long. The maximum length is 20."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/news/NewsFeedActivity.kt:62:3",
        "message": "The function onCreate is too long. The maximum length is 20."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/PortfolioVH.kt:23:3",
        "message": "The function update is too long. The maximum length is 20."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/base/BaseGraphActivity.kt:42:3",
        "message": "The function loadGraph is too long. The maximum length is 20."
      }]
    }, {
      "name": "LongParameterList",
      "description": "The more parameters a method has the more complex it is. Long parameter lists are often used to control complex algorithms and violate the Single Responsibility Principle. Prefer methods with short parameter lists.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/NewsApi.kt:23:18",
        "message": "The function getNewsFeed has too many parameters. The current threshold is set to 6."
      }]
    }, {
      "name": "ComplexInterface",
      "description": "An interface contains too many functions and properties. Large classes tend to handle many things at once. An interface should have one responsibility. Split up large interfaces into smaller ones that are easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/components/AppComponent.kt:34:1",
        "message": "The interface AppComponent is too complex. Consider splitting it up."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/IStocksProvider.kt:8:1",
        "message": "The interface IStocksProvider is too complex. Consider splitting it up."
      }]
    }, {
      "name": "MethodOverloading",
      "description": "Methods which are overloaded often might be harder to maintain. Furthermore, these methods are tightly coupled. Refactor these methods and try to use optional parameters.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/components/AppComponent.kt:34:1",
        "message": "This method is overloaded too many times."
      }]
    }, {
      "name": "ComplexCondition",
      "description": "Complex conditions should be simplified and extracted into well-named methods if necessary.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/AlarmScheduler.kt:63:9",
        "message": "This condition is too complex."
      }]
    }]
  }, {
    "group": "empty-blocks",
    "smells": [{
      "name": "EmptyDefaultConstructor",
      "description": "Empty block of code detected. As they serve no purpose they should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/AddPositionActivity.kt:38:43",
        "message": "An empty default constructor can be removed."
      }]
    }]
  }, {
    "group": "exceptions",
    "smells": [{
      "name": "TooGenericExceptionThrown",
      "description": "Thrown exception is too generic. Prefer throwing project specific exceptions to handle error cases.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/tools/Parser.kt:30:7",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }]
    }, {
      "name": "TooGenericExceptionCaught",
      "description": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/RemoteStockViewAdapter.kt:142:14",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/StocksApp.kt:41:16",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/components/Extensions.kt:14:12",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }]
    }, {
      "name": "PrintStackTrace",
      "description": "Do not print an stack trace. These debug statements should be replaced with a logger or removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/components/Extensions.kt:15:5",
        "message": "Do not print an stack trace. These debug statements should be replaced with a logger or removed."
      }]
    }]
  }, {
    "group": "naming",
    "smells": [{
      "name": "MemberNameEqualsClassName",
      "description": "A member should not given the same name as its parent class or object.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/tools/Parser.kt:13:3",
        "message": "A member is named after the class. This might result in confusion. Either rename the member or change it to a constructor."
      }]
    }, {
      "name": "FunctionMaxLength",
      "description": "Function names should not be longer than the maximum set in the project configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/SettingsActivity.kt:292:3",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/NetworkModule.kt:54:3",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/components/AppModule.kt:33:3",
        "message": "Function names should be at most 30 characters long."
      }]
    }, {
      "name": "FunctionParameterNaming",
      "description": "Function parameter names should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/StockWidget.kt:100:51",
        "message": "Function parameter names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/BaseConverter.kt:16:27",
        "message": "Function parameter names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/PortfolioFragment.kt:183:43",
        "message": "Function parameter names should match the pattern: [a-z][A-Za-z0-9]*"
      }]
    }, {
      "name": "EnumNaming",
      "description": "Enum names should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/WidgetData.kt:36:7",
        "message": "Enum entry names should match the pattern: ^[A-Z][_a-zA-Z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/WidgetData.kt:37:7",
        "message": "Enum entry names should match the pattern: ^[A-Z][_a-zA-Z0-9]*"
      }]
    }, {
      "name": "VariableNaming",
      "description": "Variable names should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/NetworkModule.kt:93:5",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/NetworkModule.kt:126:5",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/NetworkModule.kt:141:5",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/NetworkModule.kt:156:5",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }]
    }, {
      "name": "ObjectPropertyNaming",
      "description": "Property names inside objects should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/StupidYahooWrapConverter.kt:29:5",
        "message": "Private object property names should match the pattern: (_)?[A-Za-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/NewsArticle.kt:9:5",
        "message": "Private object property names should match the pattern: (_)?[A-Za-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/AlarmSchedulerLollipop.kt:15:3",
        "message": "Private object property names should match the pattern: (_)?[A-Za-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/AlarmSchedulerLollipop.kt:16:3",
        "message": "Private object property names should match the pattern: (_)?[A-Za-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/StocksProvider.kt:47:5",
        "message": "Private object property names should match the pattern: (_)?[A-Za-z][A-Za-z0-9]*"
      }]
    }, {
      "name": "PackageNaming",
      "description": "Package names should match the naming convention set in the configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/drag_drop/ItemTouchHelperAdapter.kt:1:1",
        "message": "Package name should match the pattern: ^[a-z]+(\\.[a-z][a-z0-9]*)*$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/drag_drop/ItemTouchHelperViewHolder.kt:1:1",
        "message": "Package name should match the pattern: ^[a-z]+(\\.[a-z][a-z0-9]*)*$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/drag_drop/OnStartDragListener.kt:1:1",
        "message": "Package name should match the pattern: ^[a-z]+(\\.[a-z][a-z0-9]*)*$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/drag_drop/SimpleItemTouchHelperCallback.kt:1:1",
        "message": "Package name should match the pattern: ^[a-z]+(\\.[a-z][a-z0-9]*)*$"
      }]
    }]
  }, {
    "group": "performance",
    "smells": [{
      "name": "SpreadOperator",
      "description": "Using a spread operator causes a full copy of the array to be created before calling a method has a very high performance penalty.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/FileImportTask.kt:59:46",
        "message": "Using a spread operator causes a full copy of the array to be created before calling a method has a very high performance penalty."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/FileImportTask.kt:63:44",
        "message": "Using a spread operator causes a full copy of the array to be created before calling a method has a very high performance penalty."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/WidgetData.kt:64:24",
        "message": "Using a spread operator causes a full copy of the array to be created before calling a method has a very high performance penalty."
      }]
    }]
  }, {
    "group": "potential-bugs",
    "smells": [{
      "name": "UnsafeCallOnNullableType",
      "description": "It will throw a NullPointerException at runtime if your nullable value is null.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/BaseActivityUnitTest.kt:59:12",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/mock/Mocker.kt:25:22",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/ui/SpacingDecoration.kt:22:22",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/ui/SpacingDecoration.kt:24:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/ParanormalActivity.kt:149:37",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/ParanormalActivity.kt:157:37",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/WidgetDataProvider.kt:34:26",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/WidgetDataProvider.kt:85:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/WidgetDataProvider.kt:86:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/WidgetData.kt:93:16",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/StocksApi.kt:51:32",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/QueryCreator.kt:11:19",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/HistoryProvider.kt:45:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/HistoryProvider.kt:45:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/AddPositionActivity.kt:138:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/search/TickerSelectorActivity.kt:145:35",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/PortfolioFragment.kt:138:16",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/PortfolioFragment.kt:159:27",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/base/FragmentLifeCycleOwner.kt:24:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/base/FragmentLifeCycleOwner.kt:33:12",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/base/BaseGraphActivity.kt:43:31",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }]
    }, {
      "name": "UnsafeCast",
      "description": "Cast operator throws an exception if the cast is not possible.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/mock/Mocker.kt:13:22",
        "message": "mock cannot be safely cast to Any."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/mock/Mocker.kt:19:12",
        "message": "mocks[clazz] cannot be safely cast to T."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/mock/Mocker.kt:27:12",
        "message": "mocks[clazz] cannot be safely cast to T."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/network/StocksApiTest.kt:53:18",
        "message": "onNextEvents[0] cannot be safely cast to List<*>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/TestActivity.kt:13:6",
        "message": "Injector.appComponent cannot be safely cast to MockAppComponent."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/ui/SettingsTextView.kt:52:15",
        "message": "context.getSystemService(Context.INPUT_METHOD_SERVICE) cannot be safely cast to InputMethodManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/TimePreference.kt:26:12",
        "message": "picker cannot be safely cast to TimePicker."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/SettingsActivity.kt:198:32",
        "message": "findPreference(AppPreferences.FONT_SIZE) cannot be safely cast to ListPreference."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/SettingsActivity.kt:205:32",
        "message": "preference cannot be safely cast to ListPreference."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/SettingsActivity.kt:218:31",
        "message": "findPreference(AppPreferences.UPDATE_INTERVAL) cannot be safely cast to ListPreference."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/SettingsActivity.kt:225:32",
        "message": "preference cannot be safely cast to ListPreference."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/SettingsActivity.kt:237:27",
        "message": "findPreference(AppPreferences.START_TIME) cannot be safely cast to TimePreference."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/SettingsActivity.kt:258:25",
        "message": "findPreference(AppPreferences.END_TIME) cannot be safely cast to TimePreference."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/WidgetSettingsActivity.kt:125:10",
        "message": "v cannot be safely cast to SettingsTextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/ParanormalActivity.kt:79:8",
        "message": "toolbar.layoutParams cannot be safely cast to ViewGroup.MarginLayoutParams."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/ParanormalActivity.kt:85:8",
        "message": "fab_settings.layoutParams cannot be safely cast to MarginLayoutParams."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/ParanormalActivity.kt:86:8",
        "message": "add_stocks_container.layoutParams cannot be safely cast to MarginLayoutParams."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/ParanormalActivity.kt:87:8",
        "message": "edit_widget_container.layoutParams cannot be safely cast to MarginLayoutParams."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/StockWidget.kt:117:9",
        "message": "options.get(AppWidgetManager.OPTION_APPWIDGET_MIN_WIDTH) cannot be safely cast to Int."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/StocksApi.kt:55:11",
        "message": "quotes cannot be safely cast to List<Quote>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/NewsProvider.kt:44:11",
        "message": "articles cannot be safely cast to List<NewsArticle>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/components/Extensions.kt:8:31",
        "message": "this.getSystemService(\n        Context.CONNECTIVITY_SERVICE) cannot be safely cast to ConnectivityManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/components/InAppMessage.kt:24:8",
        "message": "this.findViewById<View>(android.R.id.content) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/news/GraphActivity.kt:159:18",
        "message": "v.parent cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/news/NewsFeedActivity.kt:166:25",
        "message": "it.tag cannot be safely cast to NewsArticle."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/AlarmSchedulerLollipop.kt:19:24",
        "message": "context.getSystemService(Context.JOB_SCHEDULER_SERVICE) cannot be safely cast to JobScheduler."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/HistoryProvider.kt:36:7",
        "message": "points cannot be safely cast to List<DataPoint>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/AlarmScheduler.kt:105:26",
        "message": "context.getSystemService(Context.ALARM_SERVICE) cannot be safely cast to AlarmManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/search/SuggestionsAdapter.kt:54:38",
        "message": "itemView cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/drag_drop/SimpleItemTouchHelperCallback.kt:61:30",
        "message": "viewHolder cannot be safely cast to ItemTouchHelperViewHolder."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/drag_drop/SimpleItemTouchHelperCallback.kt:72:28",
        "message": "viewHolder cannot be safely cast to ItemTouchHelperViewHolder."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/PortfolioFragment.kt:87:31",
        "message": "this cannot be safely cast to QuoteClickListener."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/PortfolioFragment.kt:87:59",
        "message": "this cannot be safely cast to OnStartDragListener."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/base/FragmentLifeCycleOwner.kt:24:17",
        "message": "fragment!!.activity cannot be safely cast to T?."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/base/BaseActivity.kt:188:17",
        "message": "getSystemService(Context.INPUT_METHOD_SERVICE) cannot be safely cast to InputMethodManager."
      }]
    }, {
      "name": "LateinitUsage",
      "description": "Usage of lateinit detected. Using lateinit for property initialization is error prone, try using constructor injection or delegation.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/TimePreference.kt:16:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/SettingsActivity.kt:59:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/SettingsActivity.kt:61:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/SettingsActivity.kt:63:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/SettingsActivity.kt:65:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/WidgetSettingsActivity.kt:54:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/HomePagerAdapter.kt:14:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/ParanormalActivity.kt:59:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/ParanormalActivity.kt:60:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/ParanormalActivity.kt:61:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/ParanormalActivity.kt:62:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/WidgetClickReceiver.kt:16:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/StockWidget.kt:31:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/StockWidget.kt:33:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/StockWidget.kt:35:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/WidgetDataProvider.kt:15:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/WidgetDataProvider.kt:17:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/RemoteStockViewAdapter.kt:30:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/RemoteStockViewAdapter.kt:32:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/RemoteStockViewAdapter.kt:34:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/RefreshReceiver.kt:16:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/WidgetData.kt:41:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/WidgetData.kt:43:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/WidgetData.kt:45:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/AppPreferences.kt:23:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/AppPreferences.kt:24:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/StocksApi.kt:20:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/StocksApi.kt:22:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/StocksApi.kt:24:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/UserAgentInterceptor.kt:20:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/RequestInterceptor.kt:24:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/NewsProvider.kt:22:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/NewsProvider.kt:24:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/components/Analytics.kt:9:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/components/Injector.kt:8:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/news/GraphActivity.kt:44:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/news/GraphActivity.kt:45:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/news/GraphActivity.kt:47:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/news/NewsFeedActivity.kt:54:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/news/NewsFeedActivity.kt:56:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/news/NewsFeedActivity.kt:58:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/news/NewsFeedActivity.kt:60:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/RefreshService.kt:17:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/StocksStorage.kt:23:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/HistoryProvider.kt:18:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/ExponentialBackoff.kt:12:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/AlarmScheduler.kt:30:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/AlarmScheduler.kt:31:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/StocksProvider.kt:51:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/StocksProvider.kt:52:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/StocksProvider.kt:53:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/StocksProvider.kt:54:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/StocksProvider.kt:55:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/StocksProvider.kt:56:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/StocksProvider.kt:57:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/StocksProvider.kt:58:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/StocksProvider.kt:59:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/StocksProvider.kt:60:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/AddPositionActivity.kt:48:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/AddPositionActivity.kt:50:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/search/TickerSelectorActivity.kt:54:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/search/TickerSelectorActivity.kt:56:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/PortfolioFragment.kt:71:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/PortfolioFragment.kt:74:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/PortfolioFragment.kt:82:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/base/BaseActivity.kt:115:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/base/BaseGraphActivity.kt:20:3",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/UpdateReceiver.kt:17:3",
        "message": "Usages of latinit should be avoided."
      }]
    }]
  }, {
    "group": "style",
    "smells": [{
      "name": "NewLineAtEndOfFile",
      "description": "Checks whether files end with a line separator.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/prod/kotlin/com/github/premnirmal/ticker/components/LoggingTree.kt:35:1",
        "message": "The file LoggingTree.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/tools/Parser.kt:53:1",
        "message": "The file Parser.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/BaseActivityUnitTest.kt:69:1",
        "message": "The file BaseActivityUnitTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/BaseUnitTest.kt:74:1",
        "message": "The file BaseUnitTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/mock/RxSchedulersOverrideRule.kt:42:1",
        "message": "The file RxSchedulersOverrideRule.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/mock/MockAppModule.kt:51:1",
        "message": "The file MockAppModule.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/mock/MockNetworkModule.kt:85:1",
        "message": "The file MockNetworkModule.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/mock/MockTestRunner.kt:17:1",
        "message": "The file MockTestRunner.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/mock/Mocker.kt:33:1",
        "message": "The file Mocker.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/mock/MockAppComponent.kt:18:1",
        "message": "The file MockAppComponent.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/network/StocksApiTest.kt:57:1",
        "message": "The file StocksApiTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/model/ExponentialBackoffTest.kt:23:1",
        "message": "The file ExponentialBackoffTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/model/AlarmSchedulerTest.kt:183:1",
        "message": "The file AlarmSchedulerTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/TestActivity.kt:16:1",
        "message": "The file TestActivity.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/purefloss/kotlin/com/github/premnirmal/ticker/components/LoggingTree.kt:14:1",
        "message": "The file LoggingTree.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/purefloss/kotlin/com/github/premnirmal/ticker/components/AnalyticsImpl.kt:8:58",
        "message": "The file AnalyticsImpl.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/dev/kotlin/com/github/premnirmal/ticker/components/LoggingTree.kt:14:1",
        "message": "The file LoggingTree.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/dev/kotlin/com/github/premnirmal/ticker/components/AnalyticsImpl.kt:9:58",
        "message": "The file AnalyticsImpl.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/ui/MaxHeightLinearLayout.kt:36:1",
        "message": "The file MaxHeightLinearLayout.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/ui/TextMarkerView.kt:33:1",
        "message": "The file TextMarkerView.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/ui/AxisFormatters.kt:40:1",
        "message": "The file AxisFormatters.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/ui/SettingsTextView.kt:83:1",
        "message": "The file SettingsTextView.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/ui/SpacingDecoration.kt:34:1",
        "message": "The file SpacingDecoration.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/ui/FabBehavior.kt:31:1",
        "message": "The file FabBehavior.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/ui/StockFieldView.kt:118:1",
        "message": "The file StockFieldView.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/DefaultPreferenceChangeListener.kt:11:1",
        "message": "The file DefaultPreferenceChangeListener.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/TimePreference.kt:78:1",
        "message": "The file TimePreference.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/FileExportTask.kt:41:1",
        "message": "The file FileExportTask.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/SettingsActivity.kt:412:1",
        "message": "The file SettingsActivity.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/WidgetSettingsActivity.kt:249:1",
        "message": "The file WidgetSettingsActivity.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/FileImportTask.kt:73:1",
        "message": "The file FileImportTask.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/HomePagerAdapter.kt:49:1",
        "message": "The file HomePagerAdapter.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/ParanormalActivity.kt:346:1",
        "message": "The file ParanormalActivity.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/SplashActivity.kt:37:1",
        "message": "The file SplashActivity.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/Extensions.kt:24:46",
        "message": "The file Extensions.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/WidgetClickReceiver.kt:38:1",
        "message": "The file WidgetClickReceiver.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/StockWidget.kt:161:1",
        "message": "The file StockWidget.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/RemoteStockProviderService.kt:17:1",
        "message": "The file RemoteStockProviderService.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/WidgetDataProvider.kt:91:1",
        "message": "The file WidgetDataProvider.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/RefreshReceiver.kt:22:1",
        "message": "The file RefreshReceiver.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/WidgetData.kt:257:1",
        "message": "The file WidgetData.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/AppPreferences.kt:154:1",
        "message": "The file AppPreferences.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/StocksApp.kt:104:1",
        "message": "The file StocksApp.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/HistoricalDataApi.kt:22:1",
        "message": "The file HistoricalDataApi.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/RobindahoodException.kt:6:55",
        "message": "The file RobindahoodException.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/StocksApi.kt:69:1",
        "message": "The file StocksApi.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/UserAgentInterceptor.kt:39:1",
        "message": "The file UserAgentInterceptor.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/RequestInterceptor.kt:40:1",
        "message": "The file RequestInterceptor.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/NewsApi.kt:30:1",
        "message": "The file NewsApi.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/Robindahood.kt:21:1",
        "message": "The file Robindahood.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/StupidYahooWrapConverter.kt:32:1",
        "message": "The file StupidYahooWrapConverter.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/SimpleSubscriber.kt:21:1",
        "message": "The file SimpleSubscriber.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/NewsProvider.kt:49:1",
        "message": "The file NewsProvider.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/BaseConverter.kt:25:1",
        "message": "The file BaseConverter.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Position.kt:26:1",
        "message": "The file Position.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/ErrorBody.kt:6:54",
        "message": "The file ErrorBody.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/NewsArticle.kt:25:1",
        "message": "The file NewsArticle.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Source.kt:3:67",
        "message": "The file Source.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/NewsFeed.kt:7:1",
        "message": "The file NewsFeed.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/DataPoint.kt:37:1",
        "message": "The file DataPoint.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Quote.kt:133:1",
        "message": "The file Quote.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/QuoteNet.kt:12:65",
        "message": "The file QuoteNet.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/HistoricalData.kt:19:28",
        "message": "The file HistoricalData.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/components/Extensions.kt:22:1",
        "message": "The file Extensions.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/components/AppModule.kt:43:1",
        "message": "The file AppModule.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/components/InAppMessage.kt:76:1",
        "message": "The file InAppMessage.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/components/AppClock.kt:23:1",
        "message": "The file AppClock.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/components/Analytics.kt:15:1",
        "message": "The file Analytics.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/components/Injector.kt:13:1",
        "message": "The file Injector.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/components/AppComponent.kt:113:1",
        "message": "The file AppComponent.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/news/GraphActivity.kt:165:1",
        "message": "The file GraphActivity.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/news/NewsFeedActivity.kt:256:1",
        "message": "The file NewsFeedActivity.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/AlarmSchedulerLollipop.kt:40:1",
        "message": "The file AlarmSchedulerLollipop.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/RefreshService.kt:55:1",
        "message": "The file RefreshService.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/IStocksProvider.kt:46:1",
        "message": "The file IStocksProvider.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/HistoryProvider.kt:68:1",
        "message": "The file HistoryProvider.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/ExponentialBackoff.kt:36:1",
        "message": "The file ExponentialBackoff.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/IHistoryProvider.kt:23:1",
        "message": "The file IHistoryProvider.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/AddPositionActivity.kt:143:1",
        "message": "The file AddPositionActivity.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/search/TickerSelectorActivity.kt:182:1",
        "message": "The file TickerSelectorActivity.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/drag_drop/ItemTouchHelperAdapter.kt:11:1",
        "message": "The file ItemTouchHelperAdapter.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/drag_drop/ItemTouchHelperViewHolder.kt:11:1",
        "message": "The file ItemTouchHelperViewHolder.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/drag_drop/OnStartDragListener.kt:12:1",
        "message": "The file OnStartDragListener.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/drag_drop/SimpleItemTouchHelperCallback.kt:77:1",
        "message": "The file SimpleItemTouchHelperCallback.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/PortfolioFragment.kt:224:1",
        "message": "The file PortfolioFragment.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/events/RefreshEvent.kt:6:18",
        "message": "The file RefreshEvent.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/events/ErrorEvent.kt:3:42",
        "message": "The file ErrorEvent.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/base/FragmentLifeCycleOwner.kt:39:1",
        "message": "The file FragmentLifeCycleOwner.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/base/BaseGraphActivity.kt:91:1",
        "message": "The file BaseGraphActivity.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/UpdateReceiver.kt:23:1",
        "message": "The file UpdateReceiver.kt is not ending with a new line."
      }]
    }, {
      "name": "UnusedPrivateMember",
      "description": "Private member is unused.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/prod/kotlin/com/github/premnirmal/ticker/components/AnalyticsImpl.kt:8:30",
        "message": "Private property context is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/tools/Parser.kt:24:7",
        "message": "Private property in is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/tools/Parser.kt:37:25",
        "message": "Function parameter in is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/mock/MockNetworkModule.kt:78:41",
        "message": "Function parameter context is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/mock/MockNetworkModule.kt:30:52",
        "message": "Function parameter bus is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/mock/MockNetworkModule.kt:78:59",
        "message": "Function parameter okHttpClient is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/mock/MockNetworkModule.kt:79:7",
        "message": "Function parameter gson is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/mock/MockNetworkModule.kt:79:19",
        "message": "Function parameter converterFactory is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/mock/MockNetworkModule.kt:80:7",
        "message": "Function parameter rxJavaFactory is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/purefloss/kotlin/com/github/premnirmal/ticker/components/LoggingTree.kt:11:15",
        "message": "Private property context is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/purefloss/kotlin/com/github/premnirmal/ticker/components/AnalyticsImpl.kt:8:30",
        "message": "Private property context is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/dev/kotlin/com/github/premnirmal/ticker/components/LoggingTree.kt:11:15",
        "message": "Private property context is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/dev/kotlin/com/github/premnirmal/ticker/components/AnalyticsImpl.kt:9:30",
        "message": "Private property context is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/ui/MaxHeightLinearLayout.kt:25:54",
        "message": "Private property defStyleAttr is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/ui/SettingsTextView.kt:40:74",
        "message": "Private property defStyleRes is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/ui/StockFieldView.kt:88:54",
        "message": "Private property defStyleAttr is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/ui/StockFieldView.kt:90:54",
        "message": "Private property defStyleAttr is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/ui/StockFieldView.kt:90:73",
        "message": "Private property defStyleRes is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/NetworkModule.kt:55:66",
        "message": "Function parameter bus is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/NetworkModule.kt:154:7",
        "message": "Function parameter gson is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/BaseConverter.kt:16:27",
        "message": "Function parameter is is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/DataPoint.kt:24:5",
        "message": "Private property FORMATTER is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/news/NewsFeedActivity.kt:251:17",
        "message": "Function parameter v is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/PortfolioFragment.kt:183:43",
        "message": "Function parameter _position is unused."
      }]
    }, {
      "name": "ExpressionBodySyntax",
      "description": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/tools/Parser.kt:50:68",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/BaseActivityUnitTest.kt:58:53",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/BaseUnitTest.kt:67:52",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/BaseUnitTest.kt:71:58",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/mock/RxSchedulersOverrideRule.kt:17:41",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/mock/MockNetworkModule.kt:40:69",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/mock/MockNetworkModule.kt:45:66",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/mock/MockTestRunner.kt:14:98",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/AppPreferences.kt:70:32",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/NetworkModule.kt:69:46",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/NetworkModule.kt:74:36",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/NetworkModule.kt:79:69",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/NetworkModule.kt:84:66",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/DataPoint.kt:28:64",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/DataPoint.kt:32:59",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/components/Extensions.kt:20:30",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/components/InAppMessage.kt:19:58",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/StocksStorage.kt:30:40",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/StocksStorage.kt:39:49",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/StocksStorage.kt:43:49",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/StocksStorage.kt:51:42",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/StocksProvider.kt:348:36",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/search/SuggestionsAdapter.kt:25:36",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/search/SuggestionsAdapter.kt:29:50",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/search/SuggestionsAdapter.kt:39:47",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/PortfolioFragment.kt:152:43",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/base/FragmentLifeCycleOwner.kt:32:71",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }]
    }, {
      "name": "ModifierOrder",
      "description": "Modifier order should be: protected lateinit",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/BaseActivityUnitTest.kt:20:3",
        "message": "Modifier order should be: protected lateinit"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/BaseActivityUnitTest.kt:21:3",
        "message": "Modifier order should be: protected lateinit"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/BaseUnitTest.kt:56:3",
        "message": "Modifier order should be: @Before public override"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/TimePreference.kt:16:3",
        "message": "Modifier order should be: private lateinit"
      }]
    }, {
      "name": "SpacingBetweenPackageAndImports",
      "description": "Violation of the package declaration style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/BaseUnitTest.kt:24:30",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of BaseUnitTest."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/test/kotlin/com/github/premnirmal/ticker/mock/RxSchedulersOverrideRule.kt:10:37",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of RxSchedulersOverrideRule."
      }]
    }, {
      "name": "UnusedImports",
      "description": "Unused Imports are dead code and should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/dev/kotlin/com/github/premnirmal/ticker/components/AnalyticsImpl.kt:4:1",
        "message": "The import 'java.util.logging.Logger' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/FileExportTask.kt:4:1",
        "message": "The import 'android.text.TextUtils' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/StocksApp.kt:3:1",
        "message": "The import 'android.app.Application' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/BaseConverter.kt:4:1",
        "message": "The import 'com.google.gson.GsonBuilder' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Position.kt:3:1",
        "message": "The import 'com.github.premnirmal.ticker.AppPreferences' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/UpdateReceiver.kt:6:1",
        "message": "The import 'android.content.SharedPreferences' is unused."
      }]
    }, {
      "name": "UnnecessaryParentheses",
      "description": "Unnecessary parentheses don't add any value to the code and should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/ui/SpacingDecoration.kt:24:24",
        "message": "Parentheses in (parent.adapter!!.itemCount % 2 == 0) are unnecessary and can be replaced with: parent.adapter!!.itemCount % 2 == 0"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/FileExportTask.kt:27:32",
        "message": "Parentheses in (\"$ticker, \") are unnecessary and can be replaced with: \"$ticker, \""
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/ParanormalActivity.kt:197:33",
        "message": "Parentheses in ((rect.right - rect.left) / 2) are unnecessary and can be replaced with: (rect.right - rect.left) / 2"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/ParanormalActivity.kt:197:19",
        "message": "Parentheses in (rect.right - ((rect.right - rect.left) / 2)) are unnecessary and can be replaced with: rect.right - ((rect.right - rect.left) / 2)"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/ParanormalActivity.kt:198:34",
        "message": "Parentheses in ((rect.bottom - rect.top) / 2) are unnecessary and can be replaced with: (rect.bottom - rect.top) / 2"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/ParanormalActivity.kt:198:19",
        "message": "Parentheses in (rect.bottom - ((rect.bottom - rect.top) / 2)) are unnecessary and can be replaced with: rect.bottom - ((rect.bottom - rect.top) / 2)"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/AppPreferences.kt:85:33",
        "message": "Parentheses in (random.nextInt() % 4 == 0) are unnecessary and can be replaced with: random.nextInt() % 4 == 0"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Quote.kt:99:42",
        "message": "Parentheses in (gainLoss() / holdings()) are unnecessary and can be replaced with: gainLoss() / holdings()"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/AlarmScheduler.kt:46:9",
        "message": "Parentheses in (startTimez[0] == endTimez[0] && startTimez[1] > endTimez[1]) are unnecessary and can be replaced with: startTimez[0] == endTimez[0] && startTimez[1] > endTimez[1]"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/AddPositionActivity.kt:36:22",
        "message": "Parentheses in (5) are unnecessary and can be replaced with: 5"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/AddPositionActivity.kt:36:48",
        "message": "Parentheses in (1) are unnecessary and can be replaced with: 1"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/drag_drop/SimpleItemTouchHelperCallback.kt:25:50",
        "message": "Parentheses in (ItemTouchHelper.DOWN) are unnecessary and can be replaced with: ItemTouchHelper.DOWN"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/drag_drop/SimpleItemTouchHelperCallback.kt:26:11",
        "message": "Parentheses in (ItemTouchHelper.LEFT) are unnecessary and can be replaced with: ItemTouchHelper.LEFT"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/drag_drop/SimpleItemTouchHelperCallback.kt:26:37",
        "message": "Parentheses in (ItemTouchHelper.RIGHT) are unnecessary and can be replaced with: ItemTouchHelper.RIGHT"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/drag_drop/SimpleItemTouchHelperCallback.kt:30:50",
        "message": "Parentheses in (ItemTouchHelper.DOWN) are unnecessary and can be replaced with: ItemTouchHelper.DOWN"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/drag_drop/SimpleItemTouchHelperCallback.kt:31:54",
        "message": "Parentheses in (ItemTouchHelper.END) are unnecessary and can be replaced with: ItemTouchHelper.END"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/base/BaseActivity.kt:58:35",
        "message": "Parentheses in ((rect.right - rect.left) / 2) are unnecessary and can be replaced with: (rect.right - rect.left) / 2"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/base/BaseActivity.kt:58:21",
        "message": "Parentheses in (rect.right - ((rect.right - rect.left) / 2)) are unnecessary and can be replaced with: rect.right - ((rect.right - rect.left) / 2)"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/base/BaseActivity.kt:59:36",
        "message": "Parentheses in ((rect.bottom - rect.top) / 2) are unnecessary and can be replaced with: (rect.bottom - rect.top) / 2"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/base/BaseActivity.kt:59:21",
        "message": "Parentheses in (rect.bottom - ((rect.bottom - rect.top) / 2)) are unnecessary and can be replaced with: rect.bottom - ((rect.bottom - rect.top) / 2)"
      }]
    }, {
      "name": "MagicNumber",
      "description": "Report magic numbers. Magic number is a numeric literal that is not defined as a constant and hence it's unclear what the purpose of this number is. It's better to declare such numbers as constants and give them a proper name. By default, -1, 0, 1, and 2 are not considered to be magic numbers.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/ui/StockFieldView.kt:38:13",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/ui/StockFieldView.kt:40:13",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/ui/StockFieldView.kt:53:83",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/ui/StockFieldView.kt:55:69",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/TimePreference.kt:40:39",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/TimePreference.kt:41:43",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/SettingsActivity.kt:287:37",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/HomePagerAdapter.kt:48:22",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/ParanormalActivity.kt:207:41",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/ParanormalActivity.kt:223:42",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/home/SplashActivity.kt:26:16",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/StockWidget.kt:102:19",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/StockWidget.kt:103:19",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/StockWidget.kt:104:19",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/AppPreferences.kt:85:53",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Quote.kt:99:70",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Quote.kt:124:30",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/components/Extensions.kt:21:17",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/components/Extensions.kt:21:22",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/news/GraphActivity.kt:58:33",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/news/NewsFeedActivity.kt:70:83",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/AlarmSchedulerLollipop.kt:15:33",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/AlarmSchedulerLollipop.kt:16:33",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/AlarmSchedulerLollipop.kt:16:37",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/AlarmSchedulerLollipop.kt:16:42",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/ExponentialBackoff.kt:9:31",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/ExponentialBackoff.kt:9:38",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/ExponentialBackoff.kt:11:30",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/ExponentialBackoff.kt:11:37",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/ExponentialBackoff.kt:11:42",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/AlarmScheduler.kt:70:71",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/AlarmScheduler.kt:84:54",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/AlarmScheduler.kt:97:50",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/AlarmScheduler.kt:97:57",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/StocksProvider.kt:239:26",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/PortfolioVH.kt:66:22",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/base/BaseGraphActivity.kt:58:24",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/base/BaseGraphActivity.kt:61:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/base/BaseGraphActivity.kt:72:22",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/base/BaseGraphActivity.kt:73:22",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/base/BaseGraphActivity.kt:76:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/base/BaseGraphActivity.kt:77:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }]
    }, {
      "name": "ReturnCount",
      "description": "Restrict the number of return statements in methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/FileExportTask.kt:17:3",
        "message": "Function doInBackground has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/FileImportTask.kt:21:3",
        "message": "Function doInBackground has 5 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/components/Extensions.kt:6:1",
        "message": "Function isNetworkOnline has 5 return statements which exceeds the limit of 2."
      }]
    }, {
      "name": "ForbiddenVoid",
      "description": "`Unit` should be used instead of `Void`.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/FileExportTask.kt:15:62",
        "message": "'Void' should be replaced with 'Unit'."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/FileImportTask.kt:19:77",
        "message": "'Void' should be replaced with 'Unit'."
      }]
    }, {
      "name": "OptionalWhenBraces",
      "description": "Optional braces in when expression",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/SettingsActivity.kt:371:7",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/SettingsActivity.kt:378:7",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/SettingsActivity.kt:385:7",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/WidgetSettingsActivity.kt:120:7",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/WidgetSettingsActivity.kt:133:7",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/WidgetSettingsActivity.kt:146:7",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/settings/WidgetSettingsActivity.kt:157:7",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/PortfolioFragment.kt:106:9",
        "message": "Optional braces in when expression"
      }]
    }, {
      "name": "MayBeConst",
      "description": "Reports vals that can be const val instead.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/WidgetClickReceiver.kt:34:5",
        "message": "CLICK_BCAST_INTENTFILTER can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/WidgetClickReceiver.kt:35:5",
        "message": "FLIP can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/AlarmSchedulerLollipop.kt:15:3",
        "message": "JOB_ID_SCHEDULE can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/AlarmSchedulerLollipop.kt:16:3",
        "message": "FIVE_MINUTES_MS can be a `const val`."
      }]
    }, {
      "name": "MandatoryBracesIfStatements",
      "description": "Multi-line if statement was found that does not have braces. These should be added to improve readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/widget/WidgetData.kt:124:12",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }]
    }, {
      "name": "DataClassContainsFunctions",
      "description": "Data classes should mainly be used to store data and should not have any extra functions. (Compiler will automatically generate equals, toString and hashCode functions)",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Position.kt:7:3",
        "message": "The data class Position contains functions which are not registered conversion functions. The offending method is called add"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Position.kt:11:3",
        "message": "The data class Position contains functions which are not registered conversion functions. The offending method is called remove"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Position.kt:15:3",
        "message": "The data class Position contains functions which are not registered conversion functions. The offending method is called averagePrice"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/NewsArticle.kt:19:3",
        "message": "The data class NewsArticle contains functions which are not registered conversion functions. The offending method is called getSourceName"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/NewsArticle.kt:21:3",
        "message": "The data class NewsArticle contains functions which are not registered conversion functions. The offending method is called date"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/NewsArticle.kt:24:3",
        "message": "The data class NewsArticle contains functions which are not registered conversion functions. The offending method is called dateString"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Quote.kt:42:3",
        "message": "The data class Quote contains functions which are not registered conversion functions. The offending method is called hasPositions"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Quote.kt:44:3",
        "message": "The data class Quote contains functions which are not registered conversion functions. The offending method is called changeString"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Quote.kt:46:3",
        "message": "The data class Quote contains functions which are not registered conversion functions. The offending method is called changeStringWithSign"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Quote.kt:54:3",
        "message": "The data class Quote contains functions which are not registered conversion functions. The offending method is called changePercentString"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Quote.kt:56:3",
        "message": "The data class Quote contains functions which are not registered conversion functions. The offending method is called changePercentStringWithSign"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Quote.kt:64:3",
        "message": "The data class Quote contains functions which are not registered conversion functions. The offending method is called positionPrice"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Quote.kt:76:3",
        "message": "The data class Quote contains functions which are not registered conversion functions. The offending method is called priceString"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Quote.kt:78:3",
        "message": "The data class Quote contains functions which are not registered conversion functions. The offending method is called averagePositionPrice"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Quote.kt:80:3",
        "message": "The data class Quote contains functions which are not registered conversion functions. The offending method is called numSharesString"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Quote.kt:84:3",
        "message": "The data class Quote contains functions which are not registered conversion functions. The offending method is called holdings"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Quote.kt:86:3",
        "message": "The data class Quote contains functions which are not registered conversion functions. The offending method is called holdingsString"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Quote.kt:88:3",
        "message": "The data class Quote contains functions which are not registered conversion functions. The offending method is called gainLoss"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Quote.kt:90:3",
        "message": "The data class Quote contains functions which are not registered conversion functions. The offending method is called gainLossString"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Quote.kt:99:3",
        "message": "The data class Quote contains functions which are not registered conversion functions. The offending method is called gainLossPercent"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Quote.kt:101:3",
        "message": "The data class Quote contains functions which are not registered conversion functions. The offending method is called gainLossPercentString"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Quote.kt:110:3",
        "message": "The data class Quote contains functions which are not registered conversion functions. The offending method is called dayChange"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Quote.kt:112:3",
        "message": "The data class Quote contains functions which are not registered conversion functions. The offending method is called dayChangeString"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/network/data/Quote.kt:121:3",
        "message": "The data class Quote contains functions which are not registered conversion functions. The offending method is called newsQuery"
      }]
    }, {
      "name": "PreferToOverPairSyntax",
      "description": "Pair was created using the Pair constructor, using the to syntax is preferred.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/HistoryProvider.kt:59:36",
        "message": "Pair is created by using the pair constructor. This can replaced by `symbol to points`"
      }]
    }, {
      "name": "SerialVersionUIDInSerializableClass",
      "description": "A class which implements the Serializable interface does not define a correct serialVersionUID field. The serialVersionUID field should be a constant long value inside a companion object.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/model/IHistoryProvider.kt:14:3",
        "message": "The class Range implements the Serializable interface and should thus define a serialVersionUID."
      }]
    }, {
      "name": "NestedClassesVisibility",
      "description": "Nested types are often used for implementing private functionality and therefore this should not be public.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/search/SuggestionsAdapter.kt:21:3",
        "message": "Nested types are often used for implementing private functionality. However the visibility of SuggestionsAdapter makes it visible externally."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/search/SuggestionsAdapter.kt:52:3",
        "message": "Nested types are often used for implementing private functionality. However the visibility of SuggestionsAdapter makes it visible externally."
      }]
    }, {
      "name": "CollapsibleIfStatements",
      "description": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/premnirmal-StockTicker/app/src/main/kotlin/com/github/premnirmal/ticker/portfolio/drag_drop/SimpleItemTouchHelperCallback.kt:59:5",
        "message": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability."
      }]
    }]
  }]
}