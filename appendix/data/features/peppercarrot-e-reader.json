{
  "complexity_metrics": {
    "loc": 2258,
    "sloc": 1376,
    "lloc": 886,
    "cloc": 632,
    "mcc": 226,
    "n_smell": 83,
    "comment_ratio": 45,
    "mcc_per_thlines": 255
  },
  "metrics": {
    "number_of_string": 106,
    "number_of_string_template": 20,
    "number_of_inline_func": 0,
    "number_of_inferred_fun": 8,
    "number_of_inferred_var": 130,
    "number_of_objects_declarations": 16,
    "number_of_companion_objects": 12,
    "number_of_singletons": 0,
    "number_of_declaration": 162,
    "number_of_var_declaration": 162,
    "number_of_func_call": 527,
    "number_of_arguments": 518,
    "number_of_parameters": 185,
    "number_of_qualified_expressions": 589,
    "number_of_inheritances": 23,
    "number_of_unsafe_calls": 20,
    "number_of_safe_calls": 4,
    "number_of_destructuring_declarations": 0,
    "number_of_when_expressions": 4,
    "number_of_functions_with_default_value": 0,
    "number_of_function_call_with_named_value": 0,
    "number_of_named_argument": 0,
    "number_of_argument_with_default_value": 0,
    "number_of_overloaded_op": 0,
    "number_of_extension_function": 0,
    "number_of_properties_delegation": 7,
    "number_of_super_delegation": 0,
    "number_of_ranges": 3,
    "number_of_lambdas": 62,
    "number_of_possible_smart_casts": 6,
    "number_of_data_class": 2,
    "number_of_properties": 162,
    "number_of_functions": 116,
    "number_of_interfaces": 1,
    "number_of_classes": 25,
    "number_of_packages": 6,
    "number_of_kts_files": 0,
    "number_of_kt_files": 28
  },
  "findings": [{
    "group": "complexity",
    "smells": [{
      "name": "LabeledExpression",
      "description": "Expression with labels increase complexity and affect maintainability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/ComicViewerFragment.kt:134:21",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/ComicViewerFragment.kt:140:25",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/activities/SplashActivity.kt:57:17",
        "message": "Expression with labels increase complexity and affect maintainability."
      }]
    }, {
      "name": "NestedBlockDepth",
      "description": "Excessive nesting leads to hidden complexity. Prefer extracting code to make it easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/utils/BaseCacheDataManager.kt:98:5",
        "message": "Function getAll is nested too deeply."
      }]
    }]
  }, {
    "group": "empty-blocks",
    "smells": [{
      "name": "EmptyCatchBlock",
      "description": "Empty block of code detected. As they serve no purpose they should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/adapters/ArchiveViewPagerAdapter.kt:50:43",
        "message": "This empty block of code can be removed."
      }]
    }]
  }, {
    "group": "exceptions",
    "smells": [{
      "name": "PrintStackTrace",
      "description": "Do not print an stack trace. These debug statements should be replaced with a logger or removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/AboutFragment.kt:56:13",
        "message": "Do not print an stack trace. These debug statements should be replaced with a logger or removed."
      }]
    }, {
      "name": "TooGenericExceptionCaught",
      "description": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/adapters/ArchiveViewPagerAdapter.kt:50:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }]
    }, {
      "name": "TooGenericExceptionThrown",
      "description": "Thrown exception is too generic. Prefer throwing project specific exceptions to handle error cases.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/activities/MainActivity.kt:118:13",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }]
    }]
  }, {
    "group": "naming",
    "smells": [{
      "name": "MemberNameEqualsClassName",
      "description": "A member should not given the same name as its parent class or object.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/utils/data.kt:34:9",
        "message": "A member is named after the class. This might result in confusion. Either rename the member or change it to a constructor."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/utils/data.kt:43:9",
        "message": "A member is named after the class. This might result in confusion. Either rename the member or change it to a constructor."
      }]
    }, {
      "name": "ConstructorParameterNaming",
      "description": "Constructor parameter names should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/utils/data.kt:31:20",
        "message": "Constructor parameter names should match the pattern: [a-z][A-Za-z0-9]*"
      }]
    }]
  }, {
    "group": "potential-bugs",
    "smells": [{
      "name": "UnsafeCallOnNullableType",
      "description": "It will throw a NullPointerException at runtime if your nullable value is null.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/ArchiveViewPagerFragment.kt:34:75",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/AboutFragment.kt:53:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/AboutFragment.kt:53:60",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/AboutFragment.kt:59:16",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/ArchiveFragment.kt:50:45",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/ArchiveFragment.kt:60:33",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/ArchiveFragment.kt:95:54",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/ComicViewerFragment.kt:64:23",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/ComicViewerFragment.kt:121:37",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/ComicViewerFragment.kt:125:40",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/ComicViewerFragment.kt:138:71",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/ComicViewerFragment.kt:161:67",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/utils/net.kt:95:12",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/adapters/ArchiveViewPagerAdapter.kt:43:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/adapters/ArchiveViewPagerAdapter.kt:55:34",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/adapters/ArchiveViewPagerAdapter.kt:62:34",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/viewholders/LanguageSelectionViewHolder.kt:36:29",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/viewholders/EpisodeCoverViewHolder.kt:53:27",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/activities/ComicViewerActivity.kt:89:31",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/activities/ComicViewerActivity.kt:101:31",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }]
    }, {
      "name": "LateinitUsage",
      "description": "Usage of lateinit detected. Using lateinit for property initialization is error prone, try using constructor injection or delegation.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/ArchiveFragment.kt:44:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/ComicViewerFragment.kt:58:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/viewholders/LanguageSelectionViewHolder.kt:28:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/viewholders/EpisodeCoverViewHolder.kt:54:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/activities/ComicViewerActivity.kt:70:5",
        "message": "Usages of latinit should be avoided."
      }]
    }, {
      "name": "UnsafeCast",
      "description": "Cast operator throws an exception if the cast is not possible.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/ArchiveFragment.kt:87:92",
        "message": "it cannot be safely cast to Episode."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/ArchiveFragment.kt:98:28",
        "message": "list cannot be safely cast to List<*>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/ComicViewerFragment.kt:78:32",
        "message": "activity cannot be safely cast to ComicViewerActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/ComicViewerFragment.kt:136:27",
        "message": "available cannot be safely cast to Boolean."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/ViewPagerFragment.kt:43:14",
        "message": "activity cannot be safely cast to TabListener."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/ViewPagerFragment.kt:52:14",
        "message": "activity cannot be safely cast to TabListener."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/utils/misc.kt:60:19",
        "message": "context.getSystemService(Context.ALARM_SERVICE) cannot be safely cast to AlarmManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/utils/misc.kt:70:14",
        "message": "context.getSystemService(Context.CONNECTIVITY_SERVICE) cannot be safely cast to ConnectivityManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/AlarmReceiver.kt:51:31",
        "message": "context.getSystemService(Context.CONNECTIVITY_SERVICE) cannot be safely cast to ConnectivityManager."
      }]
    }]
  }, {
    "group": "style",
    "smells": [{
      "name": "NewLineAtEndOfFile",
      "description": "Checks whether files end with a line separator.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/TabListener.kt:30:1",
        "message": "The file TabListener.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/ArchiveViewPagerFragment.kt:36:1",
        "message": "The file ArchiveViewPagerFragment.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/ViewPagerFragment.kt:55:1",
        "message": "The file ViewPagerFragment.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/utils/lang.kt:37:1",
        "message": "The file lang.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/viewholders/BaseViewHolder.kt:27:1",
        "message": "The file BaseViewHolder.kt is not ending with a new line."
      }]
    }, {
      "name": "MandatoryBracesIfStatements",
      "description": "Multi-line if statement was found that does not have braces. These should be added to improve readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/ArchiveFragment.kt:61:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/ArchiveFragment.kt:81:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/ArchiveFragment.kt:81:9",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/ArchiveFragment.kt:100:21",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/utils/LanguageDataManager.kt:60:17",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/utils/lang.kt:33:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/utils/BaseCacheDataManager.kt:77:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/utils/BaseCacheDataManager.kt:101:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/adapters/ArchiveAdapter.kt:45:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/viewholders/LanguageSelectionViewHolder.kt:38:17",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/viewholders/EpisodeCoverViewHolder.kt:80:17",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/viewholders/EpisodeCoverViewHolder.kt:80:17",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/activities/MainActivity.kt:98:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/activities/ComicViewerActivity.kt:141:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/activities/SplashActivity.kt:91:21",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/AlarmReceiver.kt:53:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }]
    }, {
      "name": "ForbiddenComment",
      "description": "Flags a forbidden comment. Defaults values are TODO:, FIXME: or STOPSHIP:",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/fragments/ComicViewerFragment.kt:108:9",
        "message": "This comment contains text that has been defined as forbidden in detekt."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/activities/MainActivity.kt:71:16",
        "message": "This comment contains text that has been defined as forbidden in detekt."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/AlarmReceiver.kt:63:12",
        "message": "This comment contains text that has been defined as forbidden in detekt."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/AlarmReceiver.kt:90:24",
        "message": "This comment contains text that has been defined as forbidden in detekt."
      }]
    }, {
      "name": "MagicNumber",
      "description": "Report magic numbers. Magic number is a numeric literal that is not defined as a constant and hence it's unclear what the purpose of this number is. It's better to declare such numbers as constants and give them a proper name. By default, -1, 0, 1, and 2 are not considered to be magic numbers.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/utils/ArchiveDataManager.kt:72:41",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/utils/LanguageDataManager.kt:72:42",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/utils/LanguageDataManager.kt:73:44",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/utils/LanguageDataManager.kt:74:40",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/utils/LanguageDataManager.kt:75:36",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/viewholders/EpisodeCoverViewHolder.kt:96:28",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/viewholders/EpisodeCoverViewHolder.kt:119:41",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/activities/ComicViewerActivity.kt:123:21",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/activities/ComicViewerActivity.kt:128:21",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }]
    }, {
      "name": "PreferToOverPairSyntax",
      "description": "Pair was created using the Pair constructor, using the to syntax is preferred.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/adapters/LanguageSelectionRecyclerViewAdapter.kt:44:23",
        "message": "Pair is created by using the pair constructor. This can replaced by `language to isRecommended`"
      }]
    }, {
      "name": "MaxLineLength",
      "description": "Line detected that is longer than the defined maximum line length in the code style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/activities/SplashActivity.kt:62:134",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }]
    }, {
      "name": "ReturnCount",
      "description": "Restrict the number of return statements in methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/AlarmReceiver.kt:39:5",
        "message": "Function onReceive has 4 return statements which exceeds the limit of 2."
      }]
    }, {
      "name": "UnusedPrivateMember",
      "description": "Private member is unused.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/peppercarrot-e-reader/app/src/main/java/nightlock/peppercarrot/AlarmReceiver.kt:67:21",
        "message": "Private property updated is unused."
      }]
    }]
  }]
}