{
  "complexity_metrics": {
    "loc": 8011,
    "sloc": 5945,
    "lloc": 3723,
    "cloc": 151,
    "mcc": 1045,
    "n_smell": 582,
    "comment_ratio": 2,
    "mcc_per_thlines": 280
  },
  "metrics": {
    "number_of_string": 613,
    "number_of_string_template": 13,
    "number_of_inline_func": 0,
    "number_of_inferred_fun": 69,
    "number_of_inferred_var": 474,
    "number_of_objects_declarations": 32,
    "number_of_companion_objects": 12,
    "number_of_singletons": 8,
    "number_of_declaration": 606,
    "number_of_var_declaration": 609,
    "number_of_func_call": 3146,
    "number_of_arguments": 3169,
    "number_of_parameters": 606,
    "number_of_qualified_expressions": 3648,
    "number_of_inheritances": 46,
    "number_of_unsafe_calls": 94,
    "number_of_safe_calls": 36,
    "number_of_destructuring_declarations": 3,
    "number_of_when_expressions": 31,
    "number_of_functions_with_default_value": 8,
    "number_of_function_call_with_named_value": 15,
    "number_of_named_argument": 18,
    "number_of_argument_with_default_value": 10,
    "number_of_overloaded_op": 0,
    "number_of_extension_function": 3,
    "number_of_properties_delegation": 23,
    "number_of_super_delegation": 0,
    "number_of_ranges": 13,
    "number_of_lambdas": 175,
    "number_of_possible_smart_casts": 3,
    "number_of_data_class": 0,
    "number_of_properties": 603,
    "number_of_functions": 479,
    "number_of_interfaces": 6,
    "number_of_classes": 131,
    "number_of_packages": 18,
    "number_of_kts_files": 0,
    "number_of_kt_files": 129
  },
  "findings": [{
    "group": "complexity",
    "smells": [{
      "name": "StringLiteralDuplication",
      "description": "Multiple occurrences of the same string literal within a single file detected.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:47:26",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:39:27",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheNavigationDrawer.kt:55:25",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:305:48",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:89:40",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/quirk_fix/URLRewriteController.kt:46:45",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/quirk_fix/URLRewriteController.kt:46:32",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassMenuOptions.kt:32:36",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/ApplePassbookQuirkCorrector.kt:79:55",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/ApplePassbookQuirkCorrector.kt:58:53",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/ApplePassbookQuirkCorrector.kt:78:55",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/ApplePassbookQuirkCorrector.kt:61:41",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/ApplePassbookQuirkCorrector.kt:39:36",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/ApplePassbookQuirkCorrector.kt:186:64",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/ApplePassbookQuirkCorrector.kt:158:64",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/ApplePassbookQuirkCorrector.kt:73:53",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/Barcode.kt:47:15",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }]
    }, {
      "name": "TooManyFunctions",
      "description": "Too many functions inside a/an file/class/object/interface always indicate a violation of the single responsibility principle. Maybe the file/class/object/interface wants to manage to many things at once. Extract functionality which clearly belongs together.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewActivity.kt:21:1",
        "message": "Class 'ThePassViewActivity' with '12' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewActivityBase.kt:29:1",
        "message": "Class 'PassViewActivityBase' with '12' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassListActivity.kt:48:1",
        "message": "Class 'PassListActivity' with '19' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/ApplePassbookQuirkCorrector.kt:9:1",
        "message": "Class 'ApplePassbookQuirkCorrector' with '13' functions detected. Defined threshold inside classes is set to '11'"
      }]
    }, {
      "name": "LabeledExpression",
      "description": "Expression with labels increase complexity and affect maintainability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/injections/FixedPassListPassStore.kt:28:9",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewActivityBase.kt:229:21",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassListFragment.kt:54:17",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/UnzipPassDialog.kt:45:33",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/UnzipPassDialog.kt:55:33",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassImportActivity.kt:93:79",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassEditActivity.kt:59:49",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassEditActivity.kt:60:46",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassEditActivity.kt:61:83",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassEditActivity.kt:86:35",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassEditActivity.kt:88:21",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassEditActivity.kt:120:89",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassEditActivity.kt:133:70",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassListActivity.kt:69:33",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassListActivity.kt:92:13",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/App.kt:25:46",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/App.kt:45:71",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/App.kt:46:59",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/comparator/PassTemporalDistanceComparator.kt:15:13",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/comparator/PassByTimeComparator.kt:11:13",
        "message": "Expression with labels increase complexity and affect maintainability."
      }]
    }, {
      "name": "LongMethod",
      "description": "One method should have one responsibility. Long methods tend to handle many things at once. Prefer smaller methods to make them easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:29:5",
        "message": "The function read is too long. The maximum length is 20."
      }]
    }, {
      "name": "LargeClass",
      "description": "One class should have one responsibility. Large classes tend to handle many things at once. Split up large classes into smaller classes that are easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:27:1",
        "message": "Class AppleStylePassReader is too large. Consider splitting it into smaller pieces."
      }]
    }, {
      "name": "ComplexMethod",
      "description": "Prefer splitting up complex methods into smaller, easier to understand methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:29:5",
        "message": "The function read appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/quirk_fix/URLRewriteController.kt:9:5",
        "message": "The function getUrlByUri appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewFragment.kt:46:5",
        "message": "The function onResume appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/UnzipPassController.kt:47:5",
        "message": "The function processFile appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassListActivity.kt:128:5",
        "message": "The function onCreate appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchPassesIntentService.kt:90:5",
        "message": "The function search_in appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/pass/PassBarCodeFormat.kt:22:5",
        "message": "The function zxingBarCodeFormat appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/Barcode.kt:20:1",
        "message": "The function generateBarCodeBitmap appears to be too complex."
      }]
    }, {
      "name": "ComplexInterface",
      "description": "An interface contains too many functions and properties. Large classes tend to handle many things at once. An interface should have one responsibility. Split up large interfaces into smaller ones that are easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/pass/Pass.kt:9:1",
        "message": "The interface Pass is too complex. Consider splitting it up."
      }]
    }]
  }, {
    "group": "empty-blocks",
    "smells": [{
      "name": "EmptyCatchBlock",
      "description": "Empty block of code detected. As they serve no purpose they should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:322:47",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:322:47",
        "message": "This empty block of code can be removed."
      }]
    }]
  }, {
    "group": "exceptions",
    "smells": [{
      "name": "TooGenericExceptionThrown",
      "description": "Thrown exception is too generic. Prefer throwing project specific exceptions to handle error cases.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePreferenceActivity.kt:72:25",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePreferenceActivity.kt:92:25",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }]
    }, {
      "name": "TooGenericExceptionCaught",
      "description": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheBarcodeHelper.kt:48:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheBarcodeHelper.kt:59:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/functions/PassFromAssetLoader.kt:45:14",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/PassReader.kt:63:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:55:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:294:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewActivityBase.kt:51:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/UnzipPassController.kt:40:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/UnzipPassController.kt:78:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/UnzipPassController.kt:88:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/UnzipPassController.kt:138:26",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassExporter.kt:28:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassImportActivity.kt:91:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchPassesIntentService.kt:139:26",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/Barcode.kt:53:14",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }]
    }, {
      "name": "PrintStackTrace",
      "description": "Do not print an stack trace. These debug statements should be replaced with a logger or removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:214:17",
        "message": "Do not print an stack trace. These debug statements should be replaced with a logger or removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:295:17",
        "message": "Do not print an stack trace. These debug statements should be replaced with a logger or removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewActivityBase.kt:203:17",
        "message": "Do not print an stack trace. These debug statements should be replaced with a logger or removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/UnzipPassController.kt:65:13",
        "message": "Do not print an stack trace. These debug statements should be replaced with a logger or removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/UnzipPassController.kt:139:21",
        "message": "Do not print an stack trace. These debug statements should be replaced with a logger or removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassExporter.kt:29:13",
        "message": "Do not print an stack trace. These debug statements should be replaced with a logger or removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/ImageEditHelper.kt:42:17",
        "message": "Do not print an stack trace. These debug statements should be replaced with a logger or removed."
      }]
    }]
  }, {
    "group": "naming",
    "smells": [{
      "name": "VariableNaming",
      "description": "Variable names should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassListSwiping.kt:45:9",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheFullscreenBarcodeActivity.kt:24:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/withMaps/java/org/ligi/passandroid/LocationsMapFragment.kt:19:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/withMaps/java/org/ligi/passandroid/LocationsMapFragment.kt:20:5",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassExportTaskAndShare.kt:20:9",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassTopicFragmentPagerAdapter.kt:10:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/Barcode.kt:36:9",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }]
    }, {
      "name": "FunctionMaxLength",
      "description": "Function names should not be longer than the maximum set in the project configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheBarcodeHelper.kt:28:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheBarcodeHelper.kt:38:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TestApp.kt:46:9",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheBarCodeEditing.kt:42:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheEmptyPassList.kt:23:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePastLocationsStore.kt:33:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePastLocationsStore.kt:45:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:32:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:51:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:70:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:112:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:134:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheNavigationDrawer.kt:32:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheNavigationDrawer.kt:43:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewHolder.kt:24:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewHolder.kt:37:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewHolder.kt:50:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewHolder.kt:62:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheHelpActivity.kt:25:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewActivity.kt:36:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewActivity.kt:44:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewActivity.kt:55:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewActivity.kt:63:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewActivity.kt:71:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewActivity.kt:84:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewActivity.kt:93:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewActivity.kt:101:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewActivity.kt:110:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewActivity.kt:119:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/FullscreenBarcodeActivity.kt:41:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewHelper.kt:26:5",
        "message": "Function names should be at most 30 characters long."
      }]
    }, {
      "name": "FunctionNaming",
      "description": "Function names should follow the naming convention set in the configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheHelpActivity.kt:25:5",
        "message": "Function names should match the pattern: ^([a-z$][a-zA-Z$0-9]*)|(`.*`)$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheHelpActivity.kt:32:5",
        "message": "Function names should match the pattern: ^([a-z$][a-zA-Z$0-9]*)|(`.*`)$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchPassesIntentService.kt:90:5",
        "message": "Function names should match the pattern: ^([a-z$][a-zA-Z$0-9]*)|(`.*`)$"
      }]
    }, {
      "name": "FunctionParameterNaming",
      "description": "Function parameter names should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:220:55",
        "message": "Function parameter names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassTopicFragmentPagerAdapter.kt:24:34",
        "message": "Function parameter names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassEditActivity.kt:47:19",
        "message": "Function parameter names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassEditActivity.kt:124:32",
        "message": "Function parameter names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassEditActivity.kt:124:54",
        "message": "Function parameter names should match the pattern: [a-z][A-Za-z0-9]*"
      }]
    }, {
      "name": "PackageNaming",
      "description": "Package names should match the naming convention set in the configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/pass_view_holder/EditViewHolder.kt:1:1",
        "message": "Package name should match the pattern: ^[a-z]+(\\.[a-z][a-z0-9]*)*$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/pass_view_holder/CondensedPassViewHolder.kt:1:1",
        "message": "Package name should match the pattern: ^[a-z]+(\\.[a-z][a-z0-9]*)*$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/pass_view_holder/PassViewHolder.kt:1:1",
        "message": "Package name should match the pattern: ^[a-z]+(\\.[a-z][a-z0-9]*)*$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/pass_view_holder/VerbosePassViewHolder.kt:1:1",
        "message": "Package name should match the pattern: ^[a-z]+(\\.[a-z][a-z0-9]*)*$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/quirk_fix/USAirwaysLoadActivity.kt:1:1",
        "message": "Package name should match the pattern: ^[a-z]+(\\.[a-z][a-z0-9]*)*$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/quirk_fix/OpenIphoneWebView.kt:1:1",
        "message": "Package name should match the pattern: ^[a-z]+(\\.[a-z][a-z0-9]*)*$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/quirk_fix/URLRewriteController.kt:1:1",
        "message": "Package name should match the pattern: ^[a-z]+(\\.[a-z][a-z0-9]*)*$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/json_adapter/ColorAdapter.kt:1:1",
        "message": "Package name should match the pattern: ^[a-z]+(\\.[a-z][a-z0-9]*)*$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/json_adapter/ZonedTimeAdapter.kt:1:1",
        "message": "Package name should match the pattern: ^[a-z]+(\\.[a-z][a-z0-9]*)*$"
      }]
    }, {
      "name": "ObjectPropertyNaming",
      "description": "Property names inside objects should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassListFragment.kt:97:9",
        "message": "Private object property names should match the pattern: (_)?[A-Za-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/ImageEditHelper.kt:49:9",
        "message": "Private object property names should match the pattern: (_)?[A-Za-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/FieldsEditFragment.kt:77:9",
        "message": "Private object property names should match the pattern: (_)?[A-Za-z][A-Za-z0-9]*"
      }]
    }, {
      "name": "ConstructorParameterNaming",
      "description": "Constructor parameter names should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/UnzipPassDialog.kt:37:34",
        "message": "Constructor private parameter names should match the pattern: [a-z][A-Za-z0-9]*"
      }]
    }]
  }, {
    "group": "potential-bugs",
    "smells": [{
      "name": "UnsafeCast",
      "description": "Cast operator throws an exception if the cast is not possible.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassListSwiping.kt:80:28",
        "message": "rule.activity.supportFragmentManager.fragments.firstOrNull { it is PassListFragment } cannot be safely cast to PassListFragment."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TestApp.kt:63:40",
        "message": "passStore() cannot be safely cast to FixedPassListPassStore."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheBarCodeEditing.kt:34:23",
        "message": "passStore.currentPass cannot be safely cast to PassImpl."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:94:10",
        "message": "TestApp.passStore().currentPass cannot be safely cast to PassImpl."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:116:10",
        "message": "TestApp.passStore().currentPass cannot be safely cast to PassImpl."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:138:10",
        "message": "TestApp.passStore().currentPass cannot be safely cast to PassImpl."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewHolder.kt:19:31",
        "message": "App.passStore.currentPass cannot be safely cast to PassImpl."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheCondensedPassViewMode.kt:23:27",
        "message": "TestApp.passStore().currentPass cannot be safely cast to PassImpl."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/functions/FabFunctions.kt:21:19",
        "message": "view cannot be safely cast to FloatingActionsMenu."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/functions/Matchers.kt:6:40",
        "message": "CollapsedCheck() cannot be safely cast to Matcher<in View>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewActivity.kt:24:33",
        "message": "TestApp.passStore().currentPass cannot be safely cast to PassImpl."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheFullscreenBarcodeActivity.kt:76:24",
        "message": "rule.activity.findViewById(R.id.fullscreen_barcode) cannot be safely cast to ImageView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheFullscreenBarcodeActivity.kt:77:30",
        "message": "viewById.drawable cannot be safely cast to BitmapDrawable."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/withMaps/java/org/ligi/passandroid/LocationsMapFragment.kt:26:25",
        "message": "activity cannot be safely cast to PassViewActivityBase."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/pass_view_holder/EditViewHolder.kt:29:21",
        "message": "pass cannot be safely cast to PassImpl."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewFragment.kt:86:27",
        "message": "v.findViewById(R.id.key) cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewFragment.kt:88:29",
        "message": "v.findViewById(R.id.value) cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassListFragment.kt:42:31",
        "message": "activity cannot be safely cast to AppCompatActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/MoveToNewTopicUI.kt:29:32",
        "message": "dialog.findViewById(R.id.new_topic_edit) cannot be safely cast to EditText."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/MoveToNewTopicUI.kt:30:40",
        "message": "dialog.findViewById(R.id.topic_suggestions_button_container) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/FieldsEditFragment.kt:19:39",
        "message": "App.passStore.currentPass cannot be safely cast to PassImpl."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/FieldsEditFragment.kt:49:21",
        "message": "inflater.inflate(R.layout.edit_field, viewGroup, false) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/FieldsEditFragment.kt:61:18",
        "message": "v.parent cannot be safely cast to View."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/dialogs/CategoryPickDialog.kt:35:41",
        "message": "inflate.findViewById(R.id.categoryView) cannot be safely cast to BaseCategoryIndicatorView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/dialogs/CategoryPickDialog.kt:40:22",
        "message": "inflate.findViewById(R.id.navCategoryLabel) cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassEditActivity.kt:71:32",
        "message": "currentPass cannot be safely cast to PassImpl."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassEditActivity.kt:136:25",
        "message": "findViewById(logo_img) cannot be safely cast to ImageView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassAdapter.kt:28:19",
        "message": "inflater.inflate(R.layout.pass_list_item, viewGroup, false) cannot be safely cast to CardView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchPassesIntentService.kt:47:25",
        "message": "getSystemService(Context.NOTIFICATION_SERVICE) cannot be safely cast to NotificationManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/printing/PrintHelper.kt:12:24",
        "message": "context.getSystemService(Context.PRINT_SERVICE) cannot be safely cast to PrintManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/AndroidFileSystemPassStore.kt:44:36",
        "message": "pass cannot be safely cast to PassImpl."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/AndroidFileSystemPassStore.kt:48:40",
        "message": "pass cannot be safely cast to PassImpl."
      }]
    }, {
      "name": "UnsafeCallOnNullableType",
      "description": "It will throw a NullPointerException at runtime if your nullable value is null.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheBarcodeHelper.kt:56:27",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheBarCodeEditing.kt:69:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheBarCodeEditing.kt:85:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheBarCodeEditing.kt:106:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheBarCodeEditing.kt:106:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheBarCodeEditing.kt:126:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheBarCodeEditing.kt:126:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheBarCodeEditing.kt:136:26",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheBarCodeEditing.kt:136:26",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheBarCodeEditing.kt:143:45",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheBarCodeEditing.kt:143:45",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePastLocationsStore.kt:47:48",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheQuirkCorrector.kt:12:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:36:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:47:35",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:55:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:66:35",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:74:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:85:35",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:108:35",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:130:35",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:152:35",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassEditActivity.kt:39:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassEditActivity.kt:50:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassEditActivity.kt:59:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/functions/FabFunctions.kt:34:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/test/java/org/ligi/passandroid/unittest/TheAppleStylePassReaderFunctions.kt:24:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/test/java/org/ligi/passandroid/unittest/TheAppleStylePassReaderFunctions.kt:34:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/test/java/org/ligi/passandroid/unittest/TheAppleStylePassReaderFunctions.kt:44:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/test/java/org/ligi/passandroid/unittest/TheAppleStyleQuirkCorrector.kt:37:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/test/java/org/ligi/passandroid/unittest/TheAppleStyleQuirkCorrector.kt:59:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/withMaps/java/org/ligi/passandroid/LocationsMapFragment.kt:36:53",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/withMaps/java/org/ligi/passandroid/LocationsMapFragment.kt:43:33",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/withMaps/java/org/ligi/passandroid/LocationsMapFragment.kt:49:95",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/PassReader.kt:24:29",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:95:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:172:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewActivityBase.kt:90:23",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewActivityBase.kt:186:70",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewActivityBase.kt:237:31",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/pass_view_holder/PassViewHolder.kt:94:81",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/pass_view_holder/PassViewHolder.kt:94:81",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/pass_view_holder/PassViewHolder.kt:96:55",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/pass_view_holder/PassViewHolder.kt:97:22",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/pass_view_holder/PassViewHolder.kt:98:46",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/pass_view_holder/PassViewHolder.kt:105:55",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/BarcodeUIController.kt:67:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/BarcodeUIController.kt:67:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewFragment.kt:63:29",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewFragment.kt:123:27",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassListFragment.kt:41:62",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/UnzipPassController.kt:76:33",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/UnzipPassController.kt:86:33",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassMenuOptions.kt:51:30",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchSuccessCallback.kt:63:46",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchSuccessCallback.kt:64:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchSuccessCallback.kt:65:51",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchSuccessCallback.kt:65:89",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchSuccessCallback.kt:66:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/BarcodeEditController.kt:72:60",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/FullscreenBarcodeActivity.kt:30:45",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/FullscreenBarcodeActivity.kt:32:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/FullscreenBarcodeActivity.kt:34:43",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/FullscreenBarcodeActivity.kt:51:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/FullscreenBarcodeActivity.kt:51:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassImportActivity.kt:83:66",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassEditActivity.kt:120:130",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassEditActivity.kt:125:27",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassEditActivity.kt:129:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewHelper.kt:27:15",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchPassesIntentService.kt:85:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchPassesIntentService.kt:87:36",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchPassesIntentService.kt:99:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchPassesIntentService.kt:100:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchPassesIntentService.kt:100:62",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchPassesIntentService.kt:125:29",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchPassesIntentService.kt:126:29",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchPassesIntentService.kt:128:29",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchPassesIntentService.kt:129:63",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/printing/PassPrintDocumentAdapter.kt:49:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/printing/PassPrintDocumentAdapter.kt:53:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/printing/PassPrintDocumentAdapter.kt:56:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/printing/PassPrintDocumentAdapter.kt:61:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/comparator/PassByTimeComparator.kt:33:46",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/comparator/PassByTimeComparator.kt:34:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/comparator/PassByTimeComparator.kt:37:45",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/comparator/PassByTimeComparator.kt:38:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/PastLocationsStore.kt:18:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/ApplePassbookQuirkCorrector.kt:175:35",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/ApplePassbookQuirkCorrector.kt:197:39",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/AndroidSettings.kt:19:18",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/Barcode.kt:62:11",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/AddToCalendar.kt:46:33",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/AddToCalendar.kt:49:29",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }]
    }, {
      "name": "LateinitUsage",
      "description": "Usage of lateinit detected. Using lateinit for property initialization is error prone, try using constructor injection or delegation.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheBarCodeEditing.kt:30:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePastLocationsStore.kt:23:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/injections/FixedPassListPassStore.kt:10:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewActivityBase.kt:33:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewActivityBase.kt:172:9",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/pass_view_holder/EditViewHolder.kt:22:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/pass_view_holder/EditViewHolder.kt:23:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/pass_view_holder/EditViewHolder.kt:24:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewFragment.kt:32:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassListFragment.kt:31:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassListFragment.kt:32:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassTopicFragmentPagerAdapter.kt:10:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/FieldsEditFragment.kt:23:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassEditActivity.kt:38:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewActivity.kt:17:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewActivity.kt:18:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/App.kt:60:9",
        "message": "Usages of latinit should be avoided."
      }]
    }, {
      "name": "ExplicitGarbageCollectionCall",
      "description": "Don't try to be smarter than the JVM. Your code should work independently if the garbage collector is disabled or not. If you face memory issues, try tuning the JVM options instead of relying on code itself.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:319:24",
        "message": "An explicit call to the Garbage Collector as in System should not be made."
      }]
    }]
  }, {
    "group": "style",
    "smells": [{
      "name": "MaxLineLength",
      "description": "Line detected that is longer than the defined maximum line length in the code style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePreferenceActivity.kt:71:125",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePreferenceActivity.kt:83:125",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassListSwiping.kt:80:13",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePastLocationsStore.kt:26:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:39:127",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:46:135",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:58:127",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:64:138",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:77:127",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:97:127",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:107:135",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:119:127",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:128:138",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:141:127",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassEditActivity.kt:79:128",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassEditActivity.kt:88:128",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassEditActivity.kt:98:128",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewHolder.kt:52:128",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheCondensedPassViewMode.kt:24:128",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/functions/PassFromAssetLoader.kt:32:134",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/withMaps/java/org/ligi/passandroid/LocationsMapFragment.kt:49:21",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/withMaps/java/org/ligi/passandroid/LocationsMapFragment.kt:59:131",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:104:123",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:117:129",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:189:140",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:220:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:293:135",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewActivityBase.kt:196:21",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/pass_view_holder/EditViewHolder.kt:20:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/pass_view_holder/EditViewHolder.kt:49:62",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/pass_view_holder/PassViewHolder.kt:47:126",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/BarcodeUIController.kt:12:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/BarcodeUIController.kt:68:140",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassExportTaskAndShare.kt:18:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassExportTaskAndShare.kt:35:122",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassExportTaskAndShare.kt:37:21",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassExportTaskAndShare.kt:42:128",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/quirk_fix/URLRewriteController.kt:87:129",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassListFragment.kt:41:127",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassListFragment.kt:50:13",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/UnzipPassController.kt:124:25",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/UnzipPassController.kt:131:126",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/UnzipPassController.kt:164:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/UnzipPassController.kt:165:42",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassMenuOptions.kt:39:17",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassMenuOptions.kt:44:147",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassTopicFragmentPagerAdapter.kt:8:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassTopicFragmentPagerAdapter.kt:24:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/MoveToNewTopicUI.kt:13:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchSuccessCallback.kt:16:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchSuccessCallback.kt:44:172",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchSuccessCallback.kt:65:127",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/dialogs/CategoryPickDialog.kt:19:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassImportActivity.kt:72:125",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassImportActivity.kt:73:29",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassImportActivity.kt:108:153",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassEditActivity.kt:61:141",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassEditActivity.kt:120:154",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassAdapter.kt:20:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassListActivity.kt:51:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassListActivity.kt:69:173",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassListActivity.kt:217:234",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassListActivity.kt:242:157",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewActivity.kt:46:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchPassesIntentService.kt:49:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchPassesIntentService.kt:50:128",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchPassesIntentService.kt:56:124",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchPassesIntentService.kt:68:140",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchPassesIntentService.kt:70:146",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/views/CategoryIndicatorViewWithIcon.kt:9:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/views/BaseCategoryIndicatorView.kt:14:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/printing/PassPrintDocumentAdapter.kt:21:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/printing/PassPrintDocumentAdapter.kt:39:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/printing/PassPrintDocumentAdapter.kt:93:158",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/comparator/PassByTimeComparator.kt:15:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/pass/PassImpl.kt:32:142",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/pass/PassImpl.kt:33:183",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/pass/PassImpl.kt:34:171",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/pass/PassImpl.kt:35:142",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/pass/PassField.kt:21:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/PassStoreProjection.kt:7:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/AndroidFileSystemPassStore.kt:18:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/AndroidSettings.kt:30:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/AndroidSettings.kt:32:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/InputStreamProvider.kt:12:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/InputStreamProvider.kt:68:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/InputStreamProvider.kt:70:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/PassTemplates.kt:31:156",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }]
    }, {
      "name": "MagicNumber",
      "description": "Report magic numbers. Magic number is a numeric literal that is not defined as a constant and hence it's unclear what the purpose of this number is. It's better to declare such numbers as constants and give them a proper name. By default, -1, 0, 1, and 2 are not considered to be magic numbers.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePreferenceActivity.kt:83:57",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheBarcodeHelper.kt:47:52",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheBarcodeHelper.kt:58:53",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheBarCodeEditing.kt:72:34",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePastLocationsStore.kt:26:128",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:27:47",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:45:90",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:46:129",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:64:132",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:65:88",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:83:90",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:84:89",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:106:90",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:107:129",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:128:132",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:129:88",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:150:90",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:151:89",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheNavigationDrawer.kt:26:12",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassEditActivity.kt:24:12",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewHolder.kt:52:75",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewHolder.kt:52:81",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewHolder.kt:52:85",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewHolder.kt:52:89",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewHolder.kt:52:93",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewHolder.kt:52:97",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewHolder.kt:52:101",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassListActivity.kt:19:12",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassListActivity.kt:59:38",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheCondensedPassViewMode.kt:24:75",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheCondensedPassViewMode.kt:24:81",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheCondensedPassViewMode.kt:24:85",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheCondensedPassViewMode.kt:24:89",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheCondensedPassViewMode.kt:24:93",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheCondensedPassViewMode.kt:24:97",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheCondensedPassViewMode.kt:24:101",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewActivity.kt:21:12",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewActivity.kt:74:83",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/withMaps/java/org/ligi/passandroid/LocationsMapFragment.kt:62:90",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/withMaps/java/org/ligi/passandroid/LocationsMapFragment.kt:65:68",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:293:60",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewActivityBase.kt:109:77",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewActivityBase.kt:162:51",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewActivityBase.kt:162:56",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/pass_view_holder/PassViewHolder.kt:85:48",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/quirk_fix/URLRewriteController.kt:83:26",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewFragment.kt:36:46",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/UnzipPassController.kt:112:42",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/UnzipPassController.kt:115:76",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/UnzipPassController.kt:131:74",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/EANHelper.kt:8:28",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/EANHelper.kt:8:55",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/EANHelper.kt:9:16",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/EANHelper.kt:15:28",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/EANHelper.kt:15:54",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/EANHelper.kt:16:16",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/ITFHelper.kt:3:26",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/ITFHelper.kt:3:53",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassListActivity.kt:74:16",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassListActivity.kt:81:16",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewActivity.kt:84:59",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewActivity.kt:84:63",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchPassesIntentService.kt:95:63",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/printing/PassPrintDocumentAdapter.kt:73:52",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/printing/PassPrintDocumentAdapter.kt:82:45",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/printing/PassPrintDocumentAdapter.kt:93:120",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/printing/PassPrintDocumentAdapter.kt:94:38",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/printing/PassPrintDocumentAdapter.kt:110:58",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/PastLocationsStore.kt:12:37",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/PastLocationsStore.kt:42:20",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/PastLocationsStore.kt:44:41",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/Barcode.kt:32:40",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/Barcode.kt:41:92",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/AddToCalendar.kt:14:37",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/AddToCalendar.kt:47:78",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/AddToCalendar.kt:50:74",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/CategoryHelper.kt:25:26",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/CategoryHelper.kt:26:23",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/CategoryHelper.kt:27:24",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/CategoryHelper.kt:28:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/CategoryHelper.kt:29:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/CategoryHelper.kt:30:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/InputStreamProvider.kt:70:145",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/PassTemplates.kt:31:52",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/PassTemplates.kt:64:24",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }]
    }, {
      "name": "WildcardImport",
      "description": "Wildcard imports should be replaced with imports using fully qualified class names. Wildcard imports can lead to naming conflicts. A library update can introduce naming clashes with your classes which results in compilation errors.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassListSwiping.kt:7:1",
        "message": "android.support.test.espresso.matcher.ViewMatchers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheBarCodeEditing.kt:5:1",
        "message": "android.support.test.espresso.action.ViewActions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheBarCodeEditing.kt:8:1",
        "message": "android.support.test.espresso.matcher.ViewMatchers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheFieldListEditFragment.kt:7:1",
        "message": "android.support.test.espresso.matcher.ViewMatchers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheAddToCalendar.kt:13:1",
        "message": "android.support.test.espresso.matcher.ViewMatchers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheNavigationDrawer.kt:15:1",
        "message": "android.support.test.espresso.intent.matcher.IntentMatchers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheNavigationDrawer.kt:16:1",
        "message": "android.support.test.espresso.matcher.ViewMatchers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheNavigationDrawer.kt:21:1",
        "message": "org.ligi.passandroid.R.string.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassEditActivity.kt:8:1",
        "message": "android.support.test.espresso.action.ViewActions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassEditActivity.kt:13:1",
        "message": "android.support.test.espresso.matcher.ViewMatchers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassEditActivity.kt:17:1",
        "message": "org.ligi.passandroid.R.id.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassEditActivity.kt:18:1",
        "message": "org.ligi.passandroid.R.string.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassListActivity.kt:9:1",
        "message": "android.support.test.espresso.matcher.ViewMatchers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheHelpActivity.kt:6:1",
        "message": "android.support.test.espresso.matcher.ViewMatchers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/functions/PassFromAssetLoader.kt:13:1",
        "message": "org.mockito.Mockito.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePassViewActivity.kt:8:1",
        "message": "android.support.test.espresso.matcher.ViewMatchers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheFullscreenBarcodeActivity.kt:16:1",
        "message": "org.ligi.passandroid.model.pass.PassBarCodeFormat.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:18:1",
        "message": "org.ligi.passandroid.model.pass.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewActivityBase.kt:14:1",
        "message": "android.view.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/pass_view_holder/PassViewHolder.kt:7:1",
        "message": "android.view.View.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/BarcodeUIController.kt:5:1",
        "message": "android.view.View.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassListFragment.kt:10:1",
        "message": "android.support.v7.widget.helper.ItemTouchHelper.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/BarcodeEditController.kt:12:1",
        "message": "org.ligi.passandroid.model.pass.PassBarCodeFormat.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewActivity.kt:5:1",
        "message": "android.support.v4.app.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/App.kt:5:1",
        "message": "com.github.salomonbrys.kodein.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/pass/Pass.kt:5:1",
        "message": "org.ligi.passandroid.model.PassBitmapDefinitions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/PassDefinitions.kt:3:1",
        "message": "org.ligi.passandroid.model.pass.PassType.* is a wildcard import. Replace it with fully qualified imports."
      }]
    }, {
      "name": "SpacingBetweenPackageAndImports",
      "description": "Violation of the package declaration style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheBarcodeHelper.kt:1:29",
        "message": "There should be exactly one empty line in between the package declaration and the list of imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/TheEmptyPassList.kt:13:42",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of TheEmptyPassList."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/functions/PassFromAssetLoader.kt:14:20",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of the class or object."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/withMaps/java/org/ligi/passandroid/maps/PassbookMapsFacade.kt:1:34",
        "message": "There should be exactly one empty line in between the package declaration and the list of imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/FieldsEditFragment.kt:14:48",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of FieldsEditFragment."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassImportActivity.kt:19:49",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of PassImportActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/pass/Pass.kt:6:44",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of Pass."
      }]
    }, {
      "name": "UntilInsteadOfRangeTo",
      "description": "'..' call can be replaced with 'until'",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/ThePastLocationsStore.kt:37:19",
        "message": "'..' call can be replaced with 'until'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:137:23",
        "message": "'..' call can be replaced with 'until'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:223:23",
        "message": "'..' call can be replaced with 'until'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/Barcode.kt:39:19",
        "message": "'..' call can be replaced with 'until'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/Barcode.kt:40:23",
        "message": "'..' call can be replaced with 'until'"
      }]
    }, {
      "name": "ExpressionBodySyntax",
      "description": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/functions/FabFunctions.kt:33:68",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/injections/FixedPassListPassStore.kt:38:54",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/injections/FixedPassListPassStore.kt:43:56",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/androidTest/java/org/ligi/passandroid/injections/FixedPassListPassStore.kt:47:49",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewActivityBase.kt:260:59",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/pass_view_holder/EditViewHolder.kt:56:87",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewActivity.kt:59:35",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewActivity.kt:63:37",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/comparator/DirectionAwarePassByTimeComparator.kt:7:53",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/pass/PassImpl.kt:82:37",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/ApplePassbookQuirkCorrector.kt:46:77",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/PassClassifier.kt:22:34",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/PassClassifier.kt:26:55",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/PassClassifier.kt:30:55",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/AndroidFileSystemPassStore.kt:96:54",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/AndroidFileSystemPassStore.kt:110:49",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }]
    }, {
      "name": "NewLineAtEndOfFile",
      "description": "Checks whether files end with a line separator.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/test/java/org/ligi/passandroid/unittest/ThePassSorting.kt:67:1",
        "message": "The file ThePassSorting.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/withMaps/java/org/ligi/passandroid/maps/PassbookMapsFacade.kt:35:1",
        "message": "The file PassbookMapsFacade.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/withMaps/java/org/ligi/passandroid/LocationsMapFragment.kt:71:1",
        "message": "The file LocationsMapFragment.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewActivityBase.kt:264:1",
        "message": "The file PassViewActivityBase.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassExportTaskAndShare.kt:48:1",
        "message": "The file PassExportTaskAndShare.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewFragment.kt:135:1",
        "message": "The file PassViewFragment.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassTopicFragmentPagerAdapter.kt:29:1",
        "message": "The file PassTopicFragmentPagerAdapter.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/EANHelper.kt:26:1",
        "message": "The file EANHelper.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/ITFHelper.kt:3:93",
        "message": "The file ITFHelper.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassListActivity.kt:310:1",
        "message": "The file PassListActivity.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewActivity.kt:112:1",
        "message": "The file PassViewActivity.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassAndroidActivity.kt:30:1",
        "message": "The file PassAndroidActivity.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/pass/PassField.kt:23:1",
        "message": "The file PassField.kt is not ending with a new line."
      }]
    }, {
      "name": "ModifierOrder",
      "description": "Modifier order should be: private lateinit",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/test/java/org/ligi/passandroid/unittest/ThePassSorting.kt:21:5",
        "message": "Modifier order should be: private lateinit"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/pass_view_holder/EditViewHolder.kt:22:5",
        "message": "Modifier order should be: private lateinit"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/pass_view_holder/EditViewHolder.kt:23:5",
        "message": "Modifier order should be: private lateinit"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/pass_view_holder/EditViewHolder.kt:24:5",
        "message": "Modifier order should be: private lateinit"
      }]
    }, {
      "name": "MandatoryBracesIfStatements",
      "description": "Multi-line if statement was found that does not have braces. These should be added to improve readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/withMaps/java/org/ligi/passandroid/LocationsMapFragment.kt:34:17",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }]
    }, {
      "name": "UnusedPrivateMember",
      "description": "Private member is unused.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/noAnalytics/java/org/ligi/passandroid/TrackerKodeinModule.kt:8:31",
        "message": "Function parameter context is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassListFragment.kt:83:32",
        "message": "Function parameter passStoreChangeEvent is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassListFragment.kt:89:29",
        "message": "Function parameter scanFinishedEvent is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassNavigationView.kt:61:32",
        "message": "Function parameter passStoreChangeEvent is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassEditActivity.kt:95:23",
        "message": "Function parameter event is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassListActivity.kt:267:32",
        "message": "Function parameter passStoreChangeEvent is unused."
      }]
    }, {
      "name": "ReturnCount",
      "description": "Restrict the number of return statements in methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReaderFunctions.kt:6:1",
        "message": "Function getBarcodeJson has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:243:5",
        "message": "Function findLocalizedPath has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/quirk_fix/URLRewriteController.kt:9:5",
        "message": "Function getUrlByUri has 9 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/UnzipPassController.kt:47:5",
        "message": "Function processFile has 6 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassMenuOptions.kt:28:5",
        "message": "Function process has 6 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchSuccessCallback.kt:62:5",
        "message": "Function getDateOfPassForComparison has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/UnzipPassDialog.kt:71:5",
        "message": "Function prepareResult has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/ExtractURLAsIphoneActivity.kt:33:9",
        "message": "Function doInBackground has 4 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassListActivity.kt:286:5",
        "message": "Function areTabLayoutAndViewPagerInSync has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/comparator/PassByTimeComparator.kt:15:5",
        "message": "Function calculateCompareForNullValues has 4 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/comparator/PassByTimeComparator.kt:32:5",
        "message": "Function extractPassDate has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/comparator/PassSortOrder.kt:12:5",
        "message": "Function toComparator has 4 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/pass/BarCode.kt:16:5",
        "message": "Function getBitmap has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/pass/BarCode.kt:36:9",
        "message": "Function getFormatFromString has 4 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/pass/PassImpl.kt:61:5",
        "message": "Function getBitmap has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/Barcode.kt:20:1",
        "message": "Function generateBarCodeBitmap has 5 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/SafeJSONReader.kt:62:1",
        "message": "Function readJSONSafely has 3 return statements which exceeds the limit of 2."
      }]
    }, {
      "name": "UnnecessaryParentheses",
      "description": "Unnecessary parentheses don't add any value to the code and should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:309:24",
        "message": "Parentheses in (File(path, \"$bitmap@2x.png\")) are unnecessary and can be replaced with: File(path, \"$bitmap@2x.png\")"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/reader/AppleStylePassReader.kt:310:24",
        "message": "Parentheses in (File(path, \"$bitmap@2x.png\")) are unnecessary and can be replaced with: File(path, \"$bitmap@2x.png\")"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/BarcodeEditController.kt:56:49",
        "message": "Parentheses around the lambda ({\n            rootView.messageInput.setText(when (barcodeFormat) {\n                EAN_8 -> getRandomEAN8()\n                EAN_13 -> getRandomEAN13()\n                PassBarCodeFormat.ITF -> getRandomITF()\n                else -> UUID.randomUUID().toString().toUpperCase()\n            })\n            refresh()\n        }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/BarcodeEditController.kt:66:47",
        "message": "Parentheses around the lambda ({\n            val barCodeIntentIntegrator = BarCodeIntentIntegrator(intentFragment)\n\n            if (barcodeFormat == QR_CODE) {\n                barCodeIntentIntegrator.initiateScan(BarCodeIntentIntegrator.QR_CODE_TYPES)\n            } else {\n                barCodeIntentIntegrator.initiateScan(setOf(barcodeFormat!!.name))\n            }\n\n        }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassImportActivity.kt:62:30",
        "message": "Parentheses around the lambda ({\n                    progressDialog.dismissIfShowing()\n\n                    if (fromURI == null) {\n                        finish()\n                        //TODO show some error here?!\n                    } else {\n\n                        if (isFinishing) {\n                            // finish with no UI/Dialogs\n                            // let's do it silently TODO check if we need to jump to a service here as the activity is dying\n                            val spec = UnzipPassController.InputStreamUnzipControllerSpec(fromURI, application, passStore, null, null)\n                            UnzipPassController.processInputStream(spec)\n                        } else {\n                            UnzipPassDialog.show(fromURI, this, passStore) { path ->\n                                // TODO this is kind of a hack - there should be a better way\n                                val id = path.split(\"/\".toRegex()).dropLastWhile(String::isEmpty).toTypedArray().last()\n\n                                val passbookForId = passStore.getPassbookForId(id)\n                                passStore.currentPass = passbookForId\n\n                                passStore.classifier.moveToTopic(passbookForId!!, getString(R.string.topic_new))\n\n                                startActivityFromClass(PassViewActivity::class.java)\n                                finish()\n                            }\n                        }\n                    }\n                }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassImportActivity.kt:58:15",
        "message": "Parentheses around the lambda ({\n            try {\n                val fromURI = fromURI(this, intent.data)\n\n                runOnUiThread({\n                    progressDialog.dismissIfShowing()\n\n                    if (fromURI == null) {\n                        finish()\n                        //TODO show some error here?!\n                    } else {\n\n                        if (isFinishing) {\n                            // finish with no UI/Dialogs\n                            // let's do it silently TODO check if we need to jump to a service here as the activity is dying\n                            val spec = UnzipPassController.InputStreamUnzipControllerSpec(fromURI, application, passStore, null, null)\n                            UnzipPassController.processInputStream(spec)\n                        } else {\n                            UnzipPassDialog.show(fromURI, this, passStore) { path ->\n                                // TODO this is kind of a hack - there should be a better way\n                                val id = path.split(\"/\".toRegex()).dropLastWhile(String::isEmpty).toTypedArray().last()\n\n                                val passbookForId = passStore.getPassbookForId(id)\n                                passStore.currentPass = passbookForId\n\n                                passStore.classifier.moveToTopic(passbookForId!!, getString(R.string.topic_new))\n\n                                startActivityFromClass(PassViewActivity::class.java)\n                                finish()\n                            }\n                        }\n                    }\n                })\n            } catch (e: Exception) {\n                if (e.message?.contains(\"Permission\") == true && !withPermission) {\n                    PassImportActivityPermissionsDispatcher.doImportWithCheck(this@PassImportActivity, true)\n                } else {\n                    tracker.trackException(\"Error in import\", e, false)\n                }\n\n            }\n\n\n        }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/printing/PassPrintDocumentAdapter.kt:82:29",
        "message": "Parentheses in (canvas.width / 3f) are unnecessary and can be replaced with: canvas.width / 3f"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/ApplePassbookQuirkCorrector.kt:154:46",
        "message": "Parentheses in (pass.creator ?: \"\") are unnecessary and can be replaced with: pass.creator ?: \"\""
      }]
    }, {
      "name": "CollapsibleIfStatements",
      "description": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassViewFragment.kt:70:9",
        "message": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassListActivity.kt:119:9",
        "message": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability."
      }]
    }, {
      "name": "MayBeConst",
      "description": "Reports vals that can be const val instead.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/PassListFragment.kt:97:9",
        "message": "BUNDLE_KEY_TOPIC can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/ImageEditHelper.kt:49:9",
        "message": "REQ_CODE_OFFSET can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/edit/FieldsEditFragment.kt:77:9",
        "message": "ARGUMENT_KEY can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchPassesIntentService.kt:153:9",
        "message": "PROGRESS_NOTIFICATION_ID can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchPassesIntentService.kt:154:9",
        "message": "FOUND_NOTIFICATION_ID can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/SearchPassesIntentService.kt:156:9",
        "message": "REQUEST_CODE can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/comparator/DirectionAwarePassByTimeComparator.kt:13:9",
        "message": "DIRECTION_ASC can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/pass/PassImpl.kt:87:9",
        "message": "FILETYPE_IMAGES can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/PastLocationsStore.kt:52:9",
        "message": "KEY_PAST_LOCATIONS can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/PastLocationsStore.kt:53:9",
        "message": "MAX_ELEMENTS can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/AddToCalendar.kt:14:1",
        "message": "DEFAULT_EVENT_LENGTH_IN_HOURS can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/InputStreamProvider.kt:12:1",
        "message": "IPHONE_USER_AGENT can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/functions/PassTemplates.kt:18:1",
        "message": "APP can be a `const val`."
      }]
    }, {
      "name": "ForbiddenVoid",
      "description": "`Unit` should be used instead of `Void`.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/ExtractURLAsIphoneActivity.kt:31:71",
        "message": "'Void' should be replaced with 'Unit'."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/ExtractURLAsIphoneActivity.kt:31:77",
        "message": "'Void' should be replaced with 'Unit'."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/ui/ExtractURLAsIphoneActivity.kt:33:52",
        "message": "'Void' should be replaced with 'Unit'."
      }]
    }, {
      "name": "UseDataClass",
      "description": "Classes that do nothing but hold data should be replaced with a data class.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/InputStreamWithSource.kt:5:1",
        "message": "The class InputStreamWithSource defines nofunctionality and only holds data. Consider converting it to a data class."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/pass/PassImpl.kt:40:5",
        "message": "The class TimeRepeat defines nofunctionality and only holds data. Consider converting it to a data class."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/model/pass/PassImpl.kt:41:5",
        "message": "The class TimeSpan defines nofunctionality and only holds data. Consider converting it to a data class."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/events/ScanProgressEvent.kt:3:1",
        "message": "The class ScanProgressEvent defines nofunctionality and only holds data. Consider converting it to a data class."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/events/ScanFinishedEvent.kt:5:1",
        "message": "The class ScanFinishedEvent defines nofunctionality and only holds data. Consider converting it to a data class."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ligi-PassAndroid/android/src/main/java/org/ligi/passandroid/events/PassRefreshEvent.kt:5:1",
        "message": "The class PassRefreshEvent defines nofunctionality and only holds data. Consider converting it to a data class."
      }]
    }]
  }]
}