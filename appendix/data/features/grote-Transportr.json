{
  "complexity_metrics": {
    "loc": 8380,
    "sloc": 5794,
    "lloc": 3988,
    "cloc": 1448,
    "mcc": 1054,
    "n_smell": 430,
    "comment_ratio": 24,
    "mcc_per_thlines": 264
  },
  "metrics": {
    "number_of_string": 334,
    "number_of_string_template": 26,
    "number_of_inline_func": 0,
    "number_of_inferred_fun": 9,
    "number_of_inferred_var": 347,
    "number_of_objects_declarations": 27,
    "number_of_companion_objects": 17,
    "number_of_singletons": 3,
    "number_of_declaration": 501,
    "number_of_var_declaration": 507,
    "number_of_func_call": 2368,
    "number_of_arguments": 3086,
    "number_of_parameters": 612,
    "number_of_qualified_expressions": 3524,
    "number_of_inheritances": 68,
    "number_of_unsafe_calls": 63,
    "number_of_safe_calls": 105,
    "number_of_destructuring_declarations": 4,
    "number_of_when_expressions": 30,
    "number_of_functions_with_default_value": 8,
    "number_of_function_call_with_named_value": 118,
    "number_of_named_argument": 477,
    "number_of_argument_with_default_value": 16,
    "number_of_overloaded_op": 1,
    "number_of_extension_function": 14,
    "number_of_properties_delegation": 2,
    "number_of_super_delegation": 0,
    "number_of_ranges": 1,
    "number_of_lambdas": 233,
    "number_of_possible_smart_casts": 24,
    "number_of_data_class": 4,
    "number_of_properties": 497,
    "number_of_functions": 411,
    "number_of_interfaces": 4,
    "number_of_classes": 110,
    "number_of_packages": 14,
    "number_of_kts_files": 0,
    "number_of_kt_files": 71
  },
  "findings": [{
    "group": "complexity",
    "smells": [{
      "name": "ComplexMethod",
      "description": "Prefer splitting up complex methods into smaller, easier to understand methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/ScreengrabTest.kt:68:5",
        "message": "The function getFrom appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/ScreengrabTest.kt:95:5",
        "message": "The function getTo appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/utils/TransportrUtils.kt:38:5",
        "message": "The function getDrawableForProduct appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/NearbyStationsDrawer.kt:65:5",
        "message": "The function getIconForProduct appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/MapViewModel.kt:124:5",
        "message": "The function switchMap appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/ReverseGeocoder.kt:84:5",
        "message": "The function findLocationWithOsm appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/TripsRepository.kt:100:5",
        "message": "The function queryTrips appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/TripsRepository.kt:181:5",
        "message": "The function getError appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/TripViewHolder.kt:53:5",
        "message": "The function bind appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsActivity.kt:116:5",
        "message": "The function processIntent appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/LegViewHolder.kt:116:5",
        "message": "The function bindPublic appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripUtils.kt:95:5",
        "message": "The function legToString appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripUtils.kt:125:5",
        "message": "The function getEmojiForProduct appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripReloader.kt:75:5",
        "message": "The function isTheSame appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripDrawer.kt:51:5",
        "message": "The function draw appears to be too complex."
      }]
    }, {
      "name": "TooManyFunctions",
      "description": "Too many functions inside a/an file/class/object/interface always indicate a violation of the single responsibility principle. Maybe the file/class/object/interface wants to manage to many things at once. Extract functionality which clearly belongs together.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/ui/TimeDateFragment.kt:38:1",
        "message": "Class 'TimeDateFragment' with '13' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/GpsMapFragment.kt:55:1",
        "message": "Class 'GpsMapFragment' with '17' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/BaseMapFragment.kt:37:1",
        "message": "Class 'BaseMapFragment' with '14' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/MapViewModel.kt:45:1",
        "message": "Class 'MapViewModel' with '13' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/MapFragment.kt:49:1",
        "message": "Class 'MapFragment' with '13' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationView.kt:52:1",
        "message": "Class 'LocationView' with '27' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsFragment.kt:52:1",
        "message": "Class 'DirectionsFragment' with '12' functions detected. Defined threshold inside classes is set to '11'"
      }]
    }, {
      "name": "LabeledExpression",
      "description": "Expression with labels increase complexity and affect maintainability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/ui/TimeDateFragment.kt:85:41",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/settings/SettingsFragment.kt:69:51",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/favorites/locations/SpecialLocationFragment.kt:84:38",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/favorites/locations/SpecialLocationFragment.kt:87:31",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/ContinentItem.kt:67:28",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/CountryItem.kt:66:28",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/DrawerActivity.kt:108:47",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/DrawerActivity.kt:134:17",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationView.kt:110:84",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationView.kt:111:47",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationView.kt:116:17",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationView.kt:234:61",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsFragment.kt:103:44",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsFragment.kt:265:56",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsFragment.kt:277:56",
        "message": "Expression with labels increase complexity and affect maintainability."
      }]
    }, {
      "name": "LongParameterList",
      "description": "The more parameters a method has the more complex it is. Long parameter lists are often used to control complex algorithms and violate the Single Responsibility Principle. Prefer methods with short parameter lists.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/utils/IntentUtils.kt:44:23",
        "message": "The function findDirections has too many parameters. The current threshold is set to 6."
      }]
    }, {
      "name": "ComplexCondition",
      "description": "Complex conditions should be simplified and extracted into well-named methods if necessary.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/MapFragment.kt:172:17",
        "message": "This condition is too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/data/searches/SearchesRepository.kt:71:13",
        "message": "This condition is too complex."
      }]
    }, {
      "name": "LargeClass",
      "description": "One class should have one responsibility. Large classes tend to handle many things at once. Split up large classes into smaller classes that are easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationView.kt:52:1",
        "message": "Class LocationView is too large. Consider splitting it into smaller pieces."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsFragment.kt:52:1",
        "message": "Class DirectionsFragment is too large. Consider splitting it into smaller pieces."
      }]
    }, {
      "name": "LongMethod",
      "description": "One method should have one responsibility. Long methods tend to handle many things at once. Prefer smaller methods to make them easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsFragment.kt:74:5",
        "message": "The function onViewCreated is too long. The maximum length is 20."
      }]
    }, {
      "name": "StringLiteralDuplication",
      "description": "Multiple occurrences of the same string literal within a single file detected.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripDrawer.kt:191:21",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripDrawer.kt:187:21",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }]
    }, {
      "name": "NestedBlockDepth",
      "description": "Excessive nesting leads to hidden complexity. Prefer extracting code to make it easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripDrawer.kt:51:5",
        "message": "Function draw is nested too deeply."
      }]
    }]
  }, {
    "group": "exceptions",
    "smells": [{
      "name": "TooGenericExceptionCaught",
      "description": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/ScreengrabTest.kt:133:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationView.kt:106:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/TripsRepository.kt:121:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/TripsRepository.kt:152:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripReloader.kt:56:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }]
    }, {
      "name": "TooGenericExceptionThrown",
      "description": "Thrown exception is too generic. Prefer throwing project specific exceptions to handle error cases.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/ScreengrabTest.kt:73:21",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/ScreengrabTest.kt:79:21",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/ScreengrabTest.kt:85:21",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/ScreengrabTest.kt:91:21",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/ScreengrabTest.kt:100:21",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/ScreengrabTest.kt:106:21",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/ScreengrabTest.kt:112:21",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/ScreengrabTest.kt:118:21",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/map/MapActivityTest.kt:80:107",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/trips/TripsTest.kt:64:107",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/NearbyStationsDrawer.kt:79:67",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/data/searches/SearchesRepository.kt:60:49",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/TripViewHolder.kt:82:25",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripDrawer.kt:167:94",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }]
    }, {
      "name": "PrintStackTrace",
      "description": "Do not print an stack trace. These debug statements should be replaced with a logger or removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/ScreengrabTest.kt:143:13",
        "message": "Do not print an stack trace. These debug statements should be replaced with a logger or removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/settings/SettingsManager.kt:73:17",
        "message": "Do not print an stack trace. These debug statements should be replaced with a logger or removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/settings/SettingsManager.kt:84:17",
        "message": "Do not print an stack trace. These debug statements should be replaced with a logger or removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/TripsRepository.kt:122:13",
        "message": "Do not print an stack trace. These debug statements should be replaced with a logger or removed."
      }]
    }, {
      "name": "ThrowingExceptionsWithoutMessageOrCause",
      "description": "A call to the default constructor of an exception was detected. Instead one of the constructor overloads should be called. This allows to provide more meaningful exceptions.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/about/ContributorsActivity.kt:52:31",
        "message": "A call to the default constructor of an exception was detected. Instead one of the constructor overloads should be called. This allows to provide more meaningful exceptions."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/about/ContributorsActivity.kt:64:31",
        "message": "A call to the default constructor of an exception was detected. Instead one of the constructor overloads should be called. This allows to provide more meaningful exceptions."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/about/AboutActivity.kt:57:31",
        "message": "A call to the default constructor of an exception was detected. Instead one of the constructor overloads should be called. This allows to provide more meaningful exceptions."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/about/AboutActivity.kt:69:31",
        "message": "A call to the default constructor of an exception was detected. Instead one of the constructor overloads should be called. This allows to provide more meaningful exceptions."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/TransportNetworkManager.kt:59:19",
        "message": "A call to the default constructor of an exception was detected. Instead one of the constructor overloads should be called. This allows to provide more meaningful exceptions."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/TransportNetwork.kt:73:19",
        "message": "A call to the default constructor of an exception was detected. Instead one of the constructor overloads should be called. This allows to provide more meaningful exceptions."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/data/searches/SearchesRepository.kt:93:30",
        "message": "A call to the default constructor of an exception was detected. Instead one of the constructor overloads should be called. This allows to provide more meaningful exceptions."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/data/searches/SearchesRepository.kt:98:40",
        "message": "A call to the default constructor of an exception was detected. Instead one of the constructor overloads should be called. This allows to provide more meaningful exceptions."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/TripsRepository.kt:192:21",
        "message": "A call to the default constructor of an exception was detected. Instead one of the constructor overloads should be called. This allows to provide more meaningful exceptions."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/TripsRepository.kt:193:23",
        "message": "A call to the default constructor of an exception was detected. Instead one of the constructor overloads should be called. This allows to provide more meaningful exceptions."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/TripsRepository.kt:198:53",
        "message": "A call to the default constructor of an exception was detected. Instead one of the constructor overloads should be called. This allows to provide more meaningful exceptions."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsFragment.kt:79:65",
        "message": "A call to the default constructor of an exception was detected. Instead one of the constructor overloads should be called. This allows to provide more meaningful exceptions."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsFragment.kt:126:57",
        "message": "A call to the default constructor of an exception was detected. Instead one of the constructor overloads should be called. This allows to provide more meaningful exceptions."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsActivity.kt:173:23",
        "message": "A call to the default constructor of an exception was detected. Instead one of the constructor overloads should be called. This allows to provide more meaningful exceptions."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripMapFragment.kt:83:58",
        "message": "A call to the default constructor of an exception was detected. Instead one of the constructor overloads should be called. This allows to provide more meaningful exceptions."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripUtils.kt:37:33",
        "message": "A call to the default constructor of an exception was detected. Instead one of the constructor overloads should be called. This allows to provide more meaningful exceptions."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripUtils.kt:49:33",
        "message": "A call to the default constructor of an exception was detected. Instead one of the constructor overloads should be called. This allows to provide more meaningful exceptions."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/StopAdapter.kt:50:20",
        "message": "A call to the default constructor of an exception was detected. Instead one of the constructor overloads should be called. This allows to provide more meaningful exceptions."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripReloader.kt:64:48",
        "message": "A call to the default constructor of an exception was detected. Instead one of the constructor overloads should be called. This allows to provide more meaningful exceptions."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripDrawer.kt:175:31",
        "message": "A call to the default constructor of an exception was detected. Instead one of the constructor overloads should be called. This allows to provide more meaningful exceptions."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripDrawer.kt:204:27",
        "message": "A call to the default constructor of an exception was detected. Instead one of the constructor overloads should be called. This allows to provide more meaningful exceptions."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripDetailViewModel.kt:104:55",
        "message": "A call to the default constructor of an exception was detected. Instead one of the constructor overloads should be called. This allows to provide more meaningful exceptions."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripDetailViewModel.kt:106:43",
        "message": "A call to the default constructor of an exception was detected. Instead one of the constructor overloads should be called. This allows to provide more meaningful exceptions."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripDetailViewModel.kt:108:47",
        "message": "A call to the default constructor of an exception was detected. Instead one of the constructor overloads should be called. This allows to provide more meaningful exceptions."
      }]
    }, {
      "name": "InstanceOfCheckForException",
      "description": "Instead of checking for a general exception type and checking for a specific exception type use multiple catch blocks.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/TripsRepository.kt:123:17",
        "message": "Instead of checking for a general exception type and checking for a specific exception type use multiple catch blocks."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/TripsRepository.kt:123:48",
        "message": "Instead of checking for a general exception type and checking for a specific exception type use multiple catch blocks."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/TripsRepository.kt:127:24",
        "message": "Instead of checking for a general exception type and checking for a specific exception type use multiple catch blocks."
      }]
    }]
  }, {
    "group": "naming",
    "smells": [{
      "name": "MatchingDeclarationName",
      "description": "If a source file contains only a single non-private top-level class or object, the file name should reflect the case-sensitive name plus the .kt extension.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/test/java/de/grobox/transportr/utils/IntentUtilsTest.kt:1:1",
        "message": "The file name 'IntentUtilsTest.kt' does not match the name of the single top-level declaration 'MapViewModelTest'."
      }]
    }, {
      "name": "FunctionMaxLength",
      "description": "Function names should not be longer than the maximum set in the project configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/settings/SettingsManager.kt:90:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/settings/SettingsManager.kt:94:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/DrawerActivity.kt:153:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationView.kt:225:5",
        "message": "Function names should be at most 30 characters long."
      }]
    }]
  }, {
    "group": "potential-bugs",
    "smells": [{
      "name": "UnsafeCast",
      "description": "Cast operator throws an exception if the cast is not possible.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/ScreengrabTest.kt:46:21",
        "message": "app.component cannot be safely cast to TestComponent."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/ui/LineView.kt:44:34",
        "message": "getDrawable(context, R.drawable.line_box) cannot be safely cast to GradientDrawable."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/ui/TimeDateFragment.kt:65:17",
        "message": "it.getSerializable(CALENDAR) cannot be safely cast to Calendar."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/ui/TimeDateFragment.kt:68:13",
        "message": "savedInstanceState.getSerializable(CALENDAR) cannot be safely cast to Calendar."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/settings/SettingsFragment.kt:54:10",
        "message": "activity!!.application cannot be safely cast to TransportrApplication."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/settings/SettingsFragment.kt:92:29",
        "message": "findPreference(key) cannot be safely cast to ListPreference."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/settings/SettingsFragment.kt:97:28",
        "message": "findPreference(key) cannot be safely cast to ListPreference."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/favorites/locations/SpecialLocationFragment.kt:64:17",
        "message": "activity!!.application cannot be safely cast to TransportrApplication."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/utils/TransportrUtils.kt:55:25",
        "message": "context.getSystemService(Context.CLIPBOARD_SERVICE) cannot be safely cast to ClipboardManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/utils/TransportrUtils.kt:97:18",
        "message": "context.getSystemService(Context.CONNECTIVITY_SERVICE) cannot be safely cast to ConnectivityManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/TransportrActivity.kt:42:18",
        "message": "application cannot be safely cast to TransportrApplication."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/PickTransportNetworkActivity.kt:104:27",
        "message": "item cannot be safely cast to TransportNetworkItem."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/GpsMapFragment.kt:82:17",
        "message": "super.onCreateView(inflater, container, savedInstanceState) cannot be safely cast to View."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/GpsController.kt:116:27",
        "message": "context.getSystemService(Context.LOCATION_SERVICE) cannot be safely cast to LocationManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/DrawerActivity.kt:66:35",
        "message": "profile.tag cannot be safely cast to TransportNetwork."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/MapViewModel.kt:130:28",
        "message": "it.latLng cannot be safely cast to LatLng."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationView.kt:93:24",
        "message": "context.getSystemService(LAYOUT_INFLATER_SERVICE) cannot be safely cast to LayoutInflater."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationView.kt:159:23",
        "message": "state.getSerializable(LOCATION) cannot be safely cast to WrapLocation?."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationView.kt:339:19",
        "message": "context.getSystemService(INPUT_METHOD_SERVICE) cannot be safely cast to InputMethodManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationView.kt:344:19",
        "message": "context.getSystemService(INPUT_METHOD_SERVICE) cannot be safely cast to InputMethodManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LineAdapter.kt:35:17",
        "message": "LayoutInflater.from(parent.context).inflate(R.layout.list_item_line, parent, false) cannot be safely cast to LineView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsFragment.kt:167:40",
        "message": "savedInstanceState.getSerializable(DATE) cannot be safely cast to Calendar."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/TripViewHolder.kt:78:28",
        "message": "LayoutInflater.from(context).inflate(R.layout.list_item_line, lines, false) cannot be safely cast to LineView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsActivity.kt:124:24",
        "message": "intent.getSerializableExtra(FROM) cannot be safely cast to WrapLocation?."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsActivity.kt:125:23",
        "message": "intent.getSerializableExtra(VIA) cannot be safely cast to WrapLocation?."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsActivity.kt:126:22",
        "message": "intent.getSerializableExtra(TO) cannot be safely cast to WrapLocation?."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsActivity.kt:131:23",
        "message": "intent.getSerializableExtra(VIA) cannot be safely cast to WrapLocation?."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsActivity.kt:135:28",
        "message": "intent.getSerializableExtra(FROM) cannot be safely cast to WrapLocation?."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsActivity.kt:136:26",
        "message": "intent.getSerializableExtra(TO) cannot be safely cast to WrapLocation?."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/LegViewHolder.kt:149:40",
        "message": "leg.intermediateStops cannot be safely cast to List<Stop>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripDrawer.kt:177:24",
        "message": "ContextCompat.getDrawable(context, res) cannot be safely cast to LayerDrawable."
      }]
    }, {
      "name": "UnsafeCallOnNullableType",
      "description": "It will throw a NullPointerException at runtime if your nullable value is null.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/networks/PickTransportNetworkActivityTest.kt:77:98",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/ui/LineView.kt:69:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/ui/TimeDateFragment.kt:85:30",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/settings/SettingsFragment.kt:54:10",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/settings/SettingsFragment.kt:74:70",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/settings/SettingsFragment.kt:75:42",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/favorites/locations/SpecialLocationFragment.kt:64:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/TransportNetwork.kt:49:80",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/GpsMapFragment.kt:129:86",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/GpsMapFragment.kt:146:63",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/GpsMapFragment.kt:147:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/GpsMapFragment.kt:224:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/GpsController.kt:66:33",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/GpsController.kt:85:23",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/GpsController.kt:86:22",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/GpsController.kt:87:27",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/SavedSearchesFragment.kt:40:38",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/SavedSearchesFragment.kt:58:42",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/SavedSearchesFragment.kt:64:42",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/MapFragment.kt:70:43",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationView.kt:233:33",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationView.kt:233:60",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationView.kt:234:41",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationView.kt:235:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationView.kt:248:27",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationView.kt:303:31",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationView.kt:325:31",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/data/searches/SearchesRepository.kt:75:56",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/data/searches/SearchesRepository.kt:78:41",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/data/locations/LocationRepository.kt:52:54",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/data/locations/LocationRepository.kt:62:54",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/SavedSearchesFragment.kt:38:38",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/SavedSearchesFragment.kt:56:42",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/SavedSearchesFragment.kt:62:42",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/TripsRepository.kt:138:44",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/TripsRepository.kt:141:23",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/TripsRepository.kt:142:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsFragment.kt:69:43",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsFragment.kt:127:57",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsFragment.kt:129:27",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/BaseViewHolder.kt:50:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/BaseViewHolder.kt:70:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/LegViewHolder.kt:129:52",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/LegViewHolder.kt:141:46",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/LegViewHolder.kt:142:28",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/LegViewHolder.kt:217:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/LegViewHolder.kt:217:55",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/LegViewHolder.kt:218:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/LegViewHolder.kt:218:56",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/LegViewHolder.kt:219:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/LegViewHolder.kt:219:55",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/LegViewHolder.kt:220:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/LegViewHolder.kt:220:51",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripMapFragment.kt:58:43",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripMapFragment.kt:69:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripMapFragment.kt:72:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripMapFragment.kt:84:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripDrawer.kt:137:47",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripDrawer.kt:138:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripDrawer.kt:150:47",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripDrawer.kt:151:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripDetailViewModel.kt:111:31",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripDetailViewModel.kt:111:44",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }]
    }, {
      "name": "LateinitUsage",
      "description": "Usage of lateinit detected. Using lateinit for property initialization is error prone, try using constructor injection or delegation.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/ui/TimeDateFragment.kt:41:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/settings/SettingsFragment.kt:49:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/settings/SettingsFragment.kt:51:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/favorites/locations/SpecialLocationFragment.kt:49:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/favorites/locations/SpecialLocationFragment.kt:51:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/favorites/locations/SpecialLocationFragment.kt:54:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/favorites/locations/SpecialLocationFragment.kt:57:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/TransportrActivity.kt:36:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/TransportrActivity.kt:38:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/PickTransportNetworkActivity.kt:41:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/PickTransportNetworkActivity.kt:42:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/PickTransportNetworkActivity.kt:43:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/GpsMapFragment.kt:57:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/GpsMapFragment.kt:61:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/DrawerActivity.kt:50:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/DrawerActivity.kt:51:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/BaseMapFragment.kt:39:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/MapFragment.kt:51:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/MapFragment.kt:54:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/MapFragment.kt:55:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationView.kt:63:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsFragment.kt:55:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsFragment.kt:57:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsFragment.kt:60:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsActivity.kt:52:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsActivity.kt:55:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripMapFragment.kt:49:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripMapFragment.kt:52:5",
        "message": "Usages of latinit should be avoided."
      }]
    }, {
      "name": "UnconditionalJumpStatementInLoop",
      "description": "An unconditional jump statement in a loop is useless. The loop itself is only executed once.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/TransportNetworks.kt:755:5",
        "message": "This loop contains an unconditional jump expression which essentially renders it useless as it will exit the loop during the first iteration."
      }]
    }]
  }, {
    "group": "style",
    "smells": [{
      "name": "SpacingBetweenPackageAndImports",
      "description": "Violation of the package declaration style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/waitForId.kt:31:45",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of the class or object."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/ScreengrabTest.kt:34:19",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of ScreengrabTest."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/networks/PickTransportNetworkActivityTest.kt:20:38",
        "message": "There should be exactly one empty line in between the package declaration and the list of imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/networks/PickTransportNetworkActivityTest.kt:42:27",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of PickTransportNetworkActivityTest."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/trips/TripsTest.kt:44:27",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of TripsTest."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/test/java/de/grobox/transportr/utils/IntentUtilsTest.kt:25:22",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of MapViewModelTest."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/test/java/de/grobox/transportr/map/MapViewModelTest.kt:20:33",
        "message": "There should be exactly one empty line in between the package declaration and the list of imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/test/java/de/grobox/transportr/map/MapViewModelTest.kt:34:44",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of MapViewModelTest."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/ui/TransportrChangeLog.kt:28:53",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of TransportrChangeLog."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/settings/SettingsManager.kt:31:27",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of SettingsManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/favorites/locations/WorkPickerDialogFragment.kt:24:51",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of WorkPickerDialogFragment."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/favorites/locations/HomePickerDialogFragment.kt:24:51",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of HomePickerDialogFragment."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/utils/IntentUtils.kt:20:35",
        "message": "There should be exactly one empty line in between the package declaration and the list of imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/utils/TransportrUtils.kt:33:31",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of TransportrUtils."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/utils/OnboardingBuilder.kt:30:83",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of OnboardingBuilder."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/about/AboutFragment.kt:32:47",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of AboutFragment."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/about/Contributors.kt:23:30",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of Contributor."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/GpsController.kt:20:33",
        "message": "There should be exactly one empty line in between the package declaration and the list of imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/SavedSearchesFragment.kt:29:61",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of SavedSearchesFragment."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/NearbyStationsDrawer.kt:33:19",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of NearbyStationsDrawer."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationLiveData.kt:35:53",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of LocationLiveData."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/ReverseGeocoder.kt:35:32",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of ReverseGeocoder."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LineAdapter.kt:27:34",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of LineAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/data/locations/LocationRepository.kt:20:44",
        "message": "There should be exactly one empty line in between the package declaration and the list of imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/SavedSearchesFragment.kt:27:51",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of SavedSearchesFragment."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/TripsRepository.kt:20:42",
        "message": "There should be exactly one empty line in between the package declaration and the list of imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/LegViewHolder.kt:45:59",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of LegViewHolder."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/StopViewHolder.kt:20:42",
        "message": "There should be exactly one empty line in between the package declaration and the list of imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/StopViewHolder.kt:31:60",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of StopViewHolder."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripDrawer.kt:20:42",
        "message": "There should be exactly one empty line in between the package declaration and the list of imports."
      }]
    }, {
      "name": "MagicNumber",
      "description": "Report magic numbers. Magic number is a numeric literal that is not defined as a constant and hence it's unclear what the purpose of this number is. It's better to declare such numbers as constants and give them a proper name. By default, -1, 0, 1, and 2 are not considered to be magic numbers.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/waitForId.kt:58:55",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/ui/LineView.kt:51:59",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/settings/SettingsManager.kt:102:23",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/utils/IntentUtils.kt:104:45",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/PickTransportNetworkActivity.kt:131:45",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/TransportNetworkManager.kt:43:50",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/TransportNetworkManager.kt:56:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/ContinentItem.kt:69:75",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/RegionViewHolder.kt:71:32",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/RegionViewHolder.kt:80:38",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/CountryItem.kt:68:75",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/TransportNetworkItem.kt:32:60",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/GpsMapFragment.kt:188:36",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/GpsController.kt:66:70",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/GpsController.kt:107:33",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/GpsController.kt:107:60",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/DrawerActivity.kt:141:37",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/BaseMapFragment.kt:110:36",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/MapDrawer.kt:59:46",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/MapFragment.kt:160:71",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationLiveData.kt:53:39",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationGpsView.kt:73:30",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsFragment.kt:212:28",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsFragment.kt:221:30",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripMapFragment.kt:71:46",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripMapFragment.kt:92:27",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripReloader.kt:44:42",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripDrawer.kt:70:28",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }]
    }, {
      "name": "ThrowsCount",
      "description": "Restrict the number of throw statements in methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/ScreengrabTest.kt:68:5",
        "message": "Too many throw statements in the function getFrom. The maximum number of allowed throw statements is 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/ScreengrabTest.kt:95:5",
        "message": "Too many throw statements in the function getTo. The maximum number of allowed throw statements is 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/TripsRepository.kt:135:5",
        "message": "Too many throw statements in the function searchMore. The maximum number of allowed throw statements is 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripDetailViewModel.kt:103:5",
        "message": "Too many throw statements in the function reloadTrip. The maximum number of allowed throw statements is 2."
      }]
    }, {
      "name": "UnnecessaryAbstractClass",
      "description": "An abstract class is unnecessary and can be refactored. An abstract class should have both abstract and concrete properties or functions. An abstract class without a concrete member can be refactored to an interface. An abstract class without an abstract member can be refactored to a concrete class.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/ScreengrabTest.kt:37:1",
        "message": "An abstract class without an abstract member can be refactored to a concrete class."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/MapDrawer.kt:39:1",
        "message": "An abstract class without an abstract member can be refactored to a concrete class."
      }]
    }, {
      "name": "ExpressionBodySyntax",
      "description": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/ScreengrabTest.kt:122:57",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/ScreengrabTest.kt:126:39",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/androidTest/java/de/grobox/transportr/MockTestRunner.kt:28:100",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/test/java/de/grobox/transportr/utils/IntentUtilsTest.kt:45:70",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/settings/SettingsManager.kt:128:35",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/utils/TransportrUtils.kt:70:50",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/about/ContributorsActivity.kt:56:38",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/about/AboutActivity.kt:61:38",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/TransportNetworkManager.kt:78:82",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/Country.kt:34:52",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/Country.kt:38:32",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/Country.kt:42:51",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/TransportNetwork.kt:77:37",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/TransportNetwork.kt:81:50",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/Continent.kt:34:52",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/Continent.kt:38:50",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/Continent.kt:47:55",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/ContinentItem.kt:38:43",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/ContinentItem.kt:43:33",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/ContinentItem.kt:48:38",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/ContinentItem.kt:57:65",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/ContinentItem.kt:61:40",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/CountryItem.kt:37:43",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/CountryItem.kt:42:33",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/CountryItem.kt:47:38",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/CountryItem.kt:56:63",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/CountryItem.kt:60:40",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/TransportNetworkItem.kt:34:43",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/TransportNetworkItem.kt:39:33",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/TransportNetworkItem.kt:44:38",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/TransportNetworkItem.kt:53:72",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/TransportNetworkItem.kt:57:40",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/GpsController.kt:111:31",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/SavedSearchesFragment.kt:43:74",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/SavedSearchesFragment.kt:47:74",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/SavedSearchesFragment.kt:57:54",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/SavedSearchesFragment.kt:63:54",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/MapViewModel.kt:65:40",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/MapViewModel.kt:73:56",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/MapViewModel.kt:94:55",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/MapViewModel.kt:102:57",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/MapViewModel.kt:110:50",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/MapFragment.kt:166:88",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationView.kt:276:38",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/ReverseGeocoder.kt:140:73",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/data/searches/SearchesRepository.kt:84:40",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/data/locations/LocationRepository.kt:95:97",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/SavedSearchesFragment.kt:41:74",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/SavedSearchesFragment.kt:45:74",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/SavedSearchesFragment.kt:55:54",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/SavedSearchesFragment.kt:61:54",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/LegAdapter.kt:45:38",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/StopAdapter.kt:53:38",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripDetailViewModel.kt:68:35",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripDetailViewModel.kt:72:35",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripDetailViewModel.kt:95:45",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripDetailViewModel.kt:99:46",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }]
    }, {
      "name": "MaxLineLength",
      "description": "Line detected that is longer than the defined maximum line length in the code style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/ui/TransportrChangeLog.kt:50:143",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/ui/TransportrChangeLog.kt:53:143",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/ui/TransportrChangeLog.kt:58:143",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/ui/TransportrChangeLog.kt:61:147",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/ui/TimeDateFragment.kt:85:132",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/utils/IntentUtils.kt:42:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/utils/IntentUtils.kt:55:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/about/ContributorFragment.kt:63:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/about/AboutFragment.kt:53:13",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/CountryItem.kt:31:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/GpsMapFragment.kt:187:13",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/GpsController.kt:73:17",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/MapViewModel.kt:51:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/MapViewModel.kt:62:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/MapViewModel.kt:120:131",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/MapDrawer.kt:43:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationView.kt:52:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationView.kt:110:130",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationLiveData.kt:38:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/data/searches/SearchesRepository.kt:48:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/data/searches/SearchesRepository.kt:71:141",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/data/locations/LocationRepository.kt:38:26",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/data/locations/LocationRepository.kt:44:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/data/locations/LocationRepository.kt:96:128",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsFragment.kt:259:150",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/LegViewHolder.kt:48:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripUtils.kt:83:125",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripUtils.kt:91:132",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/LegPopupMenu.kt:49:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripDetailViewModel.kt:47:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }]
    }, {
      "name": "MayBeConst",
      "description": "Reports vals that can be const val instead.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/ui/TimeDateFragment.kt:46:9",
        "message": "CALENDAR can be a `const val`."
      }]
    }, {
      "name": "UnusedPrivateMember",
      "description": "Private member is unused.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/settings/SettingsManager.kt:144:9",
        "message": "Private property DIRECTIONS_ONBOARDING is unused."
      }]
    }, {
      "name": "MandatoryBracesIfStatements",
      "description": "Multi-line if statement was found that does not have braces. These should be added to improve readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/settings/SettingsManager.kt:101:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/utils/IntentUtils.kt:47:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/RegionViewHolder.kt:68:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/RegionViewHolder.kt:68:9",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/GpsMapFragment.kt:72:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/BaseViewHolder.kt:53:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/BaseViewHolder.kt:53:13",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/BaseViewHolder.kt:73:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/BaseViewHolder.kt:73:13",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }]
    }, {
      "name": "WildcardImport",
      "description": "Wildcard imports should be replaced with imports using fully qualified class names. Wildcard imports can lead to naming conflicts. A library update can introduce naming clashes with your classes which results in compilation errors.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/utils/IntentUtils.kt:35:1",
        "message": "de.grobox.transportr.utils.Constants.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/utils/TransportrUtils.kt:32:1",
        "message": "de.schildbach.pte.dto.Product.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/TransportNetworks.kt:26:1",
        "message": "de.schildbach.pte.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationView.kt:40:1",
        "message": "android.widget.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/ReverseGeocoder.kt:30:1",
        "message": "okhttp3.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/TripsRepository.kt:30:1",
        "message": "de.grobox.transportr.data.locations.FavoriteLocation.FavLocationType.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/TripsRepository.kt:40:1",
        "message": "de.schildbach.pte.dto.QueryTripsResult.Status.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsFragment.kt:25:1",
        "message": "android.view.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsFragment.kt:26:1",
        "message": "android.view.View.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsFragment.kt:46:1",
        "message": "de.grobox.transportr.utils.DateUtils.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/TripViewHolder.kt:33:1",
        "message": "de.grobox.transportr.utils.DateUtils.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsActivity.kt:37:1",
        "message": "de.grobox.transportr.utils.Constants.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/LegAdapter.kt:27:1",
        "message": "de.grobox.transportr.trips.detail.LegViewHolder.LegType.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/LegViewHolder.kt:36:1",
        "message": "de.grobox.transportr.trips.detail.LegViewHolder.LegType.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/LegViewHolder.kt:44:1",
        "message": "de.schildbach.pte.dto.Trip.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripUtils.kt:27:1",
        "message": "de.grobox.transportr.utils.DateUtils.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripDrawer.kt:42:1",
        "message": "de.schildbach.pte.dto.Trip.* is a wildcard import. Replace it with fully qualified imports."
      }]
    }, {
      "name": "NewLineAtEndOfFile",
      "description": "Checks whether files end with a line separator.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/utils/OnboardingBuilder.kt:56:1",
        "message": "The file OnboardingBuilder.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/Country.kt:54:1",
        "message": "The file Country.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/MapDrawer.kt:75:1",
        "message": "The file MapDrawer.kt is not ending with a new line."
      }]
    }, {
      "name": "ReturnCount",
      "description": "Restrict the number of return statements in methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/Country.kt:47:9",
        "message": "Function compare has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/GpsMapFragment.kt:171:5",
        "message": "Function onGpsFabClick has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/GpsController.kt:95:5",
        "message": "Function getWrapLocation has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/MapFragment.kt:118:5",
        "message": "Function onMarkerClick has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/TripViewHolder.kt:113:5",
        "message": "Function hasProblem has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/LegViewHolder.kt:214:5",
        "message": "Function getLineColor has 5 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/TripReloader.kt:75:5",
        "message": "Function isTheSame has 10 return statements which exceeds the limit of 2."
      }]
    }, {
      "name": "DataClassContainsFunctions",
      "description": "Data classes should mainly be used to store data and should not have any extra functions. (Compiler will automatically generate equals, toString and hashCode functions)",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/TransportNetwork.kt:51:5",
        "message": "The data class TransportNetwork contains functions which are not registered conversion functions. The offending method is called getNetworkProviderReference"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/TransportNetwork.kt:65:5",
        "message": "The data class TransportNetwork contains functions which are not registered conversion functions. The offending method is called getDescription"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/TransportNetwork.kt:77:5",
        "message": "The data class TransportNetwork contains functions which are not registered conversion functions. The offending method is called hasGoodLineNames"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/networks/TransportNetwork.kt:81:5",
        "message": "The data class TransportNetwork contains functions which are not registered conversion functions. The offending method is called getItem"
      }]
    }, {
      "name": "UnnecessaryParentheses",
      "description": "Unnecessary parentheses don't add any value to the code and should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/GpsController.kt:119:40",
        "message": "Parentheses in (activeProviders.size == 1 && activeProviders[0] != \"passive\") are unnecessary and can be replaced with: activeProviders.size == 1 && activeProviders[0] != \"passive\""
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/TripsRepository.kt:86:30",
        "message": "Parentheses in (if (query.via == null) \"null\" else query.via.location) are unnecessary and can be replaced with: if (query.via == null) \"null\" else query.via.location"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/TripsRepository.kt:159:45",
        "message": "Parentheses around the lambda ({\n            queryTripsContext = queryTripsResult.context\n            queryMoreState.value = getQueryMoreStateFromContext(queryTripsContext)\n\n            val oldTrips = trips.value?.let { HashSet(it) } ?: HashSet()\n            oldTrips.addAll(queryTripsResult.trips)\n            trips.value = oldTrips\n        }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/LegViewHolder.kt:158:41",
        "message": "Parentheses around the lambda ({ onStopClicked() }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/detail/LegViewHolder.kt:159:43",
        "message": "Parentheses around the lambda ({ onStopClicked() }) are unnecessary and can be removed."
      }]
    }, {
      "name": "NestedClassesVisibility",
      "description": "Nested types are often used for implementing private functionality and therefore this should not be public.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/SavedSearchesFragment.kt:56:5",
        "message": "Nested types are often used for implementing private functionality. However the visibility of SavedSearchesFragment makes it visible externally."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/SavedSearchesFragment.kt:62:5",
        "message": "Nested types are often used for implementing private functionality. However the visibility of SavedSearchesFragment makes it visible externally."
      }]
    }, {
      "name": "LoopWithTooManyJumpStatements",
      "description": "The loop contains more than one break or continue statement. The code should be refactored to increase readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/NearbyStationsDrawer.kt:42:9",
        "message": "The loop contains more than one break or continue statement. The code should be refactored to increase readability."
      }]
    }, {
      "name": "ForbiddenVoid",
      "description": "`Unit` should be used instead of `Void`.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/MapViewModel.kt:60:38",
        "message": "'Void' should be replaced with 'Unit'."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/map/MapViewModel.kt:61:41",
        "message": "'Void' should be replaced with 'Unit'."
      }]
    }, {
      "name": "UseDataClass",
      "description": "Classes that do nothing but hold data should be replaced with a data class.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/locations/LocationView.kt:137:5",
        "message": "The class LocationViewHolder defines nofunctionality and only holds data. Consider converting it to a data class."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/TripQuery.kt:26:1",
        "message": "The class TripQuery defines nofunctionality and only holds data. Consider converting it to a data class."
      }]
    }, {
      "name": "ForbiddenComment",
      "description": "Flags a forbidden comment. Defaults values are TODO:, FIXME: or STOPSHIP:",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/grote-Transportr/app/src/main/java/de/grobox/transportr/trips/search/DirectionsFragment.kt:238:21",
        "message": "This comment contains text that has been defined as forbidden in detekt."
      }]
    }]
  }]
}