{
  "complexity_metrics": {
    "loc": 9025,
    "sloc": 7732,
    "lloc": 5469,
    "cloc": 60,
    "mcc": 1788,
    "n_smell": 639,
    "comment_ratio": 0,
    "mcc_per_thlines": 326
  },
  "metrics": {
    "number_of_string": 371,
    "number_of_string_template": 52,
    "number_of_inline_func": 0,
    "number_of_inferred_fun": 95,
    "number_of_inferred_var": 921,
    "number_of_objects_declarations": 15,
    "number_of_companion_objects": 3,
    "number_of_singletons": 0,
    "number_of_declaration": 981,
    "number_of_var_declaration": 985,
    "number_of_func_call": 4123,
    "number_of_arguments": 3655,
    "number_of_parameters": 673,
    "number_of_qualified_expressions": 5901,
    "number_of_inheritances": 30,
    "number_of_unsafe_calls": 128,
    "number_of_safe_calls": 219,
    "number_of_destructuring_declarations": 4,
    "number_of_when_expressions": 59,
    "number_of_functions_with_default_value": 24,
    "number_of_function_call_with_named_value": 7,
    "number_of_named_argument": 31,
    "number_of_argument_with_default_value": 27,
    "number_of_overloaded_op": 1,
    "number_of_extension_function": 36,
    "number_of_properties_delegation": 0,
    "number_of_super_delegation": 0,
    "number_of_ranges": 19,
    "number_of_lambdas": 603,
    "number_of_possible_smart_casts": 23,
    "number_of_data_class": 12,
    "number_of_properties": 977,
    "number_of_functions": 510,
    "number_of_interfaces": 4,
    "number_of_classes": 68,
    "number_of_packages": 11,
    "number_of_kts_files": 0,
    "number_of_kt_files": 68
  },
  "findings": [{
    "group": "complexity",
    "smells": [{
      "name": "ComplexMethod",
      "description": "Prefer splitting up complex methods into smaller, easier to understand methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/RecentsFragment.kt:45:5",
        "message": "The function updateRecentCalls appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Contact.kt:22:5",
        "message": "The function compareTo appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Contact.kt:90:5",
        "message": "The function getNameToDisplay appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:80:5",
        "message": "The function actionItemPressed appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:254:5",
        "message": "The function setupView appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/SelectContactsAdapter.kt:88:9",
        "message": "The function bindView appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:98:5",
        "message": "The function onResume appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:317:5",
        "message": "The function initFragments appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:504:5",
        "message": "The function refreshContacts appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/DialpadActivity.kt:119:5",
        "message": "The function getCharKeyCode appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ContactActivity.kt:114:5",
        "message": "The function getPhoneNumberTypeText appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ContactActivity.kt:156:5",
        "message": "The function getIMTypeText appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:124:5",
        "message": "The function initContact appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:163:5",
        "message": "The function gotContact appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:582:5",
        "message": "The function setupTypePickers appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:1186:5",
        "message": "The function getPhoneNumberTypeId appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:1219:5",
        "message": "The function getIMTypeId appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:82:5",
        "message": "The function initContact appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfExporter.kt:32:5",
        "message": "The function exportContacts appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfExporter.kt:168:5",
        "message": "The function getPhoneNumberTypeLabel appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfImporter.kt:30:5",
        "message": "The function importContacts appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfImporter.kt:191:5",
        "message": "The function getPhoneNumberTypeId appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:34:5",
        "message": "The function getContacts appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:123:5",
        "message": "The function getDeviceContacts appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:239:5",
        "message": "The function getPhoneNumbers appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:311:5",
        "message": "The function getEmails appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:350:5",
        "message": "The function getAddresses appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:911:5",
        "message": "The function updateContact appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1224:5",
        "message": "The function insertContact appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1541:5",
        "message": "The function getRecents appears to be too complex."
      }]
    }, {
      "name": "LargeClass",
      "description": "One class should have one responsibility. Large classes tend to handle many things at once. Split up large classes into smaller classes that are easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:27:1",
        "message": "Class MyViewPagerFragment is too large. Consider splitting it into smaller pieces."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:33:1",
        "message": "Class ContactsAdapter is too large. Consider splitting it into smaller pieces."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:44:1",
        "message": "Class MainActivity is too large. Consider splitting it into smaller pieces."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:43:1",
        "message": "Class EditContactActivity is too large. Consider splitting it into smaller pieces."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:27:1",
        "message": "Class ViewContactActivity is too large. Consider splitting it into smaller pieces."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfImporter.kt:22:1",
        "message": "Class VcfImporter is too large. Consider splitting it into smaller pieces."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:30:1",
        "message": "Class ContactsHelper is too large. Consider splitting it into smaller pieces."
      }]
    }, {
      "name": "TooManyFunctions",
      "description": "Too many functions inside a/an file/class/object/interface always indicate a violation of the single responsibility principle. Maybe the file/class/object/interface wants to manage to many things at once. Extract functionality which clearly belongs together.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:27:1",
        "message": "Class 'MyViewPagerFragment' with '19' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/extensions/Context.kt:1:1",
        "message": "File 'Context.kt' with '28' functions detected. Defined threshold inside files is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ManageBlockedNumbersAdapter.kt:17:1",
        "message": "Class 'ManageBlockedNumbersAdapter' with '13' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/RecentCallsAdapter.kt:23:1",
        "message": "Class 'RecentCallsAdapter' with '16' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/GroupsAdapter.kt:24:1",
        "message": "Class 'GroupsAdapter' with '16' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:33:1",
        "message": "Class 'ContactsAdapter' with '26' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:44:1",
        "message": "Class 'MainActivity' with '28' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/DialpadActivity.kt:31:1",
        "message": "Class 'DialpadActivity' with '16' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/GroupContactsActivity.kt:23:1",
        "message": "Class 'GroupContactsActivity' with '11' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ContactActivity.kt:29:1",
        "message": "Class 'ContactActivity' with '11' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/SettingsActivity.kt:22:1",
        "message": "Class 'SettingsActivity' with '18' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:43:1",
        "message": "Class 'EditContactActivity' with '72' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:27:1",
        "message": "Class 'ViewContactActivity' with '23' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/Converters.kt:8:1",
        "message": "Class 'Converters' with '14' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:30:1",
        "message": "Class 'ContactsHelper' with '49' functions detected. Defined threshold inside classes is set to '11'"
      }]
    }, {
      "name": "ComplexCondition",
      "description": "Complex conditions should be simplified and extracted into well-named methods if necessary.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:100:13",
        "message": "This condition is too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Contact.kt:41:13",
        "message": "This condition is too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Contact.kt:50:13",
        "message": "This condition is too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:172:13",
        "message": "This condition is too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:237:17",
        "message": "This condition is too complex."
      }]
    }, {
      "name": "LabeledExpression",
      "description": "Expression with labels increase complexity and affect maintainability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:94:17",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:256:39",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/CreateNewGroupDialog.kt:34:33",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/CustomLabelDialog.kt:27:33",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/ExportContactsDialog.kt:40:33",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/ExportContactsDialog.kt:50:41",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/RenameGroupDialog.kt:29:33",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/RenameGroupDialog.kt:34:33",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/FilterContactSourcesDialog.kt:24:17",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:519:17",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/SelectContactActivity.kt:82:17",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/SettingsActivity.kt:158:30",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:691:47",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:825:28",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:979:28",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:993:28",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:259:52",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfExporter.kt:37:21",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1547:17",
        "message": "Expression with labels increase complexity and affect maintainability."
      }]
    }, {
      "name": "LongParameterList",
      "description": "The more parameters a method has the more complex it is. Long parameter lists are often used to control complex algorithms and violate the Single Responsibility Principle. Prefer methods with short parameter lists.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/SelectContactsAdapter.kt:88:21",
        "message": "The function bindView has too many parameters. The current threshold is set to 6."
      }]
    }, {
      "name": "NestedBlockDepth",
      "description": "Excessive nesting leads to hidden complexity. Prefer extracting code to make it easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/SelectContactsAdapter.kt:88:9",
        "message": "Function bindView is nested too deeply."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:124:5",
        "message": "Function initContact is nested too deeply."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:82:5",
        "message": "Function initContact is nested too deeply."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfImporter.kt:30:5",
        "message": "Function importContacts is nested too deeply."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfImporter.kt:165:5",
        "message": "Function getContactGroups is nested too deeply."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:239:5",
        "message": "Function getPhoneNumbers is nested too deeply."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:311:5",
        "message": "Function getEmails is nested too deeply."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:350:5",
        "message": "Function getAddresses is nested too deeply."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:389:5",
        "message": "Function getIMs is nested too deeply."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:428:5",
        "message": "Function getEvents is nested too deeply."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:495:5",
        "message": "Function getOrganizations is nested too deeply."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:532:5",
        "message": "Function getWebsites is nested too deeply."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:567:5",
        "message": "Function getContactGroups is nested too deeply."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:664:5",
        "message": "Function getDeviceStoredGroups is nested too deeply."
      }]
    }, {
      "name": "LongMethod",
      "description": "One method should have one responsibility. Long methods tend to handle many things at once. Prefer smaller methods to make them easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/DialpadActivity.kt:34:5",
        "message": "The function onCreate is too long. The maximum length is 20."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:163:5",
        "message": "The function gotContact is too long. The maximum length is 20."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:318:5",
        "message": "The function setupFieldVisibility is too long. The maximum length is 20."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:129:5",
        "message": "The function gotContact is too long. The maximum length is 20."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:123:5",
        "message": "The function getDeviceContacts is too long. The maximum length is 20."
      }]
    }, {
      "name": "StringLiteralDuplication",
      "description": "Multiple occurrences of the same string literal within a single file detected.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:250:75",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:770:25",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:933:33",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }]
    }]
  }, {
    "group": "empty-blocks",
    "smells": [{
      "name": "EmptyCatchBlock",
      "description": "Empty block of code detected. As they serve no purpose they should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:115:32",
        "message": "This empty block of code can be removed."
      }]
    }]
  }, {
    "group": "exceptions",
    "smells": [{
      "name": "TooGenericExceptionCaught",
      "description": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/extensions/Context.kt:159:14",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/DialerActivity.kt:50:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:454:26",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfExporter.kt:156:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfImporter.kt:146:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:115:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:166:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:272:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:302:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:341:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:380:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:419:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:456:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:486:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:523:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:558:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:598:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:696:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:725:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:743:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:758:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1129:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1141:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1201:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1406:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1493:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1536:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1624:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }]
    }]
  }, {
    "group": "naming",
    "smells": [{
      "name": "FunctionNaming",
      "description": "Function names should follow the naming convention set in the configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/databases/ContactsDatabase.kt:23:5",
        "message": "Function names should match the pattern: ^([a-z$][a-zA-Z$0-9]*)|(`.*`)$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/databases/ContactsDatabase.kt:25:5",
        "message": "Function names should match the pattern: ^([a-z$][a-zA-Z$0-9]*)|(`.*`)$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/Converters.kt:57:5",
        "message": "Function names should match the pattern: ^([a-z$][a-zA-Z$0-9]*)|(`.*`)$"
      }]
    }, {
      "name": "ConstructorParameterNaming",
      "description": "Constructor parameter names should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/LocalContact.kt:28:9",
        "message": "Constructor parameter names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Contact.kt:15:115",
        "message": "Constructor parameter names should match the pattern: [a-z][A-Za-z0-9]*"
      }]
    }, {
      "name": "VariableNaming",
      "description": "Variable names should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:37:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:44:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:45:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:46:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:48:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:49:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:50:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:605:13",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:929:9",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:930:9",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:932:13",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:933:13",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:934:13",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:935:13",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:1047:9",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/InsertOrEditContactActivity.kt:21:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/InsertOrEditContactActivity.kt:22:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:328:9",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:332:21",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfImporter.kt:113:17",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfImporter.kt:130:21",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:31:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:203:9",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:390:9",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:408:21",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1104:17",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }]
    }]
  }, {
    "group": "potential-bugs",
    "smells": [{
      "name": "UnsafeCallOnNullableType",
      "description": "It will throw a NullPointerException at runtime if your nullable value is null.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/databases/ContactsDatabase.kt:45:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/databases/ContactsDatabase.kt:58:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/databases/ContactsDatabase.kt:64:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/RecentsFragment.kt:32:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/RecentsFragment.kt:34:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/RecentsFragment.kt:46:33",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/RecentsFragment.kt:51:70",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/RecentsFragment.kt:56:32",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/GroupsFragment.kt:21:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/ContactsFragment.kt:16:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:94:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:119:38",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:146:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:167:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/FavoritesFragment.kt:21:30",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/FavoritesFragment.kt:27:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/GroupsAdapter.kt:62:71",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/GroupsAdapter.kt:76:73",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/GroupsAdapter.kt:106:68",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/GroupsAdapter.kt:110:49",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/GroupsAdapter.kt:112:54",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/GroupsAdapter.kt:129:61",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:205:37",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:218:71",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:291:54",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:229:10",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/SimpleActivity.kt:44:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/SelectContactActivity.kt:129:98",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/GroupContactsActivity.kt:73:51",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/GroupContactsActivity.kt:74:58",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/GroupContactsActivity.kt:127:47",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ContactActivity.kt:72:52",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ContactActivity.kt:79:35",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ContactActivity.kt:83:23",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ContactActivity.kt:99:22",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:172:15",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:175:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:181:29",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:183:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:186:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:194:38",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:195:40",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:196:40",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:200:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:200:45",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:203:32",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:203:67",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:241:62",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:255:46",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:256:19",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:269:40",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:397:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:408:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:415:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:418:58",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:426:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:433:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:441:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:448:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:456:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:463:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:471:31",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:475:46",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:476:51",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:480:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:487:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:492:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:522:22",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:547:37",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:571:54",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:572:33",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:579:54",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:583:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:590:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:597:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:604:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:611:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:618:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:716:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:716:28",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:825:54",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:826:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:832:33",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:833:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:843:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:979:68",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:981:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:982:52",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:993:68",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:1093:53",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:1123:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:1131:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:1137:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:1144:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:1149:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:1154:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:132:38",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:133:40",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:134:40",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:138:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:138:45",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:141:32",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:141:67",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:159:62",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:184:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:190:40",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:202:46",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:203:19",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:212:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:247:28",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:278:22",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:303:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:328:19",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:349:22",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:370:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:383:28",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:405:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:429:22",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:449:61",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:338:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:377:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:416:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:453:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:555:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:595:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/LocalContactsHelper.kt:85:70",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/LocalContactsHelper.kt:94:18",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/LocalContactsHelper.kt:108:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }]
    }, {
      "name": "UnsafeCast",
      "description": "Cast operator throws an exception if the cast is not possible.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/RecentsFragment.kt:57:35",
        "message": "it cannot be safely cast to RecentCall."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/RecentsFragment.kt:82:29",
        "message": "fragment_list.adapter cannot be safely cast to RecentCallsAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/RecentsFragment.kt:86:14",
        "message": "currAdapter cannot be safely cast to RecentCallsAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/GroupsFragment.kt:20:30",
        "message": "activity cannot be safely cast to SimpleActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:73:40",
        "message": "fragment_list.adapter cannot be safely cast to GroupsAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:74:41",
        "message": "fragment_list.adapter cannot be safely cast to RecentCallsAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:75:22",
        "message": "fragment_list.adapter cannot be safely cast to ContactsAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:116:42",
        "message": "contacts.filter { it.starred == 1 } cannot be safely cast to ArrayList<Contact>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:120:17",
        "message": "contacts.filter { contactSources.contains(it.source) } cannot be safely cast to ArrayList<Contact>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:156:28",
        "message": "storedGroups.asSequence().sortedWith(compareBy { it.title.normalizeString() }).toMutableList() cannot be safely cast to ArrayList<Group>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:164:31",
        "message": "activity cannot be safely cast to SimpleActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:166:41",
        "message": "it cannot be safely cast to Group."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:176:33",
        "message": "fragment_list.adapter cannot be safely cast to GroupsAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:180:18",
        "message": "currAdapter cannot be safely cast to GroupsAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:194:29",
        "message": "activity cannot be safely cast to SimpleActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:195:42",
        "message": "it cannot be safely cast to Contact."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:203:29",
        "message": "fragment_list.adapter cannot be safely cast to ContactsAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:207:14",
        "message": "currAdapter cannot be safely cast to ContactsAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:241:28",
        "message": "contactsIgnoringSearch.filter {\n                getProperText(it.getNameToDisplay(), shouldNormalize).contains(text, true) ||\n                        getProperText(it.nickname, shouldNormalize).contains(text, true) ||\n                        it.doesContainPhoneNumber(text) ||\n                        it.emails.any { it.value.contains(text, true) } ||\n                        it.addresses.any { getProperText(it.value, shouldNormalize).contains(text, true) } ||\n                        it.IMs.any { it.value.contains(text, true) } ||\n                        getProperText(it.notes, shouldNormalize).contains(text, true) ||\n                        getProperText(it.organization.company, shouldNormalize).contains(text, true) ||\n                        getProperText(it.organization.jobPosition, shouldNormalize).contains(text, true) ||\n                        it.websites.any { it.contains(text, true) }\n            } cannot be safely cast to ArrayList."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:281:34",
        "message": "fragment_wrapper.parent cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/FavoritesFragment.kt:22:28",
        "message": "activity cannot be safely cast to SimpleActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/extensions/Context.kt:40:52",
        "message": "getSystemService(Context.TELECOM_SERVICE) cannot be safely cast to TelecomManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/extensions/Context.kt:257:26",
        "message": "contacts.filter { !it.isPrivate() }.toMutableList() cannot be safely cast to ArrayList<Contact>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/extensions/Context.kt:258:27",
        "message": "contacts.filter { it.isPrivate() }.toMutableList() cannot be safely cast to ArrayList<Contact>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/extensions/Context.kt:269:26",
        "message": "contacts.filter { !it.isPrivate() }.toMutableList() cannot be safely cast to ArrayList<Contact>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/extensions/Context.kt:270:27",
        "message": "contacts.filter { it.isPrivate() }.toMutableList() cannot be safely cast to ArrayList<Contact>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/extensions/Context.kt:292:23",
        "message": "ArrayList(sources).map { if (it.type == SMT_PRIVATE) SMT_PRIVATE else it.name }.toMutableList() cannot be safely cast to ArrayList<String>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/extensions/String.kt:20:33",
        "message": "formatter cannot be safely cast to SimpleDateFormat."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/extensions/Activity.kt:54:29",
        "message": "it cannot be safely cast to String."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/extensions/Activity.kt:86:34",
        "message": "it cannot be safely cast to Int."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ManageBlockedNumbersAdapter.kt:56:38",
        "message": "blockedNumbers.filter { selectedKeys.contains(it.id.toInt()) } cannot be safely cast to ArrayList<BlockedNumber>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/RecentCallsAdapter.kt:92:52",
        "message": "callsToRemove.map { it.id } cannot be safely cast to ArrayList<Int>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/RecentCallsAdapter.kt:116:38",
        "message": "recentCalls.filter { selectedKeys.contains(it.id) } cannot be safely cast to ArrayList<RecentCall>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ViewPagerAdapter.kt:20:10",
        "message": "view cannot be safely cast to MyViewPagerFragment."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ViewPagerAdapter.kt:28:30",
        "message": "item cannot be safely cast to View."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/GroupsAdapter.kt:106:30",
        "message": "groups.filter { selectedKeys.contains(it.id!!.toInt()) } cannot be safely cast to ArrayList<Group>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:131:28",
        "message": "newItems.clone() cannot be safely cast to ArrayList<Contact>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:215:17",
        "message": "it cannot be safely cast to Int."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:245:38",
        "message": "contactItems.filter { selectedKeys.contains(it.id) } cannot be safely cast to ArrayList<Contact>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/CreateNewGroupDialog.kt:56:80",
        "message": "it cannot be safely cast to Int."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/SelectContactsDialog.kt:22:27",
        "message": "allContacts.filter { contactSources.contains(it.source) } cannot be safely cast to ArrayList<Contact>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/SelectContactsDialog.kt:24:41",
        "message": "allContacts.filter { it.starred == 1 } cannot be safely cast to ArrayList<Contact>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/SelectContactsDialog.kt:52:41",
        "message": "selectedContacts.filter { !initiallySelectedContacts.contains(it) } cannot be safely cast to ArrayList."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/SelectContactsDialog.kt:53:38",
        "message": "initiallySelectedContacts.filter { !selectedContacts.contains(it) } cannot be safely cast to ArrayList."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/ImportContactsDialog.kt:21:21",
        "message": "activity.layoutInflater.inflate(R.layout.dialog_import_contacts, null) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/SelectGroupsDialog.kt:18:24",
        "message": "activity.layoutInflater.inflate(R.layout.dialog_select_groups, null) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/SelectGroupsDialog.kt:86:27",
        "message": "it.tag cannot be safely cast to Long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/ExportContactsDialog.kt:21:21",
        "message": "activity.layoutInflater.inflate(R.layout.dialog_export_contacts, null) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/ExportContactsDialog.kt:53:60",
        "message": "view.export_contacts_list.adapter cannot be safely cast to FilterContactSourcesAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/FilterContactSourcesDialog.kt:43:39",
        "message": "view.filter_contact_sources_list.adapter cannot be safely cast to FilterContactSourcesAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:227:29",
        "message": "getSystemService(Context.SEARCH_SERVICE) cannot be safely cast to SearchManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:229:10",
        "message": "searchMenuItem!!.actionView cannot be safely cast to SearchView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:479:70",
        "message": "contacts cannot be safely cast to ArrayList<Contact>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/DialpadActivity.kt:163:24",
        "message": "contacts.filter { it.doesContainPhoneNumber(text) } cannot be safely cast to ArrayList<Contact>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/DialpadActivity.kt:166:25",
        "message": "it cannot be safely cast to Contact."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/DialpadActivity.kt:174:25",
        "message": "dialpad_list.adapter cannot be safely cast to ContactsAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/SelectContactActivity.kt:85:28",
        "message": "it.filter {\n                if (specialMimeType != null) {\n                    val hasRequiredValues = when (specialMimeType) {\n                        ContactsContract.CommonDataKinds.Email.CONTENT_ITEM_TYPE -> it.emails.isNotEmpty()\n                        ContactsContract.CommonDataKinds.Phone.CONTENT_ITEM_TYPE -> it.phoneNumbers.isNotEmpty()\n                        else -> true\n                    }\n                    !it.isPrivate() && hasRequiredValues\n                } else {\n                    true\n                }\n            } cannot be safely cast to ArrayList<Contact>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/SelectContactActivity.kt:99:24",
        "message": "contacts.filter { contactSources.contains(it.source) } cannot be safely cast to ArrayList<Contact>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/GroupContactsActivity.kt:34:17",
        "message": "intent.extras.getSerializable(GROUP) cannot be safely cast to Group."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/GroupContactsActivity.kt:85:29",
        "message": "it.filter { it.groups.map { it.id }.contains(group.id) } cannot be safely cast to ArrayList<Contact>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/GroupContactsActivity.kt:105:32",
        "message": "it cannot be safely cast to Contact."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/GroupContactsActivity.kt:113:29",
        "message": "group_contacts_list.adapter cannot be safely cast to ContactsAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/GroupContactsActivity.kt:117:14",
        "message": "currAdapter cannot be safely cast to ContactsAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ContactActivity.kt:93:31",
        "message": "it cannot be safely cast to String."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ContactActivity.kt:109:33",
        "message": "it cannot be safely cast to String."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ManageBlockedNumbersActivity.kt:69:44",
        "message": "it cannot be safely cast to BlockedNumber."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/SettingsActivity.kt:159:41",
        "message": "it cannot be safely cast to Int."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:499:14",
        "message": "eventHolder cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:530:14",
        "message": "groupHolder cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:630:38",
        "message": "it cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:639:37",
        "message": "it cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:648:39",
        "message": "it cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:657:34",
        "message": "it cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:666:37",
        "message": "it cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:716:28",
        "message": "contact!!.groups.filter { it.id != id } cannot be safely cast to ArrayList<Group>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:735:17",
        "message": "it cannot be safely cast to Int."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:756:17",
        "message": "it cannot be safely cast to Int."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:776:17",
        "message": "it cannot be safely cast to Int."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:801:17",
        "message": "it cannot be safely cast to Int."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:820:51",
        "message": "it cannot be safely cast to Int."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:1014:28",
        "message": "layoutInflater.inflate(R.layout.item_edit_phone_number, contact_numbers_holder, false) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:1025:27",
        "message": "layoutInflater.inflate(R.layout.item_edit_email, contact_emails_holder, false) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:1036:29",
        "message": "layoutInflater.inflate(R.layout.item_edit_address, contact_addresses_holder, false) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:1047:24",
        "message": "layoutInflater.inflate(R.layout.item_edit_im, contact_ims_holder, false) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:1058:27",
        "message": "layoutInflater.inflate(R.layout.item_event, contact_events_holder, false) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:1074:30",
        "message": "layoutInflater.inflate(R.layout.item_edit_website, contact_websites_holder, false) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:1098:19",
        "message": "it cannot be safely cast to Int."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/InsertOrEditContactActivity.kt:59:27",
        "message": "it cannot be safely cast to Contact."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/InsertOrEditContactActivity.kt:74:25",
        "message": "existing_contact_list.adapter cannot be safely cast to ContactsAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:240:18",
        "message": "contact_photo.layoutParams cannot be safely cast to RelativeLayout.LayoutParams."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:394:18",
        "message": "contact_organization_image.layoutParams cannot be safely cast to RelativeLayout.LayoutParams."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfImporter.kt:108:32",
        "message": "ezContact.urls.map { it.value } cannot be safely cast to ArrayList<String>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/Config.kt:12:17",
        "message": "prefs.getStringSet(IGNORED_CONTACT_SOURCES, hashSetOf(\".\")) cannot be safely cast to HashSet."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:62:32",
        "message": "tempContacts.distinctBy {\n                    it.getHashToCompare()\n                } cannot be safely cast to ArrayList<Contact>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/LocalContactsHelper.kt:18:28",
        "message": "context.contactsDB.getContacts().map { convertLocalContactToContact(it) }.toMutableList() cannot be safely cast to ArrayList<Contact>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/LocalContactsHelper.kt:112:22",
        "message": "storedGroups.filter { localContact.groups.contains(it.id) } cannot be safely cast to ArrayList<Group>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/LocalContactsHelper.kt:135:22",
        "message": "contact.groups.map { it.id }.toMutableList() cannot be safely cast to ArrayList<Long>."
      }]
    }, {
      "name": "LateinitUsage",
      "description": "Usage of lateinit detected. Using lateinit for property initialization is error prone, try using constructor injection or delegation.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:33:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:39:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:40:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/GroupContactsActivity.kt:27:5",
        "message": "Usages of latinit should be avoided."
      }]
    }]
  }, {
    "group": "style",
    "smells": [{
      "name": "MaxLineLength",
      "description": "Line detected that is longer than the defined maximum line length in the code style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/databases/ContactsDatabase.kt:34:129",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/RecentsFragment.kt:40:13",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/RecentsFragment.kt:51:122",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:27:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:156:142",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:164:121",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:194:131",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:265:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Contact.kt:12:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Contact.kt:13:20",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Contact.kt:14:20",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Contact.kt:15:20",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Contact.kt:50:124",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Contact.kt:59:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Contact.kt:114:161",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Contact.kt:115:137",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Contact.kt:116:145",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Contact.kt:128:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/extensions/Context.kt:45:135",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/extensions/Context.kt:137:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/extensions/Context.kt:175:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/extensions/Context.kt:193:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/extensions/Context.kt:292:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/extensions/Context.kt:318:17",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ManageBlockedNumbersAdapter.kt:17:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ManageBlockedNumbersAdapter.kt:18:35",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ManageBlockedNumbersAdapter.kt:44:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ManageBlockedNumbersAdapter.kt:56:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/RecentCallsAdapter.kt:23:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/RecentCallsAdapter.kt:24:26",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/RecentCallsAdapter.kt:36:147",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/RecentCallsAdapter.kt:60:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/FilterContactSourcesAdapter.kt:15:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/FilterContactSourcesAdapter.kt:25:132",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/FilterContactSourcesAdapter.kt:64:153",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/GroupsAdapter.kt:24:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/GroupsAdapter.kt:25:21",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/GroupsAdapter.kt:132:131",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:33:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:34:23",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:65:124",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:67:128",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:68:175",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:69:177",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:70:123",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:258:143",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:260:124",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:266:130",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:270:153",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:287:155",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:296:152",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/SelectContactsAdapter.kt:26:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/SelectContactsAdapter.kt:27:29",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/SelectContactsAdapter.kt:34:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/SelectContactsAdapter.kt:81:134",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/SelectContactsAdapter.kt:97:128",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/SelectContactsAdapter.kt:121:159",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/CreateNewGroupDialog.kt:39:134",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/CreateNewGroupDialog.kt:43:138",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/CreateNewGroupDialog.kt:44:130",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/CreateNewGroupDialog.kt:55:122",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/SelectContactsDialog.kt:13:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/SelectContactsDialog.kt:14:28",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/SelectContactsDialog.kt:31:145",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/ImportContactsDialog.kt:17:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/ImportContactsDialog.kt:26:123",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/SelectGroupsDialog.kt:17:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/ExportContactsDialog.kt:17:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/ExportContactsDialog.kt:27:40",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/ExportContactsDialog.kt:53:37",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/ExportContactsDialog.kt:55:61",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/AddBlockedNumberDialog.kt:14:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/FilterContactSourcesDialog.kt:43:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/DialerActivity.kt:44:145",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:164:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:232:138",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:367:168",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:560:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/SimpleActivity.kt:57:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/DialpadActivity.kt:58:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/SelectContactActivity.kt:36:139",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/SelectContactActivity.kt:37:139",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/GroupContactsActivity.kt:104:132",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ContactActivity.kt:57:21",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ContactActivity.kt:62:21",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ManageBlockedNumbersActivity.kt:60:152",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ManageBlockedNumbersActivity.kt:61:145",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:66:128",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:172:132",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:175:131",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:290:168",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:320:149",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:684:127",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:887:13",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:903:13",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:919:13",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:1014:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:1036:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:1074:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:1085:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/InsertOrEditContactActivity.kt:40:125",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/InsertOrEditContactActivity.kt:58:132",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:40:130",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:237:158",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:240:145",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:394:161",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:460:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfExporter.kt:32:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfExporter.kt:73:131",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfExporter.kt:76:33",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfExporter.kt:137:25",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfImporter.kt:52:21",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfImporter.kt:129:21",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfImporter.kt:134:17",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfImporter.kt:135:130",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfImporter.kt:138:140",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/Config.kt:13:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/Config.kt:25:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/Config.kt:48:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/Config.kt:49:129",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:160:21",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:161:133",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:260:21",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:567:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:609:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:616:130",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:810:138",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:854:123",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:861:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1106:21",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1107:21",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1147:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1172:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1210:17",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1211:17",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1443:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1563:13",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1585:25",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1590:153",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/LocalContactsHelper.kt:18:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/Constants.kt:126:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }]
    }, {
      "name": "UnusedPrivateMember",
      "description": "Private member is unused.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/overloads/String.kt:5:10",
        "message": "Private property i is unused."
      }]
    }, {
      "name": "UnnecessaryParentheses",
      "description": "Unnecessary parentheses don't add any value to the code and should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/RecentsFragment.kt:31:37",
        "message": "Parentheses in (isMarshmallowPlus() && context.isDefaultDialer()) are unnecessary and can be replaced with: isMarshmallowPlus() && context.isDefaultDialer()"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:100:13",
        "message": "Parentheses in (config.showTabs and CONTACTS_TAB_MASK == 0 && this is ContactsFragment) are unnecessary and can be replaced with: config.showTabs and CONTACTS_TAB_MASK == 0 && this is ContactsFragment"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:101:17",
        "message": "Parentheses in (config.showTabs and FAVORITES_TAB_MASK == 0 && this is FavoritesFragment) are unnecessary and can be replaced with: config.showTabs and FAVORITES_TAB_MASK == 0 && this is FavoritesFragment"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:102:17",
        "message": "Parentheses in (config.showTabs and RECENTS_TAB_MASK == 0 && this is RecentsFragment) are unnecessary and can be replaced with: config.showTabs and RECENTS_TAB_MASK == 0 && this is RecentsFragment"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:103:17",
        "message": "Parentheses in (config.showTabs and GROUPS_TAB_MASK == 0 && this is GroupsFragment) are unnecessary and can be replaced with: config.showTabs and GROUPS_TAB_MASK == 0 && this is GroupsFragment"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Group.kt:10:42",
        "message": "Parentheses in (Index(value = [\"id\"], unique = true)) are unnecessary and can be replaced with: Index(value = [\"id\"], unique = true)"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/LocalContact.kt:8:44",
        "message": "Parentheses in (Index(value = [\"id\"], unique = true)) are unnecessary and can be replaced with: Index(value = [\"id\"], unique = true)"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:172:14",
        "message": "Parentheses in (contact!!.id == 0 && action == Intent.ACTION_INSERT) are unnecessary and can be replaced with: contact!!.id == 0 && action == Intent.ACTION_INSERT"
      }]
    }, {
      "name": "WildcardImport",
      "description": "Wildcard imports should be replaced with imports using fully qualified class names. Wildcard imports can lead to naming conflicts. A library update can introduce naming clashes with your classes which results in compilation errors.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:9:1",
        "message": "com.simplemobiletools.commons.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/fragments/MyViewPagerFragment.kt:22:1",
        "message": "com.simplemobiletools.contacts.pro.helpers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/extensions/Context.kt:15:1",
        "message": "com.simplemobiletools.commons.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/extensions/Context.kt:24:1",
        "message": "com.simplemobiletools.contacts.pro.helpers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/extensions/Activity.kt:16:1",
        "message": "com.simplemobiletools.contacts.pro.helpers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ViewPagerAdapter.kt:10:1",
        "message": "com.simplemobiletools.contacts.pro.helpers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:25:1",
        "message": "com.simplemobiletools.contacts.pro.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/adapters/ContactsAdapter.kt:26:1",
        "message": "com.simplemobiletools.contacts.pro.helpers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/ExportContactsDialog.kt:5:1",
        "message": "com.simplemobiletools.commons.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/RenameGroupDialog.kt:5:1",
        "message": "com.simplemobiletools.commons.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/ManageVisibleTabsDialog.kt:9:1",
        "message": "com.simplemobiletools.contacts.pro.helpers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/ManageVisibleFieldsDialog.kt:9:1",
        "message": "com.simplemobiletools.contacts.pro.helpers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:18:1",
        "message": "com.simplemobiletools.commons.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:19:1",
        "message": "com.simplemobiletools.commons.helpers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:33:1",
        "message": "com.simplemobiletools.contacts.pro.helpers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/DialpadActivity.kt:15:1",
        "message": "com.simplemobiletools.commons.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/SelectContactActivity.kt:9:1",
        "message": "com.simplemobiletools.commons.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/GroupContactsActivity.kt:13:1",
        "message": "com.simplemobiletools.contacts.pro.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:22:1",
        "message": "com.simplemobiletools.commons.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:29:1",
        "message": "com.simplemobiletools.contacts.pro.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:30:1",
        "message": "com.simplemobiletools.contacts.pro.helpers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:31:1",
        "message": "com.simplemobiletools.contacts.pro.models.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/InsertOrEditContactActivity.kt:16:1",
        "message": "com.simplemobiletools.contacts.pro.helpers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:12:1",
        "message": "com.simplemobiletools.commons.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:16:1",
        "message": "com.simplemobiletools.contacts.pro.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:17:1",
        "message": "com.simplemobiletools.contacts.pro.helpers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfExporter.kt:19:1",
        "message": "ezvcard.property.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfImporter.kt:13:1",
        "message": "com.simplemobiletools.contacts.pro.helpers.VcfImporter.ImportResult.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfImporter.kt:14:1",
        "message": "com.simplemobiletools.contacts.pro.models.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/Converters.kt:6:1",
        "message": "com.simplemobiletools.contacts.pro.models.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:6:1",
        "message": "android.content.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:20:1",
        "message": "com.simplemobiletools.commons.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:21:1",
        "message": "com.simplemobiletools.commons.helpers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:23:1",
        "message": "com.simplemobiletools.contacts.pro.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:24:1",
        "message": "com.simplemobiletools.contacts.pro.models.* is a wildcard import. Replace it with fully qualified imports."
      }]
    }, {
      "name": "SerialVersionUIDInSerializableClass",
      "description": "A class which implements the Serializable interface does not define a correct serialVersionUID field. The serialVersionUID field should be a constant long value inside a companion object.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Group.kt:10:1",
        "message": "The class Group implements the Serializable interface and should thus define a serialVersionUID."
      }]
    }, {
      "name": "DataClassContainsFunctions",
      "description": "Data classes should mainly be used to store data and should not have any extra functions. (Compiler will automatically generate equals, toString and hashCode functions)",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Group.kt:16:5",
        "message": "The data class Group contains functions which are not registered conversion functions. The offending method is called addContact"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Group.kt:18:5",
        "message": "The data class Group contains functions which are not registered conversion functions. The offending method is called getBubbleText"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Group.kt:20:5",
        "message": "The data class Group contains functions which are not registered conversion functions. The offending method is called isPrivateSecretGroup"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Contact.kt:84:5",
        "message": "The data class Contact contains functions which are not registered conversion functions. The offending method is called getBubbleText"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Contact.kt:90:5",
        "message": "The data class Contact contains functions which are not registered conversion functions. The offending method is called getNameToDisplay"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Contact.kt:110:5",
        "message": "The data class Contact contains functions which are not registered conversion functions. The offending method is called getStringToCompare"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Contact.kt:120:5",
        "message": "The data class Contact contains functions which are not registered conversion functions. The offending method is called getHashToCompare"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Contact.kt:122:5",
        "message": "The data class Contact contains functions which are not registered conversion functions. The offending method is called getFullCompany"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Contact.kt:128:5",
        "message": "The data class Contact contains functions which are not registered conversion functions. The offending method is called isABusinessContact"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Contact.kt:130:5",
        "message": "The data class Contact contains functions which are not registered conversion functions. The offending method is called doesContainPhoneNumber"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Contact.kt:144:5",
        "message": "The data class Contact contains functions which are not registered conversion functions. The offending method is called isPrivate"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Organization.kt:4:5",
        "message": "The data class Organization contains functions which are not registered conversion functions. The offending method is called isEmpty"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/models/Organization.kt:6:5",
        "message": "The data class Organization contains functions which are not registered conversion functions. The offending method is called isNotEmpty"
      }]
    }, {
      "name": "CollapsibleIfStatements",
      "description": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/extensions/Context.kt:246:5",
        "message": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability."
      }]
    }, {
      "name": "ReturnCount",
      "description": "Restrict the number of return statements in methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/extensions/Context.kt:147:1",
        "message": "Function isEncodedContactUri has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/SimpleActivity.kt:38:5",
        "message": "Function getPhoneNumberFromIntent has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:99:5",
        "message": "Function onOptionsItemSelected has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/ViewContactActivity.kt:67:5",
        "message": "Function onOptionsItemSelected has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:704:5",
        "message": "Function createNewGroup has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:763:5",
        "message": "Function getContactWithId has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:911:5",
        "message": "Function updateContact has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1224:5",
        "message": "Function insertContact has 3 return statements which exceeds the limit of 2."
      }]
    }, {
      "name": "MagicNumber",
      "description": "Report magic numbers. Magic number is a numeric literal that is not defined as a constant and hence it's unclear what the purpose of this number is. It's better to declare such numbers as constants and give them a proper name. By default, -1, 0, 1, and 2 are not considered to be magic numbers.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/extensions/Context.kt:141:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/extensions/Bitmap.kt:10:46",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:380:16",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:580:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:581:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:582:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:583:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:584:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:585:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:586:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:587:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/DialpadActivity.kt:147:19",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/DialpadActivity.kt:148:45",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/DialpadActivity.kt:148:62",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:46:37",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:50:32",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:293:57",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:301:33",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:302:33",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:556:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:699:40",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/EditContactActivity.kt:710:21",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfImporter.kt:159:20",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfImporter.kt:241:57",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:31:30",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1563:141",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1586:67",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1588:94",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1589:110",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1590:53",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1590:56",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1590:121",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1590:150",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }]
    }, {
      "name": "UseDataClass",
      "description": "Classes that do nothing but hold data should be replaced with a data class.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/CustomLabelDialog.kt:12:1",
        "message": "The class CustomLabelDialog defines nofunctionality and only holds data. Consider converting it to a data class."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/CallConfirmationDialog.kt:12:1",
        "message": "The class CallConfirmationDialog defines nofunctionality and only holds data. Consider converting it to a data class."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/ExportContactsDialog.kt:17:1",
        "message": "The class ExportContactsDialog defines nofunctionality and only holds data. Consider converting it to a data class."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/AddBlockedNumberDialog.kt:14:1",
        "message": "The class AddBlockedNumberDialog defines nofunctionality and only holds data. Consider converting it to a data class."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/dialogs/RenameGroupDialog.kt:12:1",
        "message": "The class RenameGroupDialog defines nofunctionality and only holds data. Consider converting it to a data class."
      }]
    }, {
      "name": "SpacingBetweenPackageAndImports",
      "description": "Violation of the package declaration style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/activities/MainActivity.kt:41:32",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of MainActivity."
      }]
    }, {
      "name": "OptionalWhenBraces",
      "description": "Optional braces in when expression",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfImporter.kt:193:9",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/VcfImporter.kt:200:9",
        "message": "Optional braces in when expression"
      }]
    }, {
      "name": "LoopWithTooManyJumpStatements",
      "description": "The loop contains more than one break or continue statement. The code should be refactored to increase readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:684:17",
        "message": "The loop contains more than one break or continue statement. The code should be refactored to increase readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Contacts/app/src/main/kotlin/com/simplemobiletools/contacts/pro/helpers/ContactsHelper.kt:1572:21",
        "message": "The loop contains more than one break or continue statement. The code should be refactored to increase readability."
      }]
    }]
  }]
}