{
  "complexity_metrics": {
    "loc": 15877,
    "sloc": 12883,
    "lloc": 9652,
    "cloc": 546,
    "mcc": 2397,
    "n_smell": 1375,
    "comment_ratio": 4,
    "mcc_per_thlines": 248
  },
  "metrics": {
    "number_of_string": 1091,
    "number_of_string_template": 116,
    "number_of_inline_func": 0,
    "number_of_inferred_fun": 84,
    "number_of_inferred_var": 1101,
    "number_of_objects_declarations": 67,
    "number_of_companion_objects": 24,
    "number_of_singletons": 6,
    "number_of_declaration": 1642,
    "number_of_var_declaration": 1656,
    "number_of_func_call": 6412,
    "number_of_arguments": 5852,
    "number_of_parameters": 2102,
    "number_of_qualified_expressions": 7162,
    "number_of_inheritances": 110,
    "number_of_unsafe_calls": 86,
    "number_of_safe_calls": 148,
    "number_of_destructuring_declarations": 12,
    "number_of_when_expressions": 73,
    "number_of_functions_with_default_value": 118,
    "number_of_function_call_with_named_value": 267,
    "number_of_named_argument": 552,
    "number_of_argument_with_default_value": 246,
    "number_of_overloaded_op": 10,
    "number_of_extension_function": 16,
    "number_of_properties_delegation": 204,
    "number_of_super_delegation": 2,
    "number_of_ranges": 6,
    "number_of_lambdas": 1235,
    "number_of_possible_smart_casts": 52,
    "number_of_data_class": 15,
    "number_of_properties": 1630,
    "number_of_functions": 960,
    "number_of_interfaces": 19,
    "number_of_classes": 278,
    "number_of_packages": 15,
    "number_of_kts_files": 0,
    "number_of_kt_files": 127
  },
  "findings": [{
    "group": "complexity",
    "smells": [{
      "name": "StringLiteralDuplication",
      "description": "Multiple occurrences of the same string literal within a single file detected.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/Official.kt:84:19",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:348:23",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:793:44",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:1001:33",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:822:41",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:999:43",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Pages.kt:46:31",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/DashOld.kt:95:24",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:282:31",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:92:43",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/Module.kt:16:57",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/notification/ANotificationUtils.kt:35:29",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Persistence.kt:56:54",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Persistence.kt:37:63",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Proxy.kt:19:62",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }]
    }, {
      "name": "LongParameterList",
      "description": "The more parameters a method has the more complex it is. Long parameter lists are often used to control complex algorithms and violate the Single Responsibility Principle. Prefer methods with short parameter lists.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:271:32",
        "message": "The function logEventAsync has too many parameters. The current threshold is set to 6."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:308:27",
        "message": "The function logEvent has too many parameters. The current threshold is set to 6."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:976:16",
        "message": "The function queryDb has too many parameters. The current threshold is set to 6."
      }]
    }, {
      "name": "LargeClass",
      "description": "One class should have one responsibility. Large classes tend to handle many things at once. Split up large classes into smaller classes that are easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:18:1",
        "message": "Class JournalClient is too large. Consider splitting it into smaller pieces."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:564:1",
        "message": "Class DatabaseHelper is too large. Consider splitting it into smaller pieces."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:34:1",
        "message": "Class MainActivity is too large. Consider splitting it into smaller pieces."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Main.kt:25:1",
        "message": "Class Main is too large. Consider splitting it into smaller pieces."
      }]
    }, {
      "name": "ComplexMethod",
      "description": "Prefer splitting up complex methods into smaller, easier to understand methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:102:5",
        "message": "The function initialize appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:308:5",
        "message": "The function logEvent appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:379:5",
        "message": "The function saveEvent appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:586:5",
        "message": "The function truncate appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:724:5",
        "message": "The function updateServer appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:774:5",
        "message": "The function mergeEventsAndIdentifys appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:818:5",
        "message": "The function makeEventUploadPostRequest appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:993:9",
        "message": "The function upgradePrefs appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:87:5",
        "message": "The function compareJSONObjects appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:746:5",
        "message": "The function getValueFromTable appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:792:5",
        "message": "The function getEventsFromTable appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:257:5",
        "message": "The function handleInfo appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Welcome.kt:79:5",
        "message": "The function run appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:660:5",
        "message": "The function onFinishInflate appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Tunnel.kt:77:1",
        "message": "The function newTunnelModule appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ContentActor.kt:26:5",
        "message": "The function reveal appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Property.kt:283:5",
        "message": "The function refresh appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/WebViewActor.kt:77:5",
        "message": "The function attach appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:230:5",
        "message": "The function from appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterAddDialog.kt:49:5",
        "message": "The function show appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterAddDialog.kt:97:5",
        "message": "The function handleSave appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddAppView.kt:77:5",
        "message": "The function onFinishInflate appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddView.kt:61:5",
        "message": "The function onFinishInflate appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-tunnel/kotlin/tunnel/BlockadeTest.kt:10:5",
        "message": "The function fixture appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/FilterSerializer.kt:6:5",
        "message": "The function deserialise appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Tunnel.kt:38:5",
        "message": "The function run appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Proxy.kt:24:5",
        "message": "The function fromDevice appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/VpnConfigurator.kt:18:5",
        "message": "The function configure appears to be too complex."
      }]
    }, {
      "name": "TooManyFunctions",
      "description": "Too many functions inside a/an file/class/object/interface always indicate a violation of the single responsibility principle. Maybe the file/class/object/interface wants to manage to many things at once. Extract functionality which clearly belongs together.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:18:1",
        "message": "Class 'JournalClient' with '58' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:148:1",
        "message": "Class 'JournalLog' with '19' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:564:1",
        "message": "Class 'DatabaseHelper' with '29' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:34:1",
        "message": "Class 'MainActivity' with '13' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:18:1",
        "message": "Class 'ATopBarView' with '13' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Property.kt:7:1",
        "message": "Interface 'IProperty' with '11' functions detected. Defined threshold inside interfaces is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Property.kt:208:1",
        "message": "Class 'BaseProperty' with '12' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:6:1",
        "message": "Class 'TopBarView' with '13' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/FilterManager.kt:8:1",
        "message": "Class 'FilterManager' with '11' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Main.kt:25:1",
        "message": "Class 'Main' with '23' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Tunnel.kt:20:1",
        "message": "Class 'Tunnel' with '12' functions detected. Defined threshold inside classes is set to '11'"
      }]
    }, {
      "name": "LabeledExpression",
      "description": "Expression with labels increase complexity and affect maintainability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:212:17",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:299:17",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:535:17",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:548:17",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:656:17",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:674:17",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:690:17",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:706:17",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Main.kt:54:32",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Main.kt:55:32",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Main.kt:56:30",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Main.kt:57:32",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Main.kt:58:33",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Main.kt:59:29",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Main.kt:60:33",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Main.kt:61:31",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Main.kt:62:32",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Main.kt:63:35",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Main.kt:64:29",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Main.kt:65:32",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Main.kt:66:35",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:347:17",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:466:30",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/UiUtils.kt:32:13",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/UiUtils.kt:39:13",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterGenerateDialog.kt:96:17",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterActor.kt:33:30",
        "message": "Expression with labels increase complexity and affect maintainability."
      }]
    }, {
      "name": "NestedBlockDepth",
      "description": "Excessive nesting leads to hidden complexity. Prefer extracting code to make it easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:87:5",
        "message": "Function compareJSONObjects is nested too deeply."
      }]
    }, {
      "name": "ComplexCondition",
      "description": "Complex conditions should be simplified and extracted into well-named methods if necessary.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:94:17",
        "message": "This condition is too complex."
      }]
    }, {
      "name": "LongMethod",
      "description": "One method should have one responsibility. Long methods tend to handle many things at once. Prefer smaller methods to make them easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:65:5",
        "message": "The function onCreate is too long. The maximum length is 20."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Main.kt:77:5",
        "message": "The function attachBaseContext is too long. The maximum length is 20."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/notification/ANotificationUtils.kt:26:1",
        "message": "The function displayNotification is too long. The maximum length is 20."
      }]
    }, {
      "name": "ComplexInterface",
      "description": "An interface contains too many functions and properties. Large classes tend to handle many things at once. An interface should have one responsibility. Split up large interfaces into smaller ones that are easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Property.kt:7:1",
        "message": "The interface IProperty is too complex. Consider splitting it up."
      }]
    }]
  }, {
    "group": "empty-blocks",
    "smells": [{
      "name": "EmptyCatchBlock",
      "description": "Empty block of code detected. As they serve no purpose they should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:1002:44",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:126:36",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:343:40",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:369:63",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Main.kt:133:36",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/EnabledStateActor.kt:39:81",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/EnabledStateActor.kt:43:82",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/EnabledStateActor.kt:47:83",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/EnabledStateActor.kt:51:84",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/KeepAlive.kt:104:57",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/KeepAlive.kt:105:75",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/APersistenceUtils.kt:30:56",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Device.kt:179:57",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AConnectivity.kt:105:28",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/main/AUpdateDownloader.kt:50:51",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/WebViewActor.kt:146:32",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/SimpleDialog.kt:64:40",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/DashCoordinator.kt:82:81",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/update/AUpdateDownloader.kt:58:51",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:53:68",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:97:62",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:140:36",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Tunnel.kt:199:36",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-legacy/java/gs/TestUtil.kt:16:28",
        "message": "This empty block of code can be removed."
      }]
    }, {
      "name": "EmptyIfBlock",
      "description": "Empty block of code detected. As they serve no purpose they should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Welcome.kt:138:38",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:58:39",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:58:39",
        "message": "This empty block of code can be removed."
      }]
    }, {
      "name": "EmptyClassBlock",
      "description": "Empty block of code detected. As they serve no purpose they should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:296:1",
        "message": "The class or object  Add is empty."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/Journal.kt:25:5",
        "message": "The class or object  Companion is empty."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/Journal.kt:25:5",
        "message": "The class or object  Companion is empty."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/g11n/kotlin/g11n/Main.kt:9:1",
        "message": "The class or object  Events is empty."
      }]
    }, {
      "name": "EmptyInitBlock",
      "description": "Empty block of code detected. As they serve no purpose they should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/SimpleDialog.kt:32:10",
        "message": "This empty block of code can be removed."
      }]
    }, {
      "name": "EmptyWhileBlock",
      "description": "Empty block of code detected. As they serve no purpose they should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-legacy/java/core/BlokadaTest.kt:117:33",
        "message": "This empty block of code can be removed."
      }]
    }]
  }, {
    "group": "exceptions",
    "smells": [{
      "name": "TooGenericExceptionCaught",
      "description": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Log.kt:64:14",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/Official.kt:83:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:907:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:1002:30",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:1049:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:67:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:343:26",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:400:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:767:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:825:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:190:26",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Pages.kt:109:14",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Welcome.kt:193:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Main.kt:133:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Main.kt:185:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:95:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:100:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:221:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:248:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:364:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:509:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:556:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:720:26",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/EnabledStateActor.kt:39:67",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/EnabledStateActor.kt:43:68",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/EnabledStateActor.kt:47:69",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/EnabledStateActor.kt:51:70",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/KeepAlive.kt:104:43",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/KeepAlive.kt:105:61",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/obsolete/Sync.kt:16:45",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Repo.kt:75:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Repo.kt:117:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Property.kt:289:26",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Property.kt:298:26",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/APersistenceUtils.kt:30:42",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/APersistenceUtils.kt:44:14",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Device.kt:175:16",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Device.kt:179:43",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/Identity.kt:50:14",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AConnectivity.kt:50:14",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AConnectivity.kt:69:14",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AConnectivity.kt:105:14",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/main/AUpdateDownloader.kt:50:37",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/main/AAppUtils.kt:38:14",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/WebViewActor.kt:101:30",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/WebViewActor.kt:132:51",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/WebViewActor.kt:146:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/SimpleDialog.kt:64:26",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/SimpleDialog.kt:71:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/DashCoordinator.kt:82:67",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/update/AUpdateDownloader.kt:58:37",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:42:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:44:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:52:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:53:54",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:95:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:97:48",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:111:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:122:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:140:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:189:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterAddDialog.kt:92:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterAddDialog.kt:207:66",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterAddDialog.kt:215:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterGenerateDialog.kt:113:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddFileView.kt:100:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterActor.kt:82:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterActor.kt:97:14",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddLinkView.kt:138:45",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/FilterSerializer.kt:22:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Tunnel.kt:66:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Tunnel.kt:199:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Proxy.kt:27:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Proxy.kt:126:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/VpnConfigurator.kt:46:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/VpnConfigurator.kt:58:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/VpnConfigurator.kt:98:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-legacy/java/gs/TestUtil.kt:16:14",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }]
    }, {
      "name": "TooGenericExceptionThrown",
      "description": "Thrown exception is too generic. Prefer throwing project specific exceptions to handle error cases.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Kontext.kt:12:58",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/App.kt:134:21",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/App.kt:145:21",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:262:25",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:319:17",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:325:34",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Persistence.kt:61:21",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Persistence.kt:73:21",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/APersistenceUtils.kt:33:25",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/Identity.kt:32:17",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/update/AUpdateView.kt:111:13",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:186:55",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterAddDialog.kt:119:29",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterAddDialog.kt:121:46",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterAddDialog.kt:148:46",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterAddDialog.kt:173:29",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-tunnel/kotlin/tunnel/BlockadeTest.kt:23:33",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-tunnel/kotlin/tunnel/BlockadeTest.kt:33:33",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-tunnel/kotlin/tunnel/FilterManagerTest.kt:60:76",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-tunnel/kotlin/tunnel/FilterManagerTest.kt:87:76",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/FilterManager.kt:13:21",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Permission.kt:34:9",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-legacy/java/core/BlokadaTest.kt:142:13",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-legacy/java/core/BlokadaTest.kt:146:13",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-legacy/java/core/BlokadaTest.kt:150:13",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-legacy/java/core/BlokadaTest.kt:154:13",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-legacy/java/core/BlokadaTest.kt:296:13",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-legacy/java/core/BlokadaTest.kt:300:13",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-legacy/java/core/BlokadaTest.kt:304:13",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-legacy/java/core/BlokadaTest.kt:308:13",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-legacy/java/core/BlokadaTest.kt:312:13",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-core/kotlin/core/EmitTest.kt:76:26",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }]
    }, {
      "name": "InstanceOfCheckForException",
      "description": "Instead of checking for a general exception type and checking for a specific exception type use multiple catch blocks.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Repo.kt:77:17",
        "message": "Instead of checking for a general exception type and checking for a specific exception type use multiple catch blocks."
      }]
    }, {
      "name": "RethrowCaughtException",
      "description": "Do not rethrow a caught exception of the same type.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Tunnel.kt:65:13",
        "message": "Do not rethrow a caught exception of the same type."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Tunnel.kt:148:17",
        "message": "Do not rethrow a caught exception of the same type."
      }]
    }]
  }, {
    "group": "naming",
    "smells": [{
      "name": "FunctionMinLength",
      "description": "Function names should not be shorter than the minimum defined in the configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Emit.kt:24:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Emit.kt:28:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Emit.kt:50:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Emit.kt:66:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Emit.kt:91:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Emit.kt:108:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Log.kt:10:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Log.kt:11:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Log.kt:12:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Log.kt:95:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Log.kt:102:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Log.kt:109:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:165:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:169:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:173:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:177:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:185:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:189:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:201:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:205:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:209:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:213:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:217:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/FilterSourceSingle.kt:16:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:35:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:101:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:175:5",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterAddDialog.kt:197:1",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Model.kt:68:5",
        "message": "Function names should be at least 3 characters long."
      }]
    }, {
      "name": "MemberNameEqualsClassName",
      "description": "A member should not given the same name as its parent class or object.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Format.kt:10:5",
        "message": "A member is named after the class object. This might result in confusion. Please rename the member."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/KeepAlive.kt:25:5",
        "message": "A member is named after the class. This might result in confusion. Either rename the member or change it to a constructor."
      }]
    }, {
      "name": "FunctionMaxLength",
      "description": "Function names should not be longer than the maximum set in the project configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:194:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:161:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/main/AAppUtils.kt:14:1",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/main/AAppUtils.kt:23:1",
        "message": "Function names should be at most 30 characters long."
      }]
    }, {
      "name": "FunctionParameterNaming",
      "description": "Function parameter names should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:586:18",
        "message": "Function parameter names should match the pattern: [a-z][A-Za-z0-9]*"
      }]
    }, {
      "name": "VariableNaming",
      "description": "Variable names should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:961:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Device.kt:183:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AConnectivity.kt:99:9",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/WebViewActor.kt:57:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Main.kt:53:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }]
    }, {
      "name": "ObjectPropertyNaming",
      "description": "Property names inside objects should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:991:9",
        "message": "Private object property names should match the pattern: (_)?[A-Za-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:992:9",
        "message": "Private object property names should match the pattern: (_)?[A-Za-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:996:9",
        "message": "Private object property names should match the pattern: (_)?[A-Za-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:997:9",
        "message": "Private object property names should match the pattern: (_)?[A-Za-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:999:9",
        "message": "Private object property names should match the pattern: (_)?[A-Za-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:1002:9",
        "message": "Private object property names should match the pattern: (_)?[A-Za-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:1005:9",
        "message": "Private object property names should match the pattern: (_)?[A-Za-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:1008:9",
        "message": "Private object property names should match the pattern: (_)?[A-Za-z][A-Za-z0-9]*"
      }]
    }, {
      "name": "MatchingDeclarationName",
      "description": "If a source file contains only a single non-private top-level class or object, the file name should reflect the case-sensitive name plus the .kt extension.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/main/AAppUtils.kt:1:1",
        "message": "The file name 'AAppUtils.kt' does not match the name of the single top-level declaration 'RestartService'."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/WebViewActor.kt:1:1",
        "message": "The file name 'WebViewActor.kt' does not match the name of the single top-level declaration 'WebDash'."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/BasicDashes.kt:1:1",
        "message": "The file name 'BasicDashes.kt' does not match the name of the single top-level declaration 'MenuDash'."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/UiUtils.kt:1:1",
        "message": "The file name 'UiUtils.kt' does not match the name of the single top-level declaration 'Spacing'."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/Legacy.kt:1:1",
        "message": "The file name 'Legacy.kt' does not match the name of the single top-level declaration 'FilterSourceDescriptor'."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/g11n/kotlin/g11n/Model.kt:1:1",
        "message": "The file name 'Model.kt' does not match the name of the single top-level declaration 'TranslationStore'."
      }]
    }, {
      "name": "PackageNaming",
      "description": "Package names should match the naming convention set in the configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/g11n/kotlin/g11n/Model.kt:1:1",
        "message": "Package name should match the pattern: ^[a-z]+(\\.[a-z][a-z0-9]*)*$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/g11n/kotlin/g11n/TranslationsFetcher.kt:1:1",
        "message": "Package name should match the pattern: ^[a-z]+(\\.[a-z][a-z0-9]*)*$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/g11n/kotlin/g11n/Main.kt:1:1",
        "message": "Package name should match the pattern: ^[a-z]+(\\.[a-z][a-z0-9]*)*$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/g11n/kotlin/g11n/Persistence.kt:1:1",
        "message": "Package name should match the pattern: ^[a-z]+(\\.[a-z][a-z0-9]*)*$"
      }]
    }]
  }, {
    "group": "performance",
    "smells": [{
      "name": "SpreadOperator",
      "description": "Using a spread operator causes a full copy of the array to be created before calling a method has a very high performance penalty.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Log.kt:96:70",
        "message": "Using a spread operator causes a full copy of the array to be created before calling a method has a very high performance penalty."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Log.kt:103:74",
        "message": "Using a spread operator causes a full copy of the array to be created before calling a method has a very high performance penalty."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Log.kt:110:74",
        "message": "Using a spread operator causes a full copy of the array to be created before calling a method has a very high performance penalty."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AConnectivity.kt:100:48",
        "message": "Using a spread operator causes a full copy of the array to be created before calling a method has a very high performance penalty."
      }]
    }]
  }, {
    "group": "potential-bugs",
    "smells": [{
      "name": "UnsafeCast",
      "description": "Cast operator throws an exception if the cast is not possible.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/InputOutput.kt:64:13",
        "message": "url.openConnection() cannot be safely cast to HttpURLConnection."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Emit.kt:47:14",
        "message": "callback cannot be safely cast to Callback<T>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Emit.kt:51:60",
        "message": "callback cannot be safely cast to Callback<*>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Emit.kt:52:40",
        "message": "this.value cannot be safely cast to T."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Emit.kt:75:67",
        "message": "async(ktx().coroutineContext()) {\n        emits[event]\n    }.await()?.value cannot be safely cast to T?."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Log.kt:98:50",
        "message": "it cannot be safely cast to Throwable."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Log.kt:105:52",
        "message": "it cannot be safely cast to Throwable."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Kontext.kt:45:39",
        "message": "kontexts.getOrPut(id, {\n    AndroidKontext(id, this) } ) cannot be safely cast to AndroidKontext."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/Official.kt:81:23",
        "message": "ctx cannot be safely cast to Application."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:598:23",
        "message": "keys.next() cannot be safely cast to String."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:603:48",
        "message": "value cannot be safely cast to String."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:605:48",
        "message": "value cannot be safely cast to JSONObject."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:607:48",
        "message": "value cannot be safely cast to JSONArray."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:627:39",
        "message": "value cannot be safely cast to String."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:629:39",
        "message": "value cannot be safely cast to JSONObject."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:631:39",
        "message": "value cannot be safely cast to JSONArray."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:104:27",
        "message": "keys.next() cannot be safely cast to String."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:117:45",
        "message": "value1 cannot be safely cast to JSONObject."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:117:67",
        "message": "value2 cannot be safely cast to JSONObject."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:335:35",
        "message": "context\n                            .getSystemService(Context.TELEPHONY_SERVICE) cannot be safely cast to TelephonyManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:397:31",
        "message": "context\n                        .getSystemService(Context.TELEPHONY_SERVICE) cannot be safely cast to TelephonyManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:657:48",
        "message": "value cannot be safely cast to String."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:738:16",
        "message": "getValueFromTable(STORE_TABLE_NAME, key) cannot be safely cast to String?."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:743:16",
        "message": "getValueFromTable(LONG_STORE_TABLE_NAME, key) cannot be safely cast to Long?."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMainDashes.kt:50:42",
        "message": "parent cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMainDashes.kt:71:42",
        "message": "parent cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMainDashes.kt:92:42",
        "message": "parent cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMainDashes.kt:112:42",
        "message": "parent cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMainDashes.kt:132:42",
        "message": "parent cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMainDashes.kt:152:42",
        "message": "parent cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMainDashes.kt:172:42",
        "message": "parent cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMainDashes.kt:192:42",
        "message": "parent cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMainDashes.kt:212:42",
        "message": "parent cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMainDashes.kt:256:33",
        "message": "parent cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMainDashes.kt:263:22",
        "message": "LayoutInflater.from(ctx).inflate(R.layout.view_tunnel_config, parent, false) cannot be safely cast to TunnelConfigView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/App.kt:129:16",
        "message": "when (current) {\n            is Boolean -> p.getBoolean(key, current)\n            is Int -> p.getInt(key, current)\n            is Long -> p.getLong(key, current)\n            is String -> p.getString(key, current)\n            else -> throw Exception(\"unsupported type for ${key}\")\n        } cannot be safely cast to T."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:79:20",
        "message": "findViewById(R.id.info) cannot be safely cast to AInfoView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:82:18",
        "message": "findViewById(R.id.topbar) cannot be safely cast to ATopBarView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:93:26",
        "message": "findViewById(R.id.reveal) cannot be safely cast to RevealFrameLayout."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:94:35",
        "message": "findViewById(R.id.reveal_container) cannot be safely cast to FrameLayout."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:99:22",
        "message": "findViewById(R.id.info_shadow) cannot be safely cast to View."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:116:16",
        "message": "findViewById(R.id.grid) cannot be safely cast to AGridView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:133:19",
        "message": "findViewById(R.id.fab) cannot be safely cast to AFloaterView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:141:22",
        "message": "fab.layoutParams cannot be safely cast to CoordinatorLayout.LayoutParams."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:309:48",
        "message": "null cannot be safely cast to Activity?."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Pages.kt:106:20",
        "message": "url.openConnection() cannot be safely cast to HttpURLConnection."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Floater.kt:89:28",
        "message": "d.icon cannot be safely cast to Int."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Welcome.kt:183:22",
        "message": "ctx.packageManager.getLaunchIntentForPackage(appId) cannot be safely cast to Intent?."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Main.kt:43:35",
        "message": "ctx.getSystemService(Context.JOB_SCHEDULER_SERVICE) cannot be safely cast to JobScheduler."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/DashOld.kt:156:29",
        "message": "dash.icon cannot be safely cast to Int."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/DashOld.kt:217:36",
        "message": "findViewById(R.id.dash_icon) cannot be safely cast to android.widget.ImageView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/DashOld.kt:218:38",
        "message": "findViewById(R.id.dash_switch) cannot be safely cast to android.support.v7.widget.SwitchCompat."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/DashOld.kt:219:36",
        "message": "findViewById(R.id.dash_text) cannot be safely cast to android.widget.TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:288:76",
        "message": "parent cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:425:21",
        "message": "LayoutInflater.from(themedContext).inflate(R.layout.view_filter, parent, false) cannot be safely cast to AFilterView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:435:18",
        "message": "v.tag cannot be safely cast to DnsActor."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:526:24",
        "message": "LayoutInflater.from(themedContext)\n            .inflate(R.layout.view_dnstab, null, false) cannot be safely cast to DnsAddTabView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:654:36",
        "message": "findViewById(R.id.filter_edit) cannot be safely cast to AutoCompleteTextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:655:37",
        "message": "findViewById(R.id.filter_edit2) cannot be safely cast to AutoCompleteTextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:656:37",
        "message": "findViewById(R.id.filter_error) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:657:39",
        "message": "findViewById(R.id.filter_comment) cannot be safely cast to EditText."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:658:43",
        "message": "findViewById(R.id.filter_comment_read) cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:732:9",
        "message": "android.view.LayoutInflater.from(context).inflate(R.layout.view_dnsadd, pager, false) cannot be safely cast to DnsAddView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:738:33",
        "message": "findViewById(R.id.filters_pager) cannot be safely cast to android.support.v4.view.ViewPager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:753:38",
        "message": "obj cannot be safely cast to android.view.View."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AGridView.kt:61:21",
        "message": "LayoutInflater.from(context).inflate(R.layout.view_dash, parent, false) cannot be safely cast to ADashView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AGridView.kt:71:18",
        "message": "v.tag cannot be safely cast to ADashActor."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:59:27",
        "message": "findViewById(R.id.topbar_action1) cannot be safely cast to ADashView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:60:27",
        "message": "findViewById(R.id.topbar_action2) cannot be safely cast to ADashView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:61:27",
        "message": "findViewById(R.id.topbar_action3) cannot be safely cast to ADashView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:62:27",
        "message": "findViewById(R.id.topbar_action4) cannot be safely cast to ADashView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:65:32",
        "message": "findViewById(R.id.topbar_logo) cannot be safely cast to ImageView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:66:32",
        "message": "findViewById(R.id.topbar_back) cannot be safely cast to View."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:68:34",
        "message": "findViewById(R.id.topbar_header) cannot be safely cast to View."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:201:26",
        "message": "background cannot be safely cast to ColorDrawable."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/KeepAlive.kt:112:28",
        "message": "ctx.getSystemService(Context.JOB_SCHEDULER_SERVICE) cannot be safely cast to JobScheduler."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/KeepAlive.kt:117:28",
        "message": "ctx.getSystemService(Context.JOB_SCHEDULER_SERVICE) cannot be safely cast to JobScheduler."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Persistence.kt:55:16",
        "message": "when (current) {\n            is Boolean -> p.getBoolean(key, current)\n            is Int -> p.getInt(key, current)\n            is Long -> p.getLong(key, current)\n            is String -> p.getString(key, current)\n            is Set<*> -> p.getStringSet(key, current as Set<String>)\n            else -> throw Exception(\"unsupported type for ${key}\")\n        } cannot be safely cast to T."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Persistence.kt:72:46",
        "message": "source cannot be safely cast to Set<String>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/Module.kt:52:13",
        "message": "ctx.getSystemService(Context.DOWNLOAD_SERVICE) cannot be safely cast to DownloadManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/Module.kt:55:13",
        "message": "ctx.getSystemService(Context.NOTIFICATION_SERVICE) cannot be safely cast to NotificationManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/Module.kt:58:13",
        "message": "ctx.getSystemService(Context.POWER_SERVICE) cannot be safely cast to PowerManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AContext.kt:23:45",
        "message": "applicationContext cannot be safely cast to KodeinAware."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AContext.kt:71:13",
        "message": "ctx.getSystemService(Context.CONNECTIVITY_SERVICE) cannot be safely cast to ConnectivityManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AContext.kt:74:13",
        "message": "ctx.getSystemService(Context.WIFI_SERVICE) cannot be safely cast to WifiManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AContext.kt:77:13",
        "message": "ctx.getSystemService(Context.DOWNLOAD_SERVICE) cannot be safely cast to DownloadManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AContext.kt:80:13",
        "message": "ctx.getSystemService(Context.ALARM_SERVICE) cannot be safely cast to AlarmManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AContext.kt:83:13",
        "message": "ctx.getSystemService(Context.NOTIFICATION_SERVICE) cannot be safely cast to NotificationManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AContext.kt:86:13",
        "message": "ctx.getSystemService(Context.POWER_SERVICE) cannot be safely cast to PowerManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AConnectivity.kt:11:14",
        "message": "ctx.getSystemService(android.content.Context.CONNECTIVITY_SERVICE) cannot be safely cast to ConnectivityManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AConnectivity.kt:31:14",
        "message": "ctx.applicationContext.getSystemService(android.content.Context.WIFI_SERVICE) cannot be safely cast to WifiManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AConnectivity.kt:44:14",
        "message": "ctx.applicationContext.getSystemService(android.content.Context.WIFI_SERVICE) cannot be safely cast to WifiManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AConnectivity.kt:48:29",
        "message": "m.invoke(wm) cannot be safely cast to Boolean?."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AConnectivity.kt:56:14",
        "message": "ctx.applicationContext.getSystemService(android.content.Context.WIFI_SERVICE) cannot be safely cast to WifiManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AConnectivity.kt:60:27",
        "message": "m.invoke(wm) cannot be safely cast to Int."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AConnectivity.kt:81:14",
        "message": "ctx.getSystemService(android.content.Context.CONNECTIVITY_SERVICE) cannot be safely cast to ConnectivityManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AConnectivity.kt:102:25",
        "message": "method.invoke(null, name) cannot be safely cast to String?."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/main/AAppUtils.kt:24:43",
        "message": "ctx.getSystemService(Context.ALARM_SERVICE) cannot be safely cast to AlarmManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:47:27",
        "message": "findViewById(R.id.topbar_action1) cannot be safely cast to IconDashView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:48:27",
        "message": "findViewById(R.id.topbar_action2) cannot be safely cast to IconDashView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:49:27",
        "message": "findViewById(R.id.topbar_action3) cannot be safely cast to IconDashView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:50:27",
        "message": "findViewById(R.id.topbar_action4) cannot be safely cast to IconDashView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:53:24",
        "message": "findViewById(R.id.topbar_logo) cannot be safely cast to android.widget.ImageView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:54:32",
        "message": "findViewById(R.id.topbar_back) cannot be safely cast to View."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:56:34",
        "message": "findViewById(R.id.topbar_header) cannot be safely cast to View."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:190:26",
        "message": "background cannot be safely cast to android.graphics.drawable.ColorDrawable."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/WebViewActor.kt:79:19",
        "message": "view.findViewById(R.id.web_view) cannot be safely cast to WebView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/WebViewActor.kt:150:10",
        "message": "view.parent cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/Dash.kt:50:17",
        "message": "view cannot be safely cast to SwitchDashView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/Dash.kt:60:17",
        "message": "view cannot be safely cast to SwitchDashView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/Dash.kt:94:38",
        "message": "findViewById(R.id.dash_switch) cannot be safely cast to SwitchCompat."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/Dash.kt:95:36",
        "message": "findViewById(R.id.dash_text) cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/Dash.kt:136:9",
        "message": "view cannot be safely cast to IconDashView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/Dash.kt:143:17",
        "message": "view cannot be safely cast to IconDashView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/Dash.kt:181:36",
        "message": "findViewById(R.id.dash_icon) cannot be safely cast to ImageView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/Dash.kt:182:36",
        "message": "findViewById(R.id.dash_text) cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/update/AUpdateDashes.kt:30:33",
        "message": "parent cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/update/AUpdateDashes.kt:71:33",
        "message": "parent cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/update/AUpdateDashes.kt:80:16",
        "message": "LayoutInflater.from(ctx).inflate(R.layout.view_update, parent, false) cannot be safely cast to AUpdateView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/update/AUpdateView.kt:55:39",
        "message": "findViewById(R.id.update_current) cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/update/AUpdateView.kt:56:39",
        "message": "findViewById(R.id.update_credits) cannot be safely cast to View."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/update/AUpdateView.kt:57:36",
        "message": "findViewById(R.id.update_download) cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/update/AUpdateView.kt:58:38",
        "message": "findViewById(R.id.update_header) cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/update/AUpdateView.kt:59:36",
        "message": "findViewById(R.id.update_icon) cannot be safely cast to ImageView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/update/AUpdateView.kt:60:41",
        "message": "findViewById(R.id.update_changelog) cannot be safely cast to View."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/update/AUpdateView.kt:61:37",
        "message": "findViewById(R.id.update_maker) cannot be safely cast to View."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/update/AUpdateView.kt:62:35",
        "message": "findViewById(R.id.update_appinfo) cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/notification/ANotificationUtils.kt:57:17",
        "message": "ctx.getSystemService(Context.NOTIFICATION_SERVICE) cannot be safely cast to NotificationManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/notification/ANotificationUtils.kt:62:17",
        "message": "ctx.getSystemService(Context.NOTIFICATION_SERVICE) cannot be safely cast to NotificationManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/notification/ANotificationUtils.kt:105:32",
        "message": "ctx.getSystemService(Context.NOTIFICATION_SERVICE) cannot be safely cast to NotificationManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/notification/ANotificationUtils.kt:112:17",
        "message": "ctx.getSystemService(Context.NOTIFICATION_SERVICE) cannot be safely cast to NotificationManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/notification/ANotificationUtils.kt:134:17",
        "message": "ctx.getSystemService(Context.NOTIFICATION_SERVICE) cannot be safely cast to NotificationManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterAddDialog.kt:36:24",
        "message": "LayoutInflater.from(themedContext)\n            .inflate(R.layout.view_filtersadd, null, false) cannot be safely cast to AFiltersAddView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterAddDialog.kt:144:38",
        "message": "sourceProvider.from(\"file\") cannot be safely cast to FilterSourceUri."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterDashes.kt:40:79",
        "message": "parent cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterDashes.kt:76:79",
        "message": "parent cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterListView.kt:118:21",
        "message": "LayoutInflater.from(themedContext).inflate(R.layout.view_filter, parent, false) cannot be safely cast to AFilterView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterListView.kt:128:18",
        "message": "v.tag cannot be safely cast to AFilterActor."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterListView.kt:129:18",
        "message": "v.tag cannot be safely cast to AFilterActor."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/FiltersExportView.kt:49:38",
        "message": "findViewById(R.id.button1) cannot be safely cast to Button."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/FiltersExportView.kt:50:39",
        "message": "findViewById(R.id.button2) cannot be safely cast to Button."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/FiltersExportView.kt:51:37",
        "message": "findViewById(R.id.filter_error) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/FiltersExportView.kt:52:34",
        "message": "findViewById(R.id.filter_import_checkbox) cannot be safely cast to Button."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/FiltersExportView.kt:53:39",
        "message": "findViewById(R.id.filter_comment_group) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterView.kt:160:36",
        "message": "findViewById(R.id.filter_icon) cannot be safely cast to ImageView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterView.kt:161:36",
        "message": "findViewById(R.id.filter_name) cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterView.kt:162:36",
        "message": "findViewById(R.id.filter_host) cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterView.kt:163:36",
        "message": "findViewById(R.id.filter_desc) cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterView.kt:164:39",
        "message": "findViewById(R.id.filter_counter) cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterView.kt:165:39",
        "message": "findViewById(R.id.filter_counter_icon) cannot be safely cast to View."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterView.kt:166:38",
        "message": "findViewById(R.id.filter_source) cannot be safely cast to View."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterView.kt:167:38",
        "message": "findViewById(R.id.filter_delete) cannot be safely cast to View."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterView.kt:168:43",
        "message": "findViewById(R.id.filter_delete_small) cannot be safely cast to View."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterView.kt:169:40",
        "message": "findViewById(R.id.filter_active) cannot be safely cast to SwitchCompat."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterGenerateDialog.kt:31:9",
        "message": "view cannot be safely cast to FiltersExportView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterGenerateDialog.kt:35:10",
        "message": "view.parent cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddAppView.kt:69:36",
        "message": "findViewById(R.id.filter_edit) cannot be safely cast to AutoCompleteTextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddAppView.kt:70:37",
        "message": "findViewById(R.id.filter_error) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddAppView.kt:71:39",
        "message": "findViewById(R.id.filter_comment) cannot be safely cast to EditText."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddAppView.kt:72:43",
        "message": "findViewById(R.id.filter_comment_read) cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddAppView.kt:73:44",
        "message": "findViewById(R.id.filter_comment_group) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddFileView.kt:83:38",
        "message": "findViewById(R.id.filter_file_button) cannot be safely cast to Button."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddFileView.kt:84:37",
        "message": "findViewById(R.id.filter_error) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddFileView.kt:85:39",
        "message": "findViewById(R.id.filter_comment) cannot be safely cast to EditText."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddFileView.kt:86:43",
        "message": "findViewById(R.id.filter_comment_read) cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddFileView.kt:87:40",
        "message": "findViewById(R.id.filter_link_loaded_group) cannot be safely cast to View."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddFileView.kt:88:39",
        "message": "findViewById(R.id.filter_link_loaded) cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddFileView.kt:89:44",
        "message": "findViewById(R.id.filter_link_loaded_count) cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddSingleView.kt:69:36",
        "message": "findViewById(R.id.filter_edit) cannot be safely cast to AutoCompleteTextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddSingleView.kt:70:37",
        "message": "findViewById(R.id.filter_error) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddSingleView.kt:71:39",
        "message": "findViewById(R.id.filter_comment) cannot be safely cast to EditText."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddSingleView.kt:72:43",
        "message": "findViewById(R.id.filter_comment_read) cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddSingleView.kt:73:44",
        "message": "findViewById(R.id.filter_comment_group) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddLinkView.kt:82:36",
        "message": "findViewById(R.id.filter_edit) cannot be safely cast to AutoCompleteTextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddLinkView.kt:83:37",
        "message": "findViewById(R.id.filter_error) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddLinkView.kt:84:39",
        "message": "findViewById(R.id.filter_comment) cannot be safely cast to EditText."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddLinkView.kt:85:43",
        "message": "findViewById(R.id.filter_comment_read) cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddLinkView.kt:86:40",
        "message": "findViewById(R.id.filter_link_loaded_group) cannot be safely cast to View."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddLinkView.kt:87:39",
        "message": "findViewById(R.id.filter_link_loaded) cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddLinkView.kt:88:44",
        "message": "findViewById(R.id.filter_link_loaded_count) cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddView.kt:30:9",
        "message": "android.view.LayoutInflater.from(context).inflate(R.layout.view_filtersadd_app, pager, false) cannot be safely cast to AFiltersAddAppView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddView.kt:35:9",
        "message": "android.view.LayoutInflater.from(context).inflate(R.layout.view_filtersadd_add, pager, false) cannot be safely cast to AFiltersAddSingleView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddView.kt:39:9",
        "message": "android.view.LayoutInflater.from(context).inflate(R.layout.view_filtersadd_file, pager, false) cannot be safely cast to AFiltersAddFileView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddView.kt:44:9",
        "message": "android.view.LayoutInflater.from(context).inflate(R.layout.view_filtersadd_link, pager, false) cannot be safely cast to AFiltersAddLinkView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddView.kt:59:33",
        "message": "findViewById(R.id.filters_pager) cannot be safely cast to android.support.v4.view.ViewPager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddView.kt:75:38",
        "message": "obj cannot be safely cast to android.view.View."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Service.kt:34:21",
        "message": "binder cannot be safely cast to ServiceBinder."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Tunnel.kt:126:21",
        "message": "arrayOfNulls<StructPollfd>(2 + forwarder.size()) cannot be safely cast to Array<StructPollfd>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Tunnel.kt:197:30",
        "message": "field.get(l) cannot be safely cast to PropertiesLoader."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Proxy.kt:26:13",
        "message": "IpSelector.newPacket(packetBytes, 0, packetBytes.size) cannot be safely cast to IpPacket."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Proxy.kt:36:19",
        "message": "originEnvelope.payload cannot be safely cast to UdpPacket."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Proxy.kt:70:9",
        "message": "originEnvelope cannot be safely cast to IpPacket."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Proxy.kt:71:19",
        "message": "originEnvelope.payload cannot be safely cast to UdpPacket."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Proxy.kt:84:30",
        "message": "originEnvelope.header.dstAddr cannot be safely cast to Inet4Address."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Proxy.kt:85:30",
        "message": "originEnvelope.header.srcAddr cannot be safely cast to Inet4Address."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Proxy.kt:91:43",
        "message": "originEnvelope cannot be safely cast to IpV6Packet."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Proxy.kt:92:30",
        "message": "originEnvelope.header.dstAddr cannot be safely cast to Inet6Address."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Proxy.kt:93:30",
        "message": "originEnvelope.header.srcAddr cannot be safely cast to Inet6Address."
      }]
    }, {
      "name": "UnsafeCallOnNullableType",
      "description": "It will throw a NullPointerException at runtime if your nullable value is null.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Emit.kt:46:60",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Emit.kt:62:66",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Log.kt:70:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/Official.kt:126:48",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:168:33",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:170:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:337:59",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:338:54",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:339:57",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:340:59",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:341:66",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:342:59",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:343:54",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:344:54",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:345:55",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:743:30",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:744:33",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:757:71",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:834:32",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:856:34",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:881:42",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:882:45",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:886:42",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:927:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:1015:61",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:1026:37",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:1071:51",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:31:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:36:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:41:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:75:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:98:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:98:34",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:141:16",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:424:16",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:844:26",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:883:30",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:1032:50",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMenuDashes.kt:28:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMenuDashes.kt:37:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMenuDashes.kt:39:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMainDashes.kt:272:16",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:95:26",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:105:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:107:32",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:108:28",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:134:46",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Floater.kt:87:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AInfoView.kt:64:40",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/DashOld.kt:228:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:140:14",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AGridView.kt:69:42",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AGridView.kt:69:48",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Tunnel.kt:206:67",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Tunnel.kt:225:67",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ContentActor.kt:79:28",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarActor.kt:51:32",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Property.kt:333:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Property.kt:373:31",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Device.kt:193:47",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Device.kt:199:47",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/main/AUpdateDownloader.kt:28:37",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/WebViewActor.kt:43:16",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/SimpleDialog.kt:39:26",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/SimpleDialog.kt:94:39",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/DashGridView.kt:69:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/Dash.kt:102:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/DashCoordinator.kt:68:28",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/update/AUpdateDownloader.kt:37:37",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:41:30",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:43:30",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:62:38",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:91:62",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:92:75",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:108:66",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:109:31",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterView.kt:210:23",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterView.kt:211:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddView.kt:69:28",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddView.kt:79:42",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddView.kt:91:30",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddView.kt:109:26",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Main.kt:221:18",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Main.kt:236:44",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Main.kt:241:41",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Service.kt:116:16",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }]
    }, {
      "name": "UnconditionalJumpStatementInLoop",
      "description": "An unconditional jump statement in a loop is useless. The loop itself is only executed once.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/VpnConfigurator.kt:22:9",
        "message": "This loop contains an unconditional jump expression which essentially renders it useless as it will exit the loop during the first iteration."
      }]
    }]
  }, {
    "group": "style",
    "smells": [{
      "name": "UnusedPrivateMember",
      "description": "Private member is unused.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-unofficial/kotlin/buildtype/Module.kt:6:24",
        "message": "Function parameter ctx is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:586:18",
        "message": "Function parameter object is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:50:5",
        "message": "Private property s is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:62:5",
        "message": "Private property listener12 is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:63:5",
        "message": "Private property listener13 is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:153:9",
        "message": "Private property welcome is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:154:9",
        "message": "Private property version is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Pages.kt:97:20",
        "message": "Function parameter ctx is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Filters.kt:77:13",
        "message": "Private property t is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Filters.kt:78:13",
        "message": "Private property j is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Update.kt:41:13",
        "message": "Private property s is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Update.kt:67:17",
        "message": "Private property j is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarActor.kt:11:9",
        "message": "Private property xx is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Update.kt:15:9",
        "message": "Private property xx is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/User.kt:22:19",
        "message": "Function parameter ctx is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/main/AUpdateDownloader.kt:14:5",
        "message": "Private property j is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/main/AUpdateDownloader.kt:26:17",
        "message": "Private property downloadId is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/main/AAppUtils.kt:15:5",
        "message": "Private property defaultHandler is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBar.kt:27:5",
        "message": "Private property initialInfoViewHeight is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/update/AUpdateDownloader.kt:35:17",
        "message": "Private property downloadId is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/update/AUpdateDashes.kt:122:14",
        "message": "Function parameter ctx is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterGenerateDialog.kt:58:9",
        "message": "Private property sourceProvider is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-tunnel/kotlin/tunnel/FilterManagerTest.kt:12:52",
        "message": "Private property i is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Blockade.kt:10:9",
        "message": "Private property doGetRulesetSize is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Proxy.kt:115:26",
        "message": "Function parameter ktx is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-legacy/java/gs/TestUtil.kt:6:10",
        "message": "Private property i is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-core/kotlin/core/KontextTest.kt:7:9",
        "message": "Private property ktx is unused."
      }]
    }, {
      "name": "MaxLineLength",
      "description": "Line detected that is longer than the defined maximum line length in the code style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/InputOutput.kt:65:165",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:254:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:309:28",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:318:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:566:132",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:757:134",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:776:43",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:787:142",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:802:139",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:818:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:993:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:1106:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:1116:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:1128:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:485:127",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:564:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:1027:166",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Repo.kt:45:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/main/AUpdateDownloader.kt:65:122",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/main/AUpdateDownloader.kt:79:123",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/UiUtils.kt:17:134",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/UiUtils.kt:56:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/DashGridView.kt:33:13",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/update/AUpdateView.kt:45:139",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/notification/ANotificationUtils.kt:103:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterActor.kt:56:130",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }]
    }, {
      "name": "ExpressionBodySyntax",
      "description": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/InputOutput.kt:73:48",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/BatchingSequence.kt:3:54",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:98:93",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:439:30",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:488:38",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:644:30",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:918:32",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:943:55",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:132:44",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:165:42",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:169:57",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:173:42",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:177:57",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:181:52",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:185:42",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:189:57",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:193:54",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:197:63",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:201:42",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:205:57",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:209:42",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:213:44",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:217:57",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:221:44",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:225:46",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:229:59",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:236:37",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:375:49",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:379:52",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:383:48",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:387:55",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:391:48",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:414:51",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:433:36",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:702:39",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:707:50",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:737:40",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:742:42",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:781:65",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:788:65",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:863:38",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:868:41",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:971:33",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:979:15",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:1026:63",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/flavor-adblocker/kotlin/adblocker/TunnelDashes.kt:29:56",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMainDashes.kt:255:48",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:304:51",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:342:50",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Main.kt:193:61",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/DashOld.kt:67:44",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:166:34",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:439:42",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:445:48",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Update.kt:80:88",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AGridView.kt:75:42",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Products.kt:35:33",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/obsolete/Sync.kt:6:32",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/obsolete/Sync.kt:15:74",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/I18n.kt:38:39",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/I18n.kt:42:47",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/I18n.kt:109:48",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/I18n.kt:113:94",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Persistence.kt:38:67",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Persistence.kt:83:67",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Persistence.kt:87:81",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Persistence.kt:91:58",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Persistence.kt:95:61",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Persistence.kt:99:64",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Persistence.kt:103:70",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Persistence.kt:107:49",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Persistence.kt:111:44",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Property.kt:120:17",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Property.kt:134:19",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Property.kt:159:45",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Property.kt:202:28",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Property.kt:245:37",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Property.kt:321:39",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Property.kt:348:61",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Property.kt:352:37",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Device.kt:27:30",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/Environment.kt:13:30",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/Identity.kt:63:52",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/Journal.kt:12:41",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/Journal.kt:18:41",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AContext.kt:40:79",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AContext.kt:53:33",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AConnectivity.kt:39:75",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/main/AAppUtils.kt:43:52",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/String.kt:3:35",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/ResizeAnimation.kt:17:46",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/DashGridView.kt:80:38",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/Dash.kt:37:68",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/update/AUpdateDashes.kt:29:48",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/update/AUpdateDashes.kt:70:48",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/update/AUpdateDashes.kt:122:48",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/FilterSourceSingle.kt:12:30",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/FilterSourceSingle.kt:16:31",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/FilterSourceSingle.kt:32:40",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/FilterSourceSingle.kt:36:38",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/FilterSourceSingle.kt:50:34",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:31:30",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:35:31",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:57:40",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:61:38",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:76:34",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:101:31",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:125:40",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:129:38",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:150:34",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:161:30",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:175:31",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:179:49",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:195:40",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:199:38",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:213:34",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:218:67",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:259:47",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterAddDialog.kt:197:59",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterListView.kt:133:42",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddAppView.kt:137:57",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddSingleView.kt:122:57",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Model.kt:22:34",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Model.kt:31:37",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Model.kt:42:44",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Model.kt:46:46",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Model.kt:75:37",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Forwarder.kt:39:26",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Blockade.kt:57:39",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Blockade.kt:61:40",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Tunnel.kt:210:55",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Proxy.kt:133:52",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-legacy/java/core/BlokadaTest.kt:137:44",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-legacy/java/core/BlokadaTest.kt:157:35",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-legacy/java/core/BlokadaTest.kt:315:35",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }]
    }, {
      "name": "NewLineAtEndOfFile",
      "description": "Checks whether files end with a line separator.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/BatchingSequence.kt:15:1",
        "message": "The file BatchingSequence.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/String.kt:5:1",
        "message": "The file String.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/ResizeAnimation.kt:20:1",
        "message": "The file ResizeAnimation.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/DashListView.kt:34:1",
        "message": "The file DashListView.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/DashCoordinator.kt:103:1",
        "message": "The file DashCoordinator.kt is not ending with a new line."
      }]
    }, {
      "name": "MandatoryBracesIfStatements",
      "description": "Multi-line if statement was found that does not have braces. These should be added to improve readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/BatchingSequence.kt:11:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Persistence.kt:15:17",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Permission.kt:38:5",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Log.kt:42:5",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Format.kt:24:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:359:43",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:359:43",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:363:42",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:363:42",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:493:28",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:493:28",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:562:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:638:16",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:638:16",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:633:16",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:633:16",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:641:16",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:641:16",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/flavor-adblocker/kotlin/flavor/Module.kt:56:17",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/App.kt:110:29",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:87:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AInfoView.kt:64:16",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/DashOld.kt:207:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/DashOld.kt:232:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:139:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:306:17",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:468:17",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:472:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:562:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ContentActor.kt:99:16",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AConnectivity.kt:88:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/WebViewActor.kt:68:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/Dash.kt:173:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/Dash.kt:192:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/DashCoordinator.kt:88:16",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/DashCoordinator.kt:89:14",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/DashCoordinator.kt:94:16",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/update/AUpdateDashes.kt:85:23",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/update/AUpdateDashes.kt:106:27",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/FilterSourceSingle.kt:21:16",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:246:21",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterAddDialog.kt:100:17",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterAddDialog.kt:114:17",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterAddDialog.kt:118:25",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterAddDialog.kt:141:17",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterAddDialog.kt:168:17",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterAddDialog.kt:172:25",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterDashes.kt:35:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterDashes.kt:71:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/FiltersExportView.kt:25:31",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterView.kt:32:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterView.kt:40:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterView.kt:47:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddAppView.kt:83:17",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddFileView.kt:30:31",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddFileView.kt:97:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddView.kt:102:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/FilterManager.kt:10:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/FilterManager.kt:12:17",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Main.kt:79:36",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Persistence.kt:53:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Persistence.kt:70:21",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Tunnel.kt:90:17",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Proxy.kt:105:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }]
    }, {
      "name": "UseDataClass",
      "description": "Classes that do nothing but hold data should be replaced with a data class.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Emit.kt:11:1",
        "message": "The class EventType defines nofunctionality and only holds data. Consider converting it to a data class."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/Identity.kt:7:1",
        "message": "The class Identity defines nofunctionality and only holds data. Consider converting it to a data class."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/Legacy.kt:3:1",
        "message": "The class FilterSourceDescriptor defines nofunctionality and only holds data. Consider converting it to a data class."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Model.kt:71:1",
        "message": "The class FilterSourceDescriptor defines nofunctionality and only holds data. Consider converting it to a data class."
      }]
    }, {
      "name": "UtilityClassWithPublicConstructor",
      "description": "The class declaration is unnecessary because it only contains utility functions. An object declaration should be used instead.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Persistence.kt:8:1",
        "message": "The class Persistence only contains utility functions. Consider defining it as an object."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/Journal.kt:24:1",
        "message": "The class Properties only contains utility functions. Consider defining it as an object."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Model.kt:50:1",
        "message": "The class Memory only contains utility functions. Consider defining it as an object."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Persistence.kt:10:1",
        "message": "The class Persistence only contains utility functions. Consider defining it as an object."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/g11n/kotlin/g11n/Persistence.kt:5:1",
        "message": "The class Persistence only contains utility functions. Consider defining it as an object."
      }]
    }, {
      "name": "MagicNumber",
      "description": "Report magic numbers. Magic number is a numeric literal that is not defined as a constant and hence it's unclear what the purpose of this number is. It's better to declare such numbers as constants and give them a proper name. By default, -1, 0, 1, and 2 are not considered to be magic numbers.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Permission.kt:16:34",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Permission.kt:38:34",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Log.kt:31:18",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Log.kt:32:44",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Log.kt:33:15",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Log.kt:61:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Log.kt:61:34",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Log.kt:61:41",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Log.kt:83:9",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Log.kt:84:9",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Format.kt:24:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Format.kt:24:73",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Format.kt:25:56",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:397:45",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:878:43",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:968:41",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:968:52",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:449:28",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:452:34",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:453:39",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:454:27",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:455:35",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:456:39",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:456:44",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:457:45",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:457:49",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:457:54",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:458:35",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:458:40",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:458:45",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:459:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:460:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:612:34",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:612:51",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:614:13",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMenuDashes.kt:31:26",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMenuDashes.kt:31:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMenuDashes.kt:32:26",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMenuDashes.kt:32:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMenuDashes.kt:33:26",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMenuDashes.kt:33:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMenuDashes.kt:34:26",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMenuDashes.kt:34:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMenuDashes.kt:35:26",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMenuDashes.kt:35:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMenuDashes.kt:36:26",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMenuDashes.kt:36:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMenuDashes.kt:48:13",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMenuDashes.kt:49:13",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMenuDashes.kt:50:13",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMenuDashes.kt:51:13",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMenuDashes.kt:52:13",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMenuDashes.kt:53:13",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/App.kt:54:82",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/App.kt:110:43",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:246:19",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Floater.kt:43:21",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Floater.kt:44:24",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Floater.kt:45:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Floater.kt:53:48",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Floater.kt:54:49",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Floater.kt:58:54",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Floater.kt:58:87",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Floater.kt:63:55",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Floater.kt:67:71",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Filters.kt:58:85",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Welcome.kt:35:95",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Welcome.kt:99:36",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Welcome.kt:103:36",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Welcome.kt:124:28",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Welcome.kt:129:47",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Welcome.kt:130:32",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Welcome.kt:142:32",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Welcome.kt:154:32",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Main.kt:47:33",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Main.kt:47:37",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Main.kt:72:16",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Main.kt:112:37",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Main.kt:114:44",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/QuickSettingsService.kt:14:12",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AInfoView.kt:65:14",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AInfoView.kt:65:36",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/DashOld.kt:221:23",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/DashOld.kt:235:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/DashOld.kt:236:28",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/DashOld.kt:237:33",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/DashOld.kt:290:26",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/DashOld.kt:291:28",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/DashOld.kt:292:26",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:94:66",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:98:30",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:99:70",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:211:45",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:215:34",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:216:37",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:217:40",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:217:63",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:218:41",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:218:64",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:243:69",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:744:36",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Update.kt:65:32",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Update.kt:65:40",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AGridView.kt:33:32",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AGridView.kt:41:50",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Tunnel.kt:54:48",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Tunnel.kt:106:73",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Tunnel.kt:211:42",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Tunnel.kt:211:47",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Tunnel.kt:233:42",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Tunnel.kt:233:46",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ContentActor.kt:50:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ContentActor.kt:83:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarActor.kt:67:26",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarActor.kt:68:53",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarActor.kt:73:53",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:70:23",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:76:27",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:77:30",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:78:35",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:86:27",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:87:30",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:88:35",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:100:75",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:115:54",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:116:22",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:117:49",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:119:83",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:119:88",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:121:39",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:125:55",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:128:43",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:137:54",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:138:22",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:146:55",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:157:54",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:158:22",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:161:55",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ATopBarView.kt:206:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/KeepAlive.kt:66:27",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/KeepAlive.kt:111:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/KeepAlive.kt:111:34",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/KeepAlive.kt:145:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Repo.kt:51:28",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Repo.kt:51:33",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Repo.kt:59:21",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Repo.kt:71:46",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Repo.kt:72:50",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Repo.kt:89:27",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Repo.kt:89:35",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Device.kt:169:28",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Device.kt:171:64",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Device.kt:171:69",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Device.kt:183:23",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Device.kt:207:45",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Device.kt:217:56",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/Identity.kt:43:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/Identity.kt:45:37",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/Module.kt:25:22",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/Module.kt:28:22",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AConnectivity.kt:25:59",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AConnectivity.kt:68:24",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AConnectivity.kt:79:31",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/main/AAppUtils.kt:17:55",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/main/AAppUtils.kt:31:12",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:58:23",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:64:27",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:65:30",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:66:35",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:74:27",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:75:30",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:76:35",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:84:30",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:89:75",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:104:54",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:105:22",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:106:72",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:108:83",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:108:88",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:110:39",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:114:55",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:117:43",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:126:54",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:127:22",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:135:55",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:146:54",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:147:22",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:150:55",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBarView.kt:195:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/WebViewActor.kt:57:39",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/WebViewActor.kt:57:43",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/WebViewActor.kt:84:57",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/WebViewActor.kt:88:38",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/WebViewActor.kt:110:56",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/WebViewActor.kt:145:36",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/DashBarView.kt:24:50",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/DashBarView.kt:24:83",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBar.kt:53:53",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/DashGridView.kt:21:32",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/DashGridView.kt:29:50",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/Dash.kt:184:23",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/Dash.kt:195:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/Dash.kt:196:28",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/Dash.kt:197:33",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/DashCoordinator.kt:38:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/DashCoordinator.kt:72:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/notification/ANotificationUtils.kt:52:34",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/notification/ANotificationUtils.kt:94:34",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/notification/ANotificationUtils.kt:103:12",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/notification/ANotificationUtils.kt:113:18",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/notification/ANotificationUtils.kt:129:34",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:66:58",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:134:24",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:244:42",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterListView.kt:63:54",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/FiltersExportView.kt:76:32",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/FiltersExportView.kt:86:33",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/FiltersExportView.kt:100:32",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/FiltersExportView.kt:106:33",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/FiltersExportView.kt:150:28",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterView.kt:172:23",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterView.kt:183:33",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterView.kt:184:36",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterView.kt:185:41",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterView.kt:192:38",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterView.kt:193:41",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterView.kt:194:46",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterView.kt:201:33",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterView.kt:202:36",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterView.kt:203:41",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterGenerateDialog.kt:141:13",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterGenerateDialog.kt:141:16",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterGenerateDialog.kt:141:19",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterGenerateDialog.kt:141:22",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterGenerateDialog.kt:144:61",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterGenerateDialog.kt:144:64",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterGenerateDialog.kt:149:62",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterGenerateDialog.kt:149:65",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddAppView.kt:83:82",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddFileView.kt:57:81",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddLinkView.kt:56:81",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddView.kt:65:36",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/FilterSerializer.kt:9:47",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/FilterSerializer.kt:13:36",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/FilterSerializer.kt:14:36",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/FilterSerializer.kt:15:38",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/FilterSerializer.kt:16:33",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/FilterSerializer.kt:17:38",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/FilterSerializer.kt:17:61",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/FilterSerializer.kt:18:41",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/FilterSerializer.kt:18:64",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/FilterManager.kt:20:28",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/FilterManager.kt:20:36",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/FilterManager.kt:24:74",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/FilterManager.kt:24:79",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/FilterManager.kt:28:53",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/FilterManager.kt:28:61",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Main.kt:204:65",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Main.kt:209:66",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Main.kt:246:40",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Forwarder.kt:10:42",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Forwarder.kt:10:47",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Forwarder.kt:15:27",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/TunnelConfigView.kt:116:9",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/TunnelConfigView.kt:117:9",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/TunnelConfigView.kt:118:9",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/TunnelConfigView.kt:123:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/TunnelConfigView.kt:124:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/TunnelConfigView.kt:125:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/TunnelConfigView.kt:126:17",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Service.kt:53:19",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Tunnel.kt:30:31",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Tunnel.kt:31:31",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Tunnel.kt:35:42",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Tunnel.kt:36:44",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Tunnel.kt:69:39",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Tunnel.kt:192:23",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Proxy.kt:20:17",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Proxy.kt:20:93",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/VpnConfigurator.kt:24:49",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/VpnConfigurator.kt:35:48",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/VpnConfigurator.kt:39:52",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/VpnConfigurator.kt:39:59",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/VpnConfigurator.kt:39:64",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/VpnConfigurator.kt:39:72",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/VpnConfigurator.kt:45:45",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/VpnConfigurator.kt:83:34",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/VpnConfigurator.kt:110:43",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-legacy/java/gs/TestUtil.kt:6:18",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-legacy/java/gs/TestUtil.kt:8:22",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/g11n/kotlin/g11n/TranslationsFetcher.kt:15:30",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/g11n/kotlin/g11n/TranslationsFetcher.kt:15:38",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/g11n/kotlin/g11n/TranslationsFetcher.kt:20:58",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/g11n/kotlin/g11n/TranslationsFetcher.kt:20:63",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/flavor-dns/kotlin/flavor/Module.kt:43:27",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }]
    }, {
      "name": "OptionalWhenBraces",
      "description": "Optional braces in when expression",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/core/kotlin/core/Format.kt:23:9",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMenuDashes.kt:59:13",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Floater.kt:25:17",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:371:13",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:717:13",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Tunnel.kt:116:29",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterAddDialog.kt:99:13",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterAddDialog.kt:113:13",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterAddDialog.kt:140:13",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterAddDialog.kt:167:13",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterAddDialog.kt:203:9",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterAddDialog.kt:211:9",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Main.kt:67:13",
        "message": "Optional braces in when expression"
      }]
    }, {
      "name": "WildcardImport",
      "description": "Wildcard imports should be replaced with imports using fully qualified class names. Wildcard imports can lead to naming conflicts. A library update can introduce naming clashes with your classes which results in compilation errors.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/Official.kt:7:1",
        "message": "com.github.salomonbrys.kodein.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:10:1",
        "message": "android.database.sqlite.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/flavor-adblocker/kotlin/adblocker/TunnelDashes.kt:5:1",
        "message": "core.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/flavor-adblocker/kotlin/flavor/Module.kt:6:1",
        "message": "com.github.salomonbrys.kodein.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/flavor-adblocker/kotlin/flavor/Module.kt:7:1",
        "message": "core.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/App.kt:5:1",
        "message": "com.github.salomonbrys.kodein.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/App.kt:11:1",
        "message": "gs.property.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Pages.kt:4:1",
        "message": "com.github.salomonbrys.kodein.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Filters.kt:9:1",
        "message": "com.github.salomonbrys.kodein.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Welcome.kt:7:1",
        "message": "com.github.salomonbrys.kodein.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Welcome.kt:13:1",
        "message": "gs.property.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:14:1",
        "message": "android.view.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:19:1",
        "message": "com.github.salomonbrys.kodein.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:22:1",
        "message": "gs.environment.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:24:1",
        "message": "gs.property.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Update.kt:4:1",
        "message": "com.github.salomonbrys.kodein.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Tunnel.kt:6:1",
        "message": "com.github.salomonbrys.kodein.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Tunnel.kt:12:1",
        "message": "gs.property.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/KeepAlive.kt:13:1",
        "message": "com.github.salomonbrys.kodein.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/User.kt:4:1",
        "message": "com.github.salomonbrys.kodein.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/User.kt:5:1",
        "message": "gs.environment.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Device.kt:10:1",
        "message": "com.github.salomonbrys.kodein.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Device.kt:12:1",
        "message": "gs.environment.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/Module.kt:8:1",
        "message": "com.github.salomonbrys.kodein.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/Module.kt:9:1",
        "message": "gs.property.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/WebViewActor.kt:12:1",
        "message": "android.webkit.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterDashes.kt:8:1",
        "message": "core.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/FiltersExportView.kt:10:1",
        "message": "core.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterGenerateDialog.kt:7:1",
        "message": "android.view.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddAppView.kt:9:1",
        "message": "android.widget.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/FilterManager.kt:5:1",
        "message": "core.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Main.kt:6:1",
        "message": "core.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Persistence.kt:4:1",
        "message": "com.github.michaelbull.result.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Service.kt:13:1",
        "message": "core.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Tunnel.kt:14:1",
        "message": "java.io.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Proxy.kt:8:1",
        "message": "org.pcap4j.packet.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Proxy.kt:9:1",
        "message": "org.xbill.DNS.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Proxy.kt:11:1",
        "message": "java.net.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/g11n/kotlin/g11n/TranslationsFetcher.kt:6:1",
        "message": "core.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/flavor-dns/kotlin/flavor/Module.kt:5:1",
        "message": "com.github.salomonbrys.kodein.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/flavor-dns/kotlin/flavor/Module.kt:6:1",
        "message": "core.* is a wildcard import. Replace it with fully qualified imports."
      }]
    }, {
      "name": "UnnecessaryAbstractClass",
      "description": "An abstract class is unnecessary and can be refactored. An abstract class should have both abstract and concrete properties or functions. An abstract class without a concrete member can be refactored to an interface. An abstract class without an abstract member can be refactored to a concrete class.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/Official.kt:44:1",
        "message": "An abstract class without a concrete member can be refactored to an interface."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/App.kt:16:1",
        "message": "An abstract class without a concrete member can be refactored to an interface."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Pages.kt:13:1",
        "message": "An abstract class without a concrete member can be refactored to an interface."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Filters.kt:22:1",
        "message": "An abstract class without a concrete member can be refactored to an interface."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Welcome.kt:16:1",
        "message": "An abstract class without a concrete member can be refactored to an interface."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:74:1",
        "message": "An abstract class without a concrete member can be refactored to an interface."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Update.kt:18:1",
        "message": "An abstract class without a concrete member can be refactored to an interface."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Tunnel.kt:22:1",
        "message": "An abstract class without a concrete member can be refactored to an interface."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/KeepAlive.kt:24:1",
        "message": "An abstract class without a concrete member can be refactored to an interface."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Repo.kt:22:1",
        "message": "An abstract class without a concrete member can be refactored to an interface."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/I18n.kt:14:1",
        "message": "An abstract class without a concrete member can be refactored to an interface."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Version.kt:7:1",
        "message": "An abstract class without a concrete member can be refactored to an interface."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Update.kt:6:1",
        "message": "An abstract class without a concrete member can be refactored to an interface."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/User.kt:7:1",
        "message": "An abstract class without a concrete member can be refactored to an interface."
      }]
    }, {
      "name": "ReturnCount",
      "description": "Restrict the number of return statements in methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:204:5",
        "message": "Function setOptOut has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:448:5",
        "message": "Function startNewSessionIfNeeded has 5 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:513:5",
        "message": "Function sendSessionEvent has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:586:5",
        "message": "Function truncate has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:648:5",
        "message": "Function setUserId has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:664:5",
        "message": "Function setDeviceId has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:682:5",
        "message": "Function regenerateDeviceId has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:724:5",
        "message": "Function updateServer has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:947:5",
        "message": "Function contextAndApiKeySet has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:993:9",
        "message": "Function upgradePrefs has 4 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:58:5",
        "message": "Function cloneJSONObject has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:87:5",
        "message": "Function compareJSONObjects has 9 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:501:5",
        "message": "Function addToUserProperties has 4 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/ContentActor.kt:26:5",
        "message": "Function reveal has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/HostlineProcessor.kt:8:5",
        "message": "Function process has 5 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Proxy.kt:24:5",
        "message": "Function fromDevice has 5 return statements which exceeds the limit of 2."
      }]
    }, {
      "name": "ProtectedMemberInFinalClass",
      "description": "Member with protected visibility in final class is private. Consider using private or internal as modifier.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:20:5",
        "message": "Member with protected visibility in final class is private. Consider using private or internal as modifier."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:21:5",
        "message": "Member with protected visibility in final class is private. Consider using private or internal as modifier."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:23:5",
        "message": "Member with protected visibility in final class is private. Consider using private or internal as modifier."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:24:5",
        "message": "Member with protected visibility in final class is private. Consider using private or internal as modifier."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:27:5",
        "message": "Member with protected visibility in final class is private. Consider using private or internal as modifier."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:32:5",
        "message": "Member with protected visibility in final class is private. Consider using private or internal as modifier."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:88:5",
        "message": "Member with protected visibility in final class is private. Consider using private or internal as modifier."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:262:5",
        "message": "Member with protected visibility in final class is private. Consider using private or internal as modifier."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:271:5",
        "message": "Member with protected visibility in final class is private. Consider using private or internal as modifier."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:308:5",
        "message": "Member with protected visibility in final class is private. Consider using private or internal as modifier."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:379:5",
        "message": "Member with protected visibility in final class is private. Consider using private or internal as modifier."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:724:5",
        "message": "Member with protected visibility in final class is private. Consider using private or internal as modifier."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:774:5",
        "message": "Member with protected visibility in final class is private. Consider using private or internal as modifier."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:818:5",
        "message": "Member with protected visibility in final class is private. Consider using private or internal as modifier."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:935:5",
        "message": "Member with protected visibility in final class is private. Consider using private or internal as modifier."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:943:5",
        "message": "Member with protected visibility in final class is private. Consider using private or internal as modifier."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:947:5",
        "message": "Member with protected visibility in final class is private. Consider using private or internal as modifier."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:244:5",
        "message": "Member with protected visibility in final class is private. Consider using private or internal as modifier."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:479:5",
        "message": "Member with protected visibility in final class is private. Consider using private or internal as modifier."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:564:31",
        "message": "Member with protected visibility in final class is private. Consider using private or internal as modifier."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:746:5",
        "message": "Member with protected visibility in final class is private. Consider using private or internal as modifier."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:792:5",
        "message": "Member with protected visibility in final class is private. Consider using private or internal as modifier."
      }]
    }, {
      "name": "MayBeConst",
      "description": "Reports vals that can be const val instead.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:979:9",
        "message": "TAG can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:982:9",
        "message": "START_SESSION_EVENT can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:983:9",
        "message": "END_SESSION_EVENT can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:984:9",
        "message": "DEVICE_ID_KEY can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:985:9",
        "message": "USER_ID_KEY can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:986:9",
        "message": "OPT_OUT_KEY can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:987:9",
        "message": "SEQUENCE_NUMBER_KEY can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:988:9",
        "message": "LAST_EVENT_TIME_KEY can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:989:9",
        "message": "LAST_EVENT_ID_KEY can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:990:9",
        "message": "LAST_IDENTIFY_ID_KEY can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:991:9",
        "message": "PREVIOUS_SESSION_ID_KEY can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:54:5",
        "message": "TAG can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:285:9",
        "message": "TAG can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:286:9",
        "message": "NULLMSG can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:442:5",
        "message": "EVENT_LOG_URL can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:443:5",
        "message": "PACKAGE_NAME can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:445:5",
        "message": "VERSION can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:447:5",
        "message": "API_VERSION can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:449:5",
        "message": "DATABASE_VERSION can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:450:5",
        "message": "DEFAULT_INSTANCE can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:452:5",
        "message": "EVENT_UPLOAD_THRESHOLD can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:453:5",
        "message": "EVENT_UPLOAD_MAX_BATCH_SIZE can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:454:5",
        "message": "EVENT_MAX_COUNT can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:455:5",
        "message": "EVENT_REMOVE_BATCH_SIZE can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:459:5",
        "message": "MAX_STRING_LENGTH can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:460:5",
        "message": "MAX_PROPERTY_KEYS can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:470:5",
        "message": "IDENTIFY_EVENT can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:471:5",
        "message": "AMP_OP_CLEAR_ALL can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:472:5",
        "message": "AMP_OP_SET can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:560:9",
        "message": "TAG can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:987:9",
        "message": "TAG can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:989:9",
        "message": "STORE_TABLE_NAME can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:990:9",
        "message": "LONG_STORE_TABLE_NAME can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:991:9",
        "message": "KEY_FIELD can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:992:9",
        "message": "VALUE_FIELD can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:994:9",
        "message": "EVENT_TABLE_NAME can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:995:9",
        "message": "IDENTIFY_TABLE_NAME can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:996:9",
        "message": "ID_FIELD can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:997:9",
        "message": "EVENT_FIELD can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/flavor-adblocker/kotlin/adblocker/TunnelDashes.kt:10:1",
        "message": "DASH_ID_HOSTS_COUNT can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMainDashes.kt:25:1",
        "message": "DASH_ID_DONATE can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMainDashes.kt:26:1",
        "message": "DASH_ID_CONTRIBUTE can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMainDashes.kt:27:1",
        "message": "DASH_ID_BLOG can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMainDashes.kt:28:1",
        "message": "DASH_ID_FAQ can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMainDashes.kt:29:1",
        "message": "DASH_ID_FEEDBACK can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMainDashes.kt:30:1",
        "message": "DASH_ID_PATRON can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMainDashes.kt:31:1",
        "message": "DASH_ID_PATRON_ABOUT can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMainDashes.kt:32:1",
        "message": "DASH_ID_CTA can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMainDashes.kt:33:1",
        "message": "DASH_ID_CHANGELOG can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMainDashes.kt:34:1",
        "message": "DASH_ID_CREDITS can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMainDashes.kt:306:1",
        "message": "DASH_ID_LOG can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Dns.kt:255:1",
        "message": "DASH_ID_DNS can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/KeepAlive.kt:125:9",
        "message": "BINDER_ACTION can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/Identity.kt:55:1",
        "message": "IDENTITY_UUID can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/update/AUpdateDashes.kt:17:1",
        "message": "DASH_ID_ABOUT can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/notification/ANotificationDashes.kt:12:1",
        "message": "DASH_ID_KEEPALIVE can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/notification/ANotificationUtils.kt:102:1",
        "message": "default_id can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterDashes.kt:15:1",
        "message": "DASH_ID_BLACKLIST can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterDashes.kt:16:1",
        "message": "DASH_ID_WHITELIST can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Service.kt:66:9",
        "message": "BINDER_ACTION can be a `const val`."
      }]
    }, {
      "name": "PreferToOverPairSyntax",
      "description": "Pair was created using the Pair constructor, using the to syntax is preferred.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:814:16",
        "message": "Pair is created by using the pair constructor. This can replaced by `Pair(maxEventId, maxIdentifyId) to merged`"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalClient.kt:814:21",
        "message": "Pair is created by using the pair constructor. This can replaced by `maxEventId to maxIdentifyId`"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddView.kt:49:24",
        "message": "Pair is created by using the pair constructor. This can replaced by `R.string.filter_edit_app to appView`"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddView.kt:50:25",
        "message": "Pair is created by using the pair constructor. This can replaced by `R.string.filter_edit_link to linkView`"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddView.kt:51:27",
        "message": "Pair is created by using the pair constructor. This can replaced by `R.string.filter_edit_name to singleView`"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFiltersAddView.kt:52:25",
        "message": "Pair is created by using the pair constructor. This can replaced by `R.string.filter_edit_file to fileView`"
      }]
    }, {
      "name": "FunctionOnlyReturningConstant",
      "description": "A function that only returns a constant is misleading. Consider declaring a constant instead",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/build-official/kotlin/buildtype/JournalUtils.kt:375:9",
        "message": "getOsNameInternal is returning a constant. Prefer declaring a constant instead."
      }]
    }, {
      "name": "ForbiddenComment",
      "description": "Flags a forbidden comment. Defaults values are TODO:, FIXME: or STOPSHIP:",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/flavor-adblocker/kotlin/adblocker/TunnelDashes.kt:26:11",
        "message": "This comment contains text that has been defined as forbidden in detekt."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:59:5",
        "message": "This comment contains text that has been defined as forbidden in detekt."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/WebViewActor.kt:37:13",
        "message": "This comment contains text that has been defined as forbidden in detekt."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/WebViewActor.kt:39:13",
        "message": "This comment contains text that has been defined as forbidden in detekt."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:204:25",
        "message": "This comment contains text that has been defined as forbidden in detekt."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Model.kt:60:1",
        "message": "This comment contains text that has been defined as forbidden in detekt."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/FilterManager.kt:142:41",
        "message": "This comment contains text that has been defined as forbidden in detekt."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Tunnel.kt:181:17",
        "message": "This comment contains text that has been defined as forbidden in detekt."
      }]
    }, {
      "name": "SpacingBetweenPackageAndImports",
      "description": "Violation of the package declaration style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AMenuDashes.kt:8:28",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of DashNoop."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Main.kt:34:21",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of the class or object."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AInfoView.kt:9:31",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of AInfoView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/main/AAppUtils.kt:11:29",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of the class or object."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/BasicDashes.kt:6:21",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of MenuDash."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/TopBar.kt:3:21",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of TopBar."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/update/AUpdateView.kt:20:21",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of AUpdateView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/notification/ANotificationsOffService.kt:7:20",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of ANotificationsOffService."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/FilterSourceSingle.kt:3:28",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of the class or object."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterSources.kt:18:20",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of FilterSourceLink."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterView.kt:16:21",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of AFilterView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterActor.kt:11:21",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of AFilterActor."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-tunnel/kotlin/tunnel/ForwarderTest.kt:10:28",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of ForwarderTest."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/TunnelConfigView.kt:16:23",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of TunnelConfigView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Tunnel.kt:17:23",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of Tunnel."
      }]
    }, {
      "name": "UnnecessaryParentheses",
      "description": "Unnecessary parentheses don't add any value to the code and should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/MainActivity.kt:159:48",
        "message": "Parentheses around the lambda ({result: Int, data: Intent? -> }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/Filters.kt:44:30",
        "message": "Parentheses in (it.flags and ApplicationInfo.FLAG_SYSTEM) are unnecessary and can be replaced with: it.flags and ApplicationInfo.FLAG_SYSTEM"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/property/Property.kt:349:35",
        "message": "Parentheses in (value ?: zeroValue) are unnecessary and can be replaced with: value ?: zeroValue"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Forwarder.kt:40:16",
        "message": "Parentheses in (System.currentTimeMillis() - added) are unnecessary and can be replaced with: System.currentTimeMillis() - added"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Tunnel.kt:188:39",
        "message": "Parentheses in (Thread.interrupted() || this.error == null) are unnecessary and can be replaced with: Thread.interrupted() || this.error == null"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-core/kotlin/core/EmitTest.kt:15:30",
        "message": "Parentheses around the lambda ({ Kontext.forTest() }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-core/kotlin/core/EmitTest.kt:37:30",
        "message": "Parentheses around the lambda ({ Kontext.forTest() }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-core/kotlin/core/EmitTest.kt:52:30",
        "message": "Parentheses around the lambda ({ Kontext.forTest() }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/test-core/kotlin/core/EmitTest.kt:67:30",
        "message": "Parentheses around the lambda ({ Kontext.forTest(coroutineContext = Unconfined + newEmitExceptionLogger(\n                Kontext.forTest(\"emit:exception\",\n                        log = object : Log {\n                            override fun e(vararg msgs: Any) { logged++ }\n                            override fun w(vararg msgs: Any) {}\n                            override fun v(vararg msgs: Any) {}\n                        })\n        )) }) are unnecessary and can be removed."
      }]
    }, {
      "name": "UnusedImports",
      "description": "Unused Imports are dead code and should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/core/AInfoView.kt:7:1",
        "message": "The import 'android.widget.TextView' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/main/AAppReceivers.kt:3:1",
        "message": "The import 'android.content.BroadcastReceiver' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/main/AAppReceivers.kt:4:1",
        "message": "The import 'android.content.Context' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/main/AAppReceivers.kt:5:1",
        "message": "The import 'android.content.Intent' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/main/AAppReceivers.kt:6:1",
        "message": "The import 'android.content.IntentFilter' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/main/AAppReceivers.kt:7:1",
        "message": "The import 'android.net.ConnectivityManager' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/main/AAppReceivers.kt:8:1",
        "message": "The import 'com.github.salomonbrys.kodein.instance' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/main/AAppReceivers.kt:9:1",
        "message": "The import 'com.github.salomonbrys.kodein.with' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/main/AAppReceivers.kt:10:1",
        "message": "The import 'nl.komponents.kovenant.task' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/DashListView.kt:7:1",
        "message": "The import 'gs.presentation.DashAdapter' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/presentation/DashListView.kt:8:1",
        "message": "The import 'gs.presentation.Spacing' is unused."
      }]
    }, {
      "name": "LoopWithTooManyJumpStatements",
      "description": "The loop contains more than one break or continue statement. The code should be refactored to increase readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/environment/AConnectivity.kt:86:5",
        "message": "The loop contains more than one break or continue statement. The code should be refactored to increase readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Tunnel.kt:140:9",
        "message": "The loop contains more than one break or continue statement. The code should be refactored to increase readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/VpnConfigurator.kt:22:9",
        "message": "The loop contains more than one break or continue statement. The code should be refactored to increase readability."
      }]
    }, {
      "name": "UntilInsteadOfRangeTo",
      "description": "'..' call can be replaced with 'until'",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/gs/main/AAppUtils.kt:37:10",
        "message": "'..' call can be replaced with 'until'"
      }]
    }, {
      "name": "CollapsibleIfStatements",
      "description": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/update/UpdateCoordinator.kt:33:17",
        "message": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability."
      }]
    }, {
      "name": "ThrowsCount",
      "description": "Restrict the number of throw statements in methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/legacy/kotlin/filter/AFilterAddDialog.kt:97:5",
        "message": "Too many throw statements in the function handleSave. The maximum number of allowed throw statements is 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Tunnel.kt:38:5",
        "message": "Too many throw statements in the function run. The maximum number of allowed throw statements is 2."
      }]
    }, {
      "name": "DataClassContainsFunctions",
      "description": "Data classes should mainly be used to store data and should not have any extra functions. (Compiler will automatically generate equals, toString and hashCode functions)",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/tunnel/kotlin/tunnel/Forwarder.kt:39:5",
        "message": "The data class ForwardRule contains functions which are not registered conversion functions. The offending method is called isOld"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/g11n/kotlin/g11n/Model.kt:16:5",
        "message": "The data class TranslationStore contains functions which are not registered conversion functions. The offending method is called get"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/blokadaorg-blokada/app/src/g11n/kotlin/g11n/Model.kt:17:5",
        "message": "The data class TranslationStore contains functions which are not registered conversion functions. The offending method is called put"
      }]
    }]
  }]
}