{
  "complexity_metrics": {
    "loc": 3051,
    "sloc": 2576,
    "lloc": 1668,
    "cloc": 8,
    "mcc": 538,
    "n_smell": 178,
    "comment_ratio": 0,
    "mcc_per_thlines": 322
  },
  "metrics": {
    "number_of_string": 77,
    "number_of_string_template": 4,
    "number_of_inline_func": 0,
    "number_of_inferred_fun": 41,
    "number_of_inferred_var": 213,
    "number_of_objects_declarations": 9,
    "number_of_companion_objects": 3,
    "number_of_singletons": 0,
    "number_of_declaration": 256,
    "number_of_var_declaration": 256,
    "number_of_func_call": 1176,
    "number_of_arguments": 1091,
    "number_of_parameters": 252,
    "number_of_qualified_expressions": 1523,
    "number_of_inheritances": 18,
    "number_of_unsafe_calls": 49,
    "number_of_safe_calls": 51,
    "number_of_destructuring_declarations": 0,
    "number_of_when_expressions": 12,
    "number_of_functions_with_default_value": 6,
    "number_of_function_call_with_named_value": 4,
    "number_of_named_argument": 7,
    "number_of_argument_with_default_value": 6,
    "number_of_overloaded_op": 0,
    "number_of_extension_function": 3,
    "number_of_properties_delegation": 0,
    "number_of_super_delegation": 0,
    "number_of_ranges": 1,
    "number_of_lambdas": 198,
    "number_of_possible_smart_casts": 1,
    "number_of_data_class": 4,
    "number_of_properties": 256,
    "number_of_functions": 202,
    "number_of_interfaces": 3,
    "number_of_classes": 33,
    "number_of_packages": 12,
    "number_of_kts_files": 0,
    "number_of_kt_files": 40
  },
  "findings": [{
    "group": "complexity",
    "smells": [{
      "name": "LargeClass",
      "description": "One class should have one responsibility. Large classes tend to handle many things at once. Split up large classes into smaller classes that are easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:31:1",
        "message": "Class TextFragment is too large. Consider splitting it into smaller pieces."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:38:1",
        "message": "Class MainActivity is too large. Consider splitting it into smaller pieces."
      }]
    }, {
      "name": "ComplexMethod",
      "description": "Prefer splitting up complex methods into smaller, easier to understand methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:114:5",
        "message": "The function setupFragment appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/adapters/WidgetAdapter.kt:30:5",
        "message": "The function getViewAt appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/RenameNoteDialog.kt:37:5",
        "message": "The function newTitleConfirmed appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/ImportFolderDialog.kt:43:5",
        "message": "The function saveFolder appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:128:5",
        "message": "The function onOptionsItemSelected appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:529:5",
        "message": "The function exportNoteValueToFile appears to be too complex."
      }]
    }, {
      "name": "TooManyFunctions",
      "description": "Too many functions inside a/an file/class/object/interface always indicate a violation of the single responsibility principle. Maybe the file/class/object/interface wants to manage to many things at once. Extract functionality which clearly belongs together.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:31:1",
        "message": "Class 'TextFragment' with '19' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/adapters/NotesPagerAdapter.kt:16:1",
        "message": "Class 'NotesPagerAdapter' with '15' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/adapters/ChecklistAdapter.kt:20:1",
        "message": "Class 'ChecklistAdapter' with '14' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:38:1",
        "message": "Class 'MainActivity' with '55' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/SettingsActivity.kt:19:1",
        "message": "Class 'SettingsActivity' with '20' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/WidgetConfigureActivity.kt:31:1",
        "message": "Class 'WidgetConfigureActivity' with '12' functions detected. Defined threshold inside classes is set to '11'"
      }]
    }, {
      "name": "LabeledExpression",
      "description": "Expression with labels increase complexity and affect maintainability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/adapters/WidgetAdapter.kt:41:75",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/RenameNoteDialog.kt:76:29",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/ExportFileDialog.kt:42:33",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/ExportFileDialog.kt:48:33",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:247:17",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:538:61",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/SettingsActivity.kt:147:30",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/SettingsActivity.kt:170:30",
        "message": "Expression with labels increase complexity and affect maintainability."
      }]
    }]
  }, {
    "group": "empty-blocks",
    "smells": [{
      "name": "EmptyCatchBlock",
      "description": "Empty block of code detected. As they serve no purpose they should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/extensions/String.kt:12:32",
        "message": "This empty block of code can be removed."
      }]
    }]
  }, {
    "group": "exceptions",
    "smells": [{
      "name": "TooGenericExceptionCaught",
      "description": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:226:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/extensions/String.kt:12:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/adapters/NotesPagerAdapter.kt:60:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:563:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }]
    }]
  }, {
    "group": "naming",
    "smells": [{
      "name": "FunctionNaming",
      "description": "Function names should follow the naming convention set in the configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/databases/NotesDatabase.kt:19:5",
        "message": "Function names should match the pattern: ^([a-z$][a-zA-Z$0-9]*)|(`.*`)$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/databases/NotesDatabase.kt:21:5",
        "message": "Function names should match the pattern: ^([a-z$][a-zA-Z$0-9]*)|(`.*`)$"
      }]
    }, {
      "name": "VariableNaming",
      "description": "Variable names should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:33:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:39:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:40:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }]
    }, {
      "name": "FunctionParameterNaming",
      "description": "Function parameter names should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/adapters/NotesPagerAdapter.kt:65:67",
        "message": "Function parameter names should match the pattern: [a-z][A-Za-z0-9]*"
      }]
    }]
  }, {
    "group": "potential-bugs",
    "smells": [{
      "name": "UnsafeCallOnNullableType",
      "description": "It will throw a NullPointerException at runtime if your nullable value is null.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/databases/NotesDatabase.kt:38:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/databases/NotesDatabase.kt:42:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/databases/NotesDatabase.kt:53:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:45:18",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:48:35",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:50:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:68:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:78:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:119:32",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:165:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:165:47",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:174:23",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:176:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:177:27",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:178:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:182:59",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:190:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:205:42",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:283:56",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:283:72",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/ChecklistFragment.kt:33:18",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/ChecklistFragment.kt:40:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/ChecklistFragment.kt:45:67",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/ChecklistFragment.kt:46:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/ChecklistFragment.kt:60:86",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/ChecklistFragment.kt:64:45",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/ChecklistFragment.kt:71:30",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/ChecklistFragment.kt:119:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/ChecklistFragment.kt:120:50",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/extensions/Fragment.kt:6:78",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/adapters/NotesPagerAdapter.kt:25:33",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/adapters/NotesPagerAdapter.kt:28:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/adapters/WidgetAdapter.kt:39:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/adapters/WidgetAdapter.kt:58:32",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/adapters/WidgetAdapter.kt:95:72",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/OpenNoteDialog.kt:37:26",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/OpenNoteDialog.kt:40:34",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:121:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:236:40",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:270:40",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:274:44",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:540:36",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:612:41",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:621:32",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:623:39",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/WidgetConfigureActivity.kt:100:33",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/WidgetConfigureActivity.kt:105:46",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/WidgetConfigureActivity.kt:110:26",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/helpers/MyMovementMethod.kt:18:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }]
    }, {
      "name": "LateinitUsage",
      "description": "Usage of lateinit detected. Using lateinit for property initialization is error prone, try using constructor injection or delegation.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:41:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/ChecklistFragment.kt:29:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/adapters/ChecklistAdapter.kt:23:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/adapters/ChecklistAdapter.kt:24:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:42:5",
        "message": "Usages of latinit should be avoided."
      }]
    }, {
      "name": "UnsafeCast",
      "description": "Cast operator throws an exception if the cast is not possible.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:44:16",
        "message": "inflater.inflate(R.layout.fragment_text, container, false) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:93:18",
        "message": "activity cannot be safely cast to MainActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:121:18",
        "message": "activity cannot be safely cast to MainActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:290:14",
        "message": "activity cannot be safely cast to MainActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/ChecklistFragment.kt:32:16",
        "message": "inflater.inflate(R.layout.fragment_checklist, container, false) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/ChecklistFragment.kt:82:32",
        "message": "activity cannot be safely cast to SimpleActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/ChecklistFragment.kt:100:26",
        "message": "activity cannot be safely cast to SimpleActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/ChecklistFragment.kt:101:31",
        "message": "it cannot be safely cast to ChecklistItem."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/adapters/NotesPagerAdapter.kt:71:24",
        "message": "super.instantiateItem(container, position) cannot be safely cast to NoteFragment."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/OpenFileDialog.kt:20:21",
        "message": "activity.layoutInflater.inflate(R.layout.dialog_open_file, null) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/ImportFolderDialog.kt:24:21",
        "message": "activity.layoutInflater.inflate(R.layout.dialog_import_folder, null) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:233:21",
        "message": "it cannot be safely cast to Int."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:480:28",
        "message": "it cannot be safely cast to Int."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:581:37",
        "message": "view_pager.adapter cannot be safely cast to NotesPagerAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/SettingsActivity.kt:148:35",
        "message": "it cannot be safely cast to Int."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/SettingsActivity.kt:171:34",
        "message": "it cannot be safely cast to Int."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/WidgetConfigureActivity.kt:104:30",
        "message": "it cannot be safely cast to Int."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/helpers/NotesHelper.kt:21:25",
        "message": "context.notesDB.getNotes() cannot be safely cast to ArrayList<Note>."
      }]
    }]
  }, {
    "group": "style",
    "smells": [{
      "name": "ReturnCount",
      "description": "Restrict the number of return statements in methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:160:5",
        "message": "Function saveText has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/adapters/WidgetAdapter.kt:30:5",
        "message": "Function getViewAt has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/RenameNoteDialog.kt:37:5",
        "message": "Function newTitleConfirmed has 3 return statements which exceeds the limit of 2."
      }]
    }, {
      "name": "WildcardImport",
      "description": "Wildcard imports should be replaced with imports using fully qualified class names. Wildcard imports can lead to naming conflicts. A library update can introduce naming clashes with your classes which results in compilation errors.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:17:1",
        "message": "com.simplemobiletools.commons.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:23:1",
        "message": "com.simplemobiletools.notes.pro.helpers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/ChecklistFragment.kt:10:1",
        "message": "com.simplemobiletools.commons.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/extensions/Context.kt:9:1",
        "message": "com.simplemobiletools.notes.pro.helpers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/adapters/WidgetAdapter.kt:20:1",
        "message": "com.simplemobiletools.notes.pro.helpers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/RenameNoteDialog.kt:5:1",
        "message": "com.simplemobiletools.commons.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/ExportFileDialog.kt:5:1",
        "message": "com.simplemobiletools.commons.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:16:1",
        "message": "com.simplemobiletools.commons.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:30:1",
        "message": "com.simplemobiletools.notes.pro.dialogs.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:31:1",
        "message": "com.simplemobiletools.notes.pro.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:32:1",
        "message": "com.simplemobiletools.notes.pro.helpers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/SettingsActivity.kt:15:1",
        "message": "com.simplemobiletools.notes.pro.helpers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/WidgetConfigureActivity.kt:15:1",
        "message": "com.simplemobiletools.commons.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/interfaces/NotesDao.kt:3:1",
        "message": "androidx.room.* is a wildcard import. Replace it with fully qualified imports."
      }]
    }, {
      "name": "MaxLineLength",
      "description": "Line detected that is longer than the defined maximum line length in the code style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/TextFragment.kt:48:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/fragments/ChecklistFragment.kt:60:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/extensions/Context.kt:27:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/adapters/NotesPagerAdapter.kt:16:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/adapters/ChecklistAdapter.kt:20:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/adapters/ChecklistAdapter.kt:21:24",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/adapters/ChecklistAdapter.kt:53:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/adapters/ChecklistAdapter.kt:67:133",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/adapters/WidgetAdapter.kt:44:17",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/OpenNoteDialog.kt:51:158",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/ExportFilesDialog.kt:15:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/OpenFileDialog.kt:16:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/DeleteNoteDialog.kt:25:122",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/RenameNoteDialog.kt:15:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/ImportFolderDialog.kt:20:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/ImportFolderDialog.kt:34:29",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/ExportFileDialog.kt:47:146",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/NewNoteDialog.kt:20:90",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/NewNoteDialog.kt:35:127",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/NewNoteDialog.kt:37:41",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:61:137",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:364:25",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:520:133",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:529:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/WidgetConfigureActivity.kt:132:13",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/helpers/MyWidgetProvider.kt:23:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/helpers/MyWidgetProvider.kt:43:17",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }]
    }, {
      "name": "UnnecessaryParentheses",
      "description": "Unnecessary parentheses don't add any value to the code and should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/models/Note.kt:10:41",
        "message": "Parentheses in (Index(value = [\"id\"], unique = true)) are unnecessary and can be replaced with: Index(value = [\"id\"], unique = true)"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/models/Widget.kt:8:43",
        "message": "Parentheses in (Index(value = [\"widget_id\"], unique = true)) are unnecessary and can be replaced with: Index(value = [\"widget_id\"], unique = true)"
      }]
    }, {
      "name": "DataClassContainsFunctions",
      "description": "Data classes should mainly be used to store data and should not have any extra functions. (Compiler will automatically generate equals, toString and hashCode functions)",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/models/Note.kt:18:5",
        "message": "The data class Note contains functions which are not registered conversion functions. The offending method is called getNoteStoredValue"
      }]
    }, {
      "name": "UseDataClass",
      "description": "Classes that do nothing but hold data should be replaced with a data class.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/NewChecklistItemDialog.kt:13:1",
        "message": "The class NewChecklistItemDialog defines nofunctionality and only holds data. Consider converting it to a data class."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/ExportFilesDialog.kt:15:1",
        "message": "The class ExportFilesDialog defines nofunctionality and only holds data. Consider converting it to a data class."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/ExportFileDialog.kt:13:1",
        "message": "The class ExportFileDialog defines nofunctionality and only holds data. Consider converting it to a data class."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/NewNoteDialog.kt:18:1",
        "message": "The class NewNoteDialog defines nofunctionality and only holds data. Consider converting it to a data class."
      }]
    }, {
      "name": "MagicNumber",
      "description": "Report magic numbers. Magic number is a numeric literal that is not defined as a constant and hence it's unclear what the purpose of this number is. It's better to declare such numbers as constants and give them a proper name. By default, -1, 0, 1, and 2 are not considered to be magic numbers.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/ImportFolderDialog.kt:50:33",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/ImportFolderDialog.kt:50:38",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/dialogs/ImportFolderDialog.kt:50:45",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:84:32",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:382:36",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:382:41",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:382:48",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:713:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:714:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:715:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:716:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:717:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:718:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:719:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/MainActivity.kt:720:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/WidgetConfigureActivity.kt:71:24",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/WidgetConfigureActivity.kt:73:48",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/WidgetConfigureActivity.kt:78:36",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/WidgetConfigureActivity.kt:81:33",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/WidgetConfigureActivity.kt:120:39",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/activities/WidgetConfigureActivity.kt:121:39",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Notes/app/src/main/kotlin/com/simplemobiletools/notes/pro/helpers/NotesHelper.kt:18:30",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }]
    }]
  }]
}