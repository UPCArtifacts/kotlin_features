{
  "complexity_metrics": {
    "loc": 480,
    "sloc": 372,
    "lloc": 283,
    "cloc": 13,
    "mcc": 59,
    "n_smell": 81,
    "comment_ratio": 3,
    "mcc_per_thlines": 208
  },
  "metrics": {
    "number_of_string": 4,
    "number_of_string_template": 0,
    "number_of_inline_func": 0,
    "number_of_inferred_fun": 0,
    "number_of_inferred_var": 22,
    "number_of_objects_declarations": 1,
    "number_of_companion_objects": 0,
    "number_of_singletons": 1,
    "number_of_declaration": 61,
    "number_of_var_declaration": 61,
    "number_of_func_call": 111,
    "number_of_arguments": 100,
    "number_of_parameters": 14,
    "number_of_qualified_expressions": 182,
    "number_of_inheritances": 3,
    "number_of_unsafe_calls": 8,
    "number_of_safe_calls": 37,
    "number_of_destructuring_declarations": 0,
    "number_of_when_expressions": 1,
    "number_of_functions_with_default_value": 0,
    "number_of_function_call_with_named_value": 0,
    "number_of_named_argument": 0,
    "number_of_argument_with_default_value": 0,
    "number_of_overloaded_op": 0,
    "number_of_extension_function": 0,
    "number_of_properties_delegation": 0,
    "number_of_super_delegation": 0,
    "number_of_ranges": 0,
    "number_of_lambdas": 5,
    "number_of_possible_smart_casts": 0,
    "number_of_data_class": 0,
    "number_of_properties": 61,
    "number_of_functions": 24,
    "number_of_interfaces": 0,
    "number_of_classes": 7,
    "number_of_packages": 5,
    "number_of_kts_files": 0,
    "number_of_kt_files": 7
  },
  "findings": [{
    "group": "complexity",
    "smells": [{
      "name": "LabeledExpression",
      "description": "Expression with labels increase complexity and affect maintainability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/activity/MainActivity.kt:32:36",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/activity/MainActivity.kt:35:37",
        "message": "Expression with labels increase complexity and affect maintainability."
      }]
    }]
  }, {
    "group": "exceptions",
    "smells": [{
      "name": "TooGenericExceptionCaught",
      "description": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/activity/MainActivity.kt:82:21",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }]
    }]
  }, {
    "group": "naming",
    "smells": [{
      "name": "VariableNaming",
      "description": "Variable names should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/activity/MainActivity.kt:22:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/activity/MainActivity.kt:23:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:40:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }]
    }, {
      "name": "MatchingDeclarationName",
      "description": "If a source file contains only a single non-private top-level class or object, the file name should reflect the case-sensitive name plus the .kt extension.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/singleton/Const.kt:1:1",
        "message": "The file name 'Const.kt' does not match the name of the single top-level declaration 'Config'."
      }]
    }]
  }, {
    "group": "potential-bugs",
    "smells": [{
      "name": "UnsafeCast",
      "description": "Cast operator throws an exception if the cast is not possible.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/activity/MainActivity.kt:66:10",
        "message": "binding?.tvControlButton cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/activity/MainActivity.kt:67:10",
        "message": "binding?.tvSwitchKillApp cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/activity/AlarmActivity.kt:14:14",
        "message": "getSystemService(Context.ACTIVITY_SERVICE) cannot be safely cast to ActivityManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:59:25",
        "message": "getSystemService(Context.WINDOW_SERVICE) cannot be safely cast to WindowManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:68:20",
        "message": "getSystemService(Context.VIBRATOR_SERVICE) cannot be safely cast to Vibrator."
      }]
    }, {
      "name": "UnsafeCallOnNullableType",
      "description": "It will throw a NullPointerException at runtime if your nullable value is null.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/utils/ImageTransmogrifier.kt:61:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/utils/ImageTransmogrifier.kt:62:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/utils/ImageTransmogrifier.kt:64:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/utils/ImageTransmogrifier.kt:71:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:95:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:95:60",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:204:65",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:204:146",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }]
    }]
  }, {
    "group": "style",
    "smells": [{
      "name": "MaxLineLength",
      "description": "Line detected that is longer than the defined maximum line length in the code style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/activity/MainActivity.kt:61:124",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/activity/MainActivity.kt:66:141",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/activity/MainActivity.kt:67:131",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/activity/AlarmActivity.kt:13:31",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:74:128",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:97:170",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:204:17",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }]
    }, {
      "name": "UnnecessaryParentheses",
      "description": "Unnecessary parentheses don't add any value to the code and should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/activity/MainActivity.kt:30:68",
        "message": "Parentheses around the lambda ({\n            if (Config.runningService) {\n                stopService(Intent(this@MainActivity, WatcherService::class.java))\n            } else {\n                init()\n                startService(Intent(this@MainActivity, WatcherService::class.java))\n            }\n\n            Config.runningService = !Config.runningService;\n            updateUI();\n        }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/activity/MainActivity.kt:42:68",
        "message": "Parentheses around the lambda ({\n            Config.appKill = !Config.appKill\n            updateUI();\n        }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:82:40",
        "message": "Parentheses around the lambda ({\n            updateUI(!watching);\n\n            if (watching == true) {\n                color = null;\n\n                if (virtualDisplay != null) {\n                    virtualDisplay?.release();\n                    virtualDisplay = null;\n                }\n\n                imageTransmogrifier = ImageTransmogrifier(this);\n                virtualDisplay = Config.mediaProjection?.createVirtualDisplay(DISPLAY_NAME,\n                        imageTransmogrifier?.getWidth()!!, imageTransmogrifier?.getHeight()!!,\n                        getResources().getDisplayMetrics().densityDpi,\n                        DisplayManager.VIRTUAL_DISPLAY_FLAG_OWN_CONTENT_ONLY or DisplayManager.VIRTUAL_DISPLAY_FLAG_PUBLIC, imageTransmogrifier?.surface, null, handler);\n\n                Config.mediaProjection?.registerCallback(CallBack(virtualDisplay), handler)\n\n            }\n        }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:204:97",
        "message": "Parentheses in (10 * metrics.density) are unnecessary and can be replaced with: 10 * metrics.density"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:204:178",
        "message": "Parentheses in (10 * metrics.density) are unnecessary and can be replaced with: 10 * metrics.density"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:197:45",
        "message": "Parentheses around the lambda ({\n            var x: Int? = null\n            var y: Int? = null\n\n            if (imageTransmogrifier?.orientation != getResources().getConfiguration().orientation) {\n                updateUI(false);\n            } else {\n                val currentColor = bitmap?.getPixel((currentX / imageTransmogrifier?.scaleX!! + (10 * metrics.density) / 2).toInt(), (currentY / imageTransmogrifier?.scaleY!! + (10 * metrics.density) / 2).toInt());\n                if (color == null) {\n                    color = currentColor\n                } else if (currentColor != color) {\n                    vibrator?.vibrate(5000)\n                    updateUI(false);\n\n                    if (Config.appKill) {\n                        val intent = Intent(this, AlarmActivity::class.java)\n                        intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK\n                        startActivity(intent)\n                    }\n                }\n            }\n        }) are unnecessary and can be removed."
      }]
    }, {
      "name": "MagicNumber",
      "description": "Report magic numbers. Magic number is a numeric literal that is not defined as a constant and hence it's unclear what the purpose of this number is. It's better to declare such numbers as constants and give them a proper name. By default, -1, 0, 1, and 2 are not considered to be magic numbers.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/activity/MainActivity.kt:22:59",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/activity/MainActivity.kt:23:59",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/activity/AlarmActivity.kt:15:12",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/utils/ImageTransmogrifier.kt:33:39",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:105:26",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:106:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:134:52",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:204:98",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:204:179",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:208:39",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }]
    }, {
      "name": "NewLineAtEndOfFile",
      "description": "Checks whether files end with a line separator.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/activity/AlarmActivity.kt:19:1",
        "message": "The file AlarmActivity.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/utils/ImageTransmogrifier.kt:93:1",
        "message": "The file ImageTransmogrifier.kt is not ending with a new line."
      }]
    }, {
      "name": "UnusedImports",
      "description": "Unused Imports are dead code and should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/utils/ImageTransmogrifier.kt:6:1",
        "message": "The import 'android.media.Image' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/utils/ImageTransmogrifier.kt:8:1",
        "message": "The import 'android.view.Display' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/utils/ImageTransmogrifier.kt:11:1",
        "message": "The import 'java.io.ByteArrayOutputStream' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/utils/ImageTransmogrifier.kt:12:1",
        "message": "The import 'java.nio.ByteBuffer' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:16:1",
        "message": "The import 'android.content.pm.ApplicationInfo' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:17:1",
        "message": "The import 'android.app.ActivityManager' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:18:1",
        "message": "The import 'android.content.pm.ConfigurationInfo' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:19:1",
        "message": "The import 'android.content.pm.PackageManager' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:20:1",
        "message": "The import 'android.content.res.Configuration' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:21:1",
        "message": "The import 'android.util.Log' is unused."
      }]
    }, {
      "name": "ExpressionBodySyntax",
      "description": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/utils/ImageTransmogrifier.kt:82:32",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/utils/ImageTransmogrifier.kt:86:33",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:166:59",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:184:44",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:221:32",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }]
    }, {
      "name": "RedundantVisibilityModifierRule",
      "description": "Checks for redundant visibility modifiers. Public is the default visibility for classes. The public modifier is redundant.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/utils/ImageTransmogrifier.kt:19:5",
        "message": "orientation is explicitly marked as public. Properties are public by default so this modifier is redundant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/utils/ImageTransmogrifier.kt:20:5",
        "message": "scaleX is explicitly marked as public. Properties are public by default so this modifier is redundant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/utils/ImageTransmogrifier.kt:21:5",
        "message": "scaleY is explicitly marked as public. Properties are public by default so this modifier is redundant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/utils/ImageTransmogrifier.kt:79:5",
        "message": "surface is explicitly marked as public. Properties are public by default so this modifier is redundant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/utils/ImageTransmogrifier.kt:82:5",
        "message": "getWidth is explicitly marked as public. Functions are public by default so this modifier is redundant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/utils/ImageTransmogrifier.kt:86:5",
        "message": "getHeight is explicitly marked as public. Functions are public by default so this modifier is redundant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/utils/ImageTransmogrifier.kt:90:5",
        "message": "close is explicitly marked as public. Functions are public by default so this modifier is redundant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/singleton/Const.kt:6:5",
        "message": "mediaProjection is explicitly marked as public. Properties are public by default so this modifier is redundant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/singleton/Const.kt:7:5",
        "message": "runningService is explicitly marked as public. Properties are public by default so this modifier is redundant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/singleton/Const.kt:8:5",
        "message": "appKill is explicitly marked as public. Properties are public by default so this modifier is redundant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/singleton/Const.kt:9:5",
        "message": "LINEAGE_PACKAGE_NAME is explicitly marked as public. Properties are public by default so this modifier is redundant."
      }]
    }, {
      "name": "MayBeConst",
      "description": "Reports vals that can be const val instead.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/singleton/Const.kt:9:5",
        "message": "LINEAGE_PACKAGE_NAME can be a `const val`."
      }]
    }, {
      "name": "WildcardImport",
      "description": "Wildcard imports should be replaced with imports using fully qualified class names. Wildcard imports can lead to naming conflicts. A library update can introduce naming clashes with your classes which results in compilation errors.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:15:1",
        "message": "android.os.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:22:1",
        "message": "android.view.* is a wildcard import. Replace it with fully qualified imports."
      }]
    }, {
      "name": "UnusedPrivateMember",
      "description": "Private member is unused.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:133:21",
        "message": "Private property rect is unused."
      }]
    }, {
      "name": "VarCouldBeVal",
      "description": "Var declaration could be val.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:133:21",
        "message": "Variable 'rect' could be val."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:134:21",
        "message": "Variable 'array' could be val."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:133:21",
        "message": "Variable 'rect' could be val."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:134:21",
        "message": "Variable 'array' could be val."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:198:13",
        "message": "Variable 'x' could be val."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/includex-LineageWatcher/app/src/main/java/com/stolineage/lineagewatcher/service/WatcherService.kt:199:13",
        "message": "Variable 'y' could be val."
      }]
    }]
  }]
}