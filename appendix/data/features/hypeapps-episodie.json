{
  "complexity_metrics": {
    "loc": 14492,
    "sloc": 11060,
    "lloc": 6970,
    "cloc": 411,
    "mcc": 2009,
    "n_smell": 878,
    "comment_ratio": 3,
    "mcc_per_thlines": 288
  },
  "metrics": {
    "number_of_string": 294,
    "number_of_string_template": 10,
    "number_of_inline_func": 12,
    "number_of_inferred_fun": 180,
    "number_of_inferred_var": 277,
    "number_of_objects_declarations": 78,
    "number_of_companion_objects": 53,
    "number_of_singletons": 3,
    "number_of_declaration": 656,
    "number_of_var_declaration": 656,
    "number_of_func_call": 3797,
    "number_of_arguments": 3605,
    "number_of_parameters": 1725,
    "number_of_qualified_expressions": 5066,
    "number_of_inheritances": 170,
    "number_of_unsafe_calls": 118,
    "number_of_safe_calls": 452,
    "number_of_destructuring_declarations": 0,
    "number_of_when_expressions": 19,
    "number_of_functions_with_default_value": 29,
    "number_of_function_call_with_named_value": 57,
    "number_of_named_argument": 299,
    "number_of_argument_with_default_value": 83,
    "number_of_overloaded_op": 0,
    "number_of_extension_function": 33,
    "number_of_properties_delegation": 1,
    "number_of_super_delegation": 0,
    "number_of_ranges": 4,
    "number_of_lambdas": 408,
    "number_of_possible_smart_casts": 14,
    "number_of_data_class": 38,
    "number_of_properties": 656,
    "number_of_functions": 1392,
    "number_of_interfaces": 59,
    "number_of_classes": 328,
    "number_of_packages": 90,
    "number_of_kts_files": 0,
    "number_of_kt_files": 305
  },
  "findings": [{
    "group": "complexity",
    "smells": [{
      "name": "TooManyFunctions",
      "description": "Too many functions inside a/an file/class/object/interface always indicate a violation of the single responsibility principle. Maybe the file/class/object/interface wants to manage to many things at once. Extract functionality which clearly belongs together.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/datasource/WatchedShowDataSource.kt:12:1",
        "message": "Class 'WatchedShowDataSource' with '12' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/datasource/WatchedShowDataStore.kt:8:1",
        "message": "Interface 'WatchedShowDataStore' with '11' functions detected. Defined threshold inside interfaces is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/room/dao/WatchedShowDao.kt:13:1",
        "message": "Interface 'WatchedShowDao' with '14' functions detected. Defined threshold inside interfaces is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/room/WatchedEpisodeDao.kt:12:1",
        "message": "Interface 'WatchedEpisodeDao' with '12' functions detected. Defined threshold inside interfaces is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:36:1",
        "message": "Class 'SnappingRecyclerView' with '21' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/TopListFragment.kt:42:1",
        "message": "Class 'TopListFragment' with '20' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/YourLibraryActivity.kt:60:1",
        "message": "Class 'YourLibraryActivity' with '28' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowsummary/TvShowSummaryFragment.kt:23:1",
        "message": "Class 'TvShowSummaryFragment' with '14' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/PremieresFragment.kt:46:1",
        "message": "Class 'PremieresFragment' with '21' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/navigationdrawer/NavigationDrawer.kt:35:1",
        "message": "Class 'NavigationDrawer' with '17' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mostpopular/MostPopularFragment.kt:35:1",
        "message": "Class 'MostPopularFragment' with '13' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:57:1",
        "message": "Class 'SeasonTrackerActivity' with '44' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/SearchActivity.kt:38:1",
        "message": "Class 'SearchActivity' with '25' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:44:1",
        "message": "Class 'TvShowDetailsActivity' with '27' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasons/SeasonsFragment.kt:31:1",
        "message": "Class 'SeasonsFragment' with '20' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mainfeed/MainFeedActivity.kt:32:1",
        "message": "Class 'MainFeedActivity' with '14' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/TimeCalculatorActivity.kt:53:1",
        "message": "Class 'TimeCalculatorActivity' with '35' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/AppModule.kt:16:1",
        "message": "Class 'AppModule' with '15' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/components/AppComponent.kt:17:1",
        "message": "Interface 'AppComponent' with '16' functions detected. Defined threshold inside interfaces is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/TextViewExtension.kt:1:1",
        "message": "File 'TextViewExtension.kt' with '17' functions detected. Defined threshold inside files is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/ViewExtensions.kt:1:1",
        "message": "File 'ViewExtensions.kt' with '11' functions detected. Defined threshold inside files is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/yourlibrary/YourLibraryView.kt:7:1",
        "message": "Interface 'YourLibraryView' with '14' functions detected. Defined threshold inside interfaces is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/premieres/PremieresView.kt:7:1",
        "message": "Interface 'PremieresView' with '11' functions detected. Defined threshold inside interfaces is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/seasontracker/SeasonTrackerPresenter.kt:18:1",
        "message": "Class 'SeasonTrackerPresenter' with '12' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/seasontracker/SeasonTrackerView.kt:9:1",
        "message": "Interface 'SeasonTrackerView' with '25' functions detected. Defined threshold inside interfaces is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/toplist/TopListView.kt:7:1",
        "message": "Interface 'TopListView' with '12' functions detected. Defined threshold inside interfaces is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/search/SearchView.kt:6:1",
        "message": "Interface 'SearchView' with '12' functions detected. Defined threshold inside interfaces is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/tvshowdetails/TvShowDetailsView.kt:6:1",
        "message": "Interface 'TvShowDetailsView' with '17' functions detected. Defined threshold inside interfaces is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/seasons/SeasonsView.kt:6:1",
        "message": "Interface 'SeasonsView' with '12' functions detected. Defined threshold inside interfaces is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/timecalculator/TimeCalculatorView.kt:6:1",
        "message": "Interface 'TimeCalculatorView' with '20' functions detected. Defined threshold inside interfaces is set to '11'"
      }]
    }, {
      "name": "ComplexInterface",
      "description": "An interface contains too many functions and properties. Large classes tend to handle many things at once. An interface should have one responsibility. Split up large interfaces into smaller ones that are easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/datasource/WatchedShowDataStore.kt:8:1",
        "message": "The interface WatchedShowDataStore is too complex. Consider splitting it up."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/room/dao/WatchedShowDao.kt:13:1",
        "message": "The interface WatchedShowDao is too complex. Consider splitting it up."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/room/WatchedEpisodeDao.kt:12:1",
        "message": "The interface WatchedEpisodeDao is too complex. Consider splitting it up."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/components/AppComponent.kt:17:1",
        "message": "The interface AppComponent is too complex. Consider splitting it up."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/yourlibrary/YourLibraryView.kt:7:1",
        "message": "The interface YourLibraryView is too complex. Consider splitting it up."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/premieres/PremieresView.kt:7:1",
        "message": "The interface PremieresView is too complex. Consider splitting it up."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/seasontracker/SeasonTrackerView.kt:9:1",
        "message": "The interface SeasonTrackerView is too complex. Consider splitting it up."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/toplist/TopListView.kt:7:1",
        "message": "The interface TopListView is too complex. Consider splitting it up."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/search/SearchView.kt:6:1",
        "message": "The interface SearchView is too complex. Consider splitting it up."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/tvshowdetails/TvShowDetailsView.kt:6:1",
        "message": "The interface TvShowDetailsView is too complex. Consider splitting it up."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/seasons/SeasonsView.kt:6:1",
        "message": "The interface SeasonsView is too complex. Consider splitting it up."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/timecalculator/TimeCalculatorView.kt:6:1",
        "message": "The interface TimeCalculatorView is too complex. Consider splitting it up."
      }]
    }, {
      "name": "LargeClass",
      "description": "One class should have one responsibility. Large classes tend to handle many things at once. Split up large classes into smaller classes that are easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:36:1",
        "message": "Class SnappingRecyclerView is too large. Consider splitting it into smaller pieces."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/YourLibraryActivity.kt:60:1",
        "message": "Class YourLibraryActivity is too large. Consider splitting it into smaller pieces."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:57:1",
        "message": "Class SeasonTrackerActivity is too large. Consider splitting it into smaller pieces."
      }]
    }, {
      "name": "ComplexMethod",
      "description": "Prefer splitting up complex methods into smaller, easier to understand methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:108:5",
        "message": "The function enableSnapping appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:219:5",
        "message": "The function setMarginsForChild appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/navigationdrawer/NavigationDrawer.kt:144:5",
        "message": "The function setOnClickListeners appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/adapter/SearchSuggestionsDelegateAdapter.kt:29:9",
        "message": "The function bind appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/TextViewExtension.kt:32:1",
        "message": "The function getFullRuntimeFormatted appears to be too complex."
      }]
    }, {
      "name": "LabeledExpression",
      "description": "Expression with labels increase complexity and affect maintainability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/RuntimeAlerterView.kt:53:21",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/RuntimeAlerterView.kt:85:17",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/TopListFragment.kt:154:30",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/YourLibraryActivity.kt:160:38",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/YourLibraryActivity.kt:307:44",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/PremieresFragment.kt:164:30",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mostpopular/MostPopularFragment.kt:109:30",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:115:32",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:118:53",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:205:26",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:220:49",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:222:36",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:315:59",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:328:63",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:330:66",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:341:55",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/SearchActivity.kt:109:32",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/SearchActivity.kt:113:53",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/SearchActivity.kt:201:26",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:93:33",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasons/adapter/SeasonRecyclerAdapter.kt:23:13",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mainfeed/MainFeedActivity.kt:125:14",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mainfeed/MainFeedActivity.kt:131:13",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/TimeCalculatorActivity.kt:133:32",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/TimeCalculatorActivity.kt:136:53",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/TimeCalculatorActivity.kt:218:26",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/TimeCalculatorActivity.kt:304:49",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/TimeCalculatorActivity.kt:306:36",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/ViewExtensions.kt:35:25",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/ViewExtensions.kt:40:25",
        "message": "Expression with labels increase complexity and affect maintainability."
      }]
    }, {
      "name": "NestedBlockDepth",
      "description": "Excessive nesting leads to hidden complexity. Prefer extracting code to make it easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/HeaderDelegateAdapter.kt:53:9",
        "message": "Function setCover is nested too deeply."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/dialog/SeasonItemHolder.kt:22:5",
        "message": "Function bindData is nested too deeply."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasons/adapter/SeasonItemHolder.kt:43:5",
        "message": "Function bindData is nested too deeply."
      }]
    }, {
      "name": "MethodOverloading",
      "description": "Methods which are overloaded often might be harder to maintain. Furthermore, these methods are tightly coupled. Refactor these methods and try to use optional parameters.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/components/ActivityComponent.kt:13:1",
        "message": "This method is overloaded too many times."
      }]
    }]
  }, {
    "group": "empty-blocks",
    "smells": [{
      "name": "EmptyClassBlock",
      "description": "Empty block of code detected. As they serve no purpose they should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/test/kotlin/pl/hypeapp/presentation/seasons/SeasonsPresenterTest.kt:3:1",
        "message": "The class or object  SeasonsPresenterTest is empty."
      }]
    }]
  }, {
    "group": "exceptions",
    "smells": [{
      "name": "TooGenericExceptionThrown",
      "description": "Thrown exception is too generic. Prefer throwing project specific exceptions to handle error cases.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/job/ReminderJobCreator.kt:16:21",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/watchstate/mapwatched/WatchStateMapper.kt:15:20",
        "message": "Throwable is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/watchstate/mapwatched/WatchStateMapper.kt:37:20",
        "message": "Throwable is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/userstats/UserStatsUseCase.kt:20:17",
        "message": "Throwable is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }]
    }]
  }, {
    "group": "naming",
    "smells": [{
      "name": "FunctionMaxLength",
      "description": "Function names should not be longer than the maximum set in the project configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/datasource/DataFactory.kt:24:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/datasource/DataFactory.kt:26:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/room/WatchedEpisodeDao.kt:21:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/room/WatchedEpisodeDao.kt:24:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/room/WatchedEpisodeDao.kt:27:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/room/WatchedEpisodeDao.kt:30:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/SearchActivity.kt:148:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:180:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:206:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasons/SeasonsFragment.kt:144:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mainfeed/MainFeedActivity.kt:124:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/AppModule.kt:95:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/navigation/Navigator.kt:27:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/navigation/Navigator.kt:38:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/search/SearchView.kt:12:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/tvshowdetails/TvShowDetailsView.kt:10:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/seasons/SeasonsView.kt:28:5",
        "message": "Function names should be at most 30 characters long."
      }]
    }, {
      "name": "ObjectPropertyNaming",
      "description": "Property names inside objects should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:420:9",
        "message": "Private object property names should match the pattern: (_)?[A-Za-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/animation/pagetransformer/DepthPageTransformer.kt:25:9",
        "message": "Private object property names should match the pattern: (_)?[A-Za-z][A-Za-z0-9]*"
      }]
    }, {
      "name": "ConstructorParameterNaming",
      "description": "Constructor parameter names should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:388:36",
        "message": "Constructor private parameter names should match the pattern: [a-z][A-Za-z0-9]*"
      }]
    }, {
      "name": "MemberNameEqualsClassName",
      "description": "A member should not given the same name as its parent class or object.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/Prefs.kt:9:5",
        "message": "A member is named after the class. This might result in confusion. Either rename the member or change it to a constructor."
      }]
    }, {
      "name": "FunctionMinLength",
      "description": "Function names should not be shorter than the minimum defined in the configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/LogExtension.kt:7:1",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/LogExtension.kt:9:1",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/LogExtension.kt:11:1",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/LogExtension.kt:13:1",
        "message": "Function names should be at least 3 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/LogExtension.kt:15:1",
        "message": "Function names should be at least 3 characters long."
      }]
    }, {
      "name": "VariableNaming",
      "description": "Variable names should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/mostpopular/MostPopularPresenter.kt:13:5",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }]
    }]
  }, {
    "group": "potential-bugs",
    "smells": [{
      "name": "UnsafeCallOnNullableType",
      "description": "It will throw a NullPointerException at runtime if your nullable value is null.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/test/kotlin/pl/hypeapp/dataproviders/entity/mapper/EntityMapperTest.kt:21:43",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/test/kotlin/pl/hypeapp/dataproviders/entity/mapper/EntityMapperTest.kt:21:43",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/test/kotlin/pl/hypeapp/dataproviders/entity/mapper/EntityMapperTest.kt:22:41",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/repository/SeasonTrackerDataRepository.kt:20:50",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/repository/SeasonTrackerDataRepository.kt:27:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/mapper/tvshow/AllSeasonsEntityMapper.kt:22:56",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/mapper/tvshow/MostPopularEntityMapper.kt:14:64",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/mapper/tvshow/SeasonEntityMapper.kt:21:58",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/mapper/tvshow/PremiereDatesEntityMapper.kt:30:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/mapper/tvshow/TopListEntityMapper.kt:14:60",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/mapper/reminder/EpisodeReminderEntityMapper.kt:14:50",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/mapper/reminder/PremiereReminderModelMapper.kt:13:39",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/mapper/reminder/PremiereReminderModelMapper.kt:13:57",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/mapper/reminder/PremiereReminderModelMapper.kt:13:71",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/mapper/reminder/EpisodeReminderModelMapper.kt:13:49",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/mapper/seasontracker/SeasonTrackerModelMapper.kt:14:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/mapper/seasontracker/SeasonTrackerEntityMapper.kt:14:28",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/mapper/watched/WatchedSeasonCountModelMapper.kt:14:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/mapper/watched/WatchedShowObjectMapper.kt:22:28",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/mapper/watched/WatchedShowObjectMapper.kt:38:28",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/mapper/watched/WatchedShowObjectMapper.kt:39:28",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/mapper/watched/WatchedShowObjectMapper.kt:52:29",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/mapper/watched/WatchedShowObjectMapper.kt:53:28",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/mapper/watched/WatchedShowObjectMapper.kt:55:28",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/mapper/watched/WatchedShowObjectMapper.kt:93:28",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/mapper/watched/WatchedShowObjectMapper.kt:106:28",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/mapper/watched/WatchedEpisodesCountModelMapper.kt:14:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/api/BasicAuthInterceptor.kt:14:45",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/viewmodel/TvShowModelParcelable.kt:98:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/viewmodel/premiere/PremieresViewModel.kt:19:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/viewmodel/seasontracker/SeasonTrackerViewModel.kt:42:27",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/viewmodel/seasontracker/SeasonTrackerViewModel.kt:47:27",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/viewmodel/seasontracker/SeasonTrackerViewModel.kt:61:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/viewmodel/seasontracker/SeasonTrackerViewModel.kt:61:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/viewmodel/seasontracker/SeasonTrackerViewModel.kt:68:55",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/viewmodel/seasontracker/SeasonTrackerViewModel.kt:70:63",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/viewmodel/seasontracker/SeasonTrackerViewModel.kt:74:37",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/viewmodel/seasontracker/SeasonTrackerViewModel.kt:79:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/viewmodel/seasontracker/SeasonTrackerViewModel.kt:80:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/viewmodel/seasontracker/SeasonTrackerViewModel.kt:80:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:162:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:179:39",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:310:39",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:329:29",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:357:35",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:363:27",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:366:34",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:391:62",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:391:81",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:396:62",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:396:76",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/TitleScrollingBehaviour.kt:19:33",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/TopListFragment.kt:131:71",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/TopListFragment.kt:138:106",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowsummary/TvShowSummaryFragment.kt:35:60",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/PremieresFragment.kt:74:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/PremieresFragment.kt:74:54",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/PremieresFragment.kt:106:68",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/PremieresFragment.kt:114:41",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/PremieresFragment.kt:187:64",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/EpisodeDelegateAdapter.kt:52:56",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/EpisodeDelegateAdapter.kt:56:52",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/EpisodeDelegateAdapter.kt:62:54",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/EpisodeDelegateAdapter.kt:66:50",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/HeaderDelegateAdapter.kt:83:23",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/dialog/SeasonItemHolder.kt:35:56",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:171:48",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:172:50",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:177:82",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:177:111",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:315:33",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:341:29",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/SearchActivity.kt:88:82",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/SearchActivity.kt:95:82",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/SearchActivity.kt:142:40",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/SearchActivity.kt:159:31",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/SearchActivity.kt:170:78",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:86:31",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:119:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasons/SeasonsFragment.kt:57:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasons/adapter/SeasonItemHolder.kt:52:56",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasons/SeasonsLayoutState.kt:28:32",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/adapter/TimeCalculatorDelegateAdapter.kt:48:50",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/base/BaseFragment.kt:26:43",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/job/episodereminder/EpisodeReminderJob.kt:20:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/episodereminder/SyncEpisodeRemindersUseCase.kt:31:49",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/episodereminder/SyncEpisodeRemindersUseCase.kt:34:60",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/episodereminder/SyncEpisodeRemindersUseCase.kt:53:57",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/episodereminder/SyncEpisodeRemindersUseCase.kt:54:56",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/episodereminder/SyncEpisodeRemindersUseCase.kt:55:56",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/premieres/PremiereDatesUseCase.kt:22:40",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/watchstate/UpdateSeasonWatchStateUseCase.kt:22:93",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/watchstate/UpdateSeasonWatchStateUseCase.kt:26:52",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/watchstate/UpdateSeasonWatchStateUseCase.kt:28:52",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/watchstate/UpdateEpisodeWatchStateUseCase.kt:22:93",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/watchstate/UpdateEpisodeWatchStateUseCase.kt:27:57",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/watchstate/UpdateEpisodeWatchStateUseCase.kt:27:83",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/watchstate/UpdateEpisodeWatchStateUseCase.kt:29:57",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/watchstate/UpdateEpisodeWatchStateUseCase.kt:29:83",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/yourlibrary/YourLibraryPresenter.kt:65:75",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/premieres/PremieresPresenter.kt:62:92",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/seasontracker/SeasonTrackerPresenter.kt:72:55",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/seasontracker/SeasonTrackerPresenter.kt:72:79",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/seasontracker/SeasonTrackerPresenter.kt:74:63",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/seasontracker/SeasonTrackerPresenter.kt:88:63",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/seasontracker/SeasonTrackerPresenter.kt:116:22",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/seasontracker/SeasonTrackerPresenter.kt:128:32",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/toplist/TopListPresenter.kt:62:71",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/search/SearchPresenter.kt:48:71",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/search/SearchPresenter.kt:84:32",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/tvshowdetails/TvShowDetailsPresenter.kt:45:43",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/tvshowdetails/TvShowDetailsPresenter.kt:49:71",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/tvshowdetails/TvShowDetailsPresenter.kt:52:35",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/seasons/SeasonsPresenter.kt:68:114",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/timecalculator/TimeCalculatorPresenter.kt:62:41",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/timecalculator/TimeCalculatorPresenter.kt:63:49",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/timecalculator/TimeCalculatorPresenter.kt:82:26",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/timecalculator/TimeCalculatorPresenter.kt:96:32",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }]
    }, {
      "name": "UnsafeCast",
      "description": "Cast operator throws an exception if the cast is not possible.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/DrawerMenuItemView.kt:37:40",
        "message": "context.getSystemService(Context.LAYOUT_INFLATER_SERVICE) cannot be safely cast to LayoutInflater."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/DrawerMenuItemView.kt:40:16",
        "message": "getChildAt(0) cannot be safely cast to ImageView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/DrawerMenuItemView.kt:41:17",
        "message": "getChildAt(1) cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:242:14",
        "message": "child.layoutParams cannot be safely cast to ViewGroup.MarginLayoutParams."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:243:14",
        "message": "child.layoutParams cannot be safely cast to ViewGroup.MarginLayoutParams."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:248:14",
        "message": "child.layoutParams cannot be safely cast to ViewGroup.MarginLayoutParams."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:250:14",
        "message": "child.layoutParams cannot be safely cast to ViewGroup.MarginLayoutParams."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/CustomFontTabLayout.kt:28:37",
        "message": "getChildAt(0) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/CustomFontTabLayout.kt:29:34",
        "message": "rootLayout.getChildAt(tab.position) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/CustomFontTabLayout.kt:30:37",
        "message": "tabView.getChildAt(1) cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/TopListFragment.kt:54:32",
        "message": "activity?.application cannot be safely cast to App."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/TopListFragment.kt:116:64",
        "message": "activity cannot be safely cast to Activity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/TopListFragment.kt:118:46",
        "message": "activity cannot be safely cast to Activity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/TopListFragment.kt:136:10",
        "message": "activity cannot be safely cast to MainFeedActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/TopListFragment.kt:147:10",
        "message": "activity cannot be safely cast to MainFeedActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/TopListFragment.kt:163:71",
        "message": "activity cannot be safely cast to MainFeedActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/TopListFragment.kt:164:64",
        "message": "activity cannot be safely cast to MainFeedActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/adapter/TopListDelegateAdapter.kt:23:9",
        "message": "holder cannot be safely cast to TopListViewHolder."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/adapter/TopListDelegateAdapter.kt:24:21",
        "message": "item cannot be safely cast to TvShowViewModel."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/YourLibraryActivity.kt:95:32",
        "message": "application cannot be safely cast to App."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/adapter/YourLibraryRecyclerAdapter.kt:63:60",
        "message": "this.items[position] cannot be safely cast to WatchedTvShowViewModel."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/adapter/YourLibraryDelegateAdapter.kt:21:9",
        "message": "holder cannot be safely cast to WatchedShowViewHolder."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/adapter/YourLibraryDelegateAdapter.kt:22:21",
        "message": "item cannot be safely cast to TvShowViewModel."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowsummary/TvShowSummaryFragment.kt:31:32",
        "message": "activity?.application cannot be safely cast to App."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/adapter/PremieresDelegateAdapter.kt:23:10",
        "message": "holder cannot be safely cast to PremiereViewHolder."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/adapter/PremieresDelegateAdapter.kt:23:45",
        "message": "item cannot be safely cast to PremiereViewModel."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/adapter/PremieresRecyclerAdapter.kt:72:14",
        "message": "this.items.last() cannot be safely cast to PremiereViewModel."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/PremieresFragment.kt:61:32",
        "message": "activity?.application cannot be safely cast to App."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/PremieresFragment.kt:126:10",
        "message": "activity cannot be safely cast to MainFeedActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/PremieresFragment.kt:144:59",
        "message": "activity cannot be safely cast to Activity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/PremieresFragment.kt:146:42",
        "message": "activity cannot be safely cast to Activity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/PremieresFragment.kt:173:71",
        "message": "activity cannot be safely cast to MainFeedActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/PremieresFragment.kt:174:64",
        "message": "activity cannot be safely cast to MainFeedActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mostpopular/adapter/MostPopularDelegateAdapter.kt:26:9",
        "message": "holder cannot be safely cast to MostPopularViewHolder."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mostpopular/adapter/MostPopularDelegateAdapter.kt:27:21",
        "message": "item cannot be safely cast to TvShowViewModel."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mostpopular/MostPopularFragment.kt:49:32",
        "message": "activity?.application cannot be safely cast to App."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mostpopular/MostPopularFragment.kt:100:64",
        "message": "activity cannot be safely cast to Activity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mostpopular/MostPopularFragment.kt:102:46",
        "message": "activity cannot be safely cast to Activity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mostpopular/MostPopularFragment.kt:119:71",
        "message": "activity cannot be safely cast to MainFeedActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mostpopular/MostPopularFragment.kt:120:64",
        "message": "activity cannot be safely cast to MainFeedActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/RemainingTimeDelegateAdapter.kt:21:10",
        "message": "holder cannot be safely cast to RemainingTimeViewHolder."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/RemainingTimeDelegateAdapter.kt:21:50",
        "message": "item cannot be safely cast to RemainingTimeViewModel."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/EpisodeDelegateAdapter.kt:30:10",
        "message": "holder cannot be safely cast to EpisodeViewHolder."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/EpisodeDelegateAdapter.kt:30:44",
        "message": "item cannot be safely cast to EpisodeViewModel."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/HeaderDelegateAdapter.kt:31:10",
        "message": "holder cannot be safely cast to HeaderViewHolder."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/HeaderDelegateAdapter.kt:31:43",
        "message": "item cannot be safely cast to HeaderViewModel."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:86:32",
        "message": "application cannot be safely cast to App."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/adapter/SearchSuggestionsDelegateAdapter.kt:22:10",
        "message": "holder cannot be safely cast to SearchSuggestionsViewHolder."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/adapter/SearchSuggestionsDelegateAdapter.kt:22:54",
        "message": "item cannot be safely cast to TvShowViewModel."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/SearchActivity.kt:57:32",
        "message": "application cannot be safely cast to App."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsAppBarBehavior.kt:24:33",
        "message": "dependency cannot be safely cast to AppBarLayout."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsAppBarBehavior.kt:39:20",
        "message": "dependency.rootView.findViewById<View>(R.id.tab_layout_tv_show_details) cannot be safely cast to TabLayout."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:53:32",
        "message": "application cannot be safely cast to App."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasons/SeasonsFragment.kt:51:32",
        "message": "activity?.application cannot be safely cast to App."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasons/SeasonsFragment.kt:141:10",
        "message": "activity cannot be safely cast to TvShowDetailsActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasons/SeasonsFragment.kt:145:10",
        "message": "activity cannot be safely cast to TvShowDetailsActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mainfeed/MainFeedActivity.kt:48:32",
        "message": "application cannot be safely cast to App."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mainfeed/MainFeedActivity.kt:99:56",
        "message": "layoutParams cannot be safely cast to ViewGroup.MarginLayoutParams."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/TimeCalculatorActivity.kt:80:32",
        "message": "application cannot be safely cast to App."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/TimeCalculatorActivity.kt:123:62",
        "message": "guideline_vertical_time_calculator.layoutParams cannot be safely cast to ConstraintLayout.LayoutParams."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/adapter/TimeCalculatorRecyclerAdapter.kt:45:53",
        "message": "this.items[position] cannot be safely cast to TvShowViewModel."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/adapter/TimeCalculatorDelegateAdapter.kt:32:9",
        "message": "holder cannot be safely cast to TimeCalculatorViewHolder."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/adapter/TimeCalculatorDelegateAdapter.kt:33:21",
        "message": "item cannot be safely cast to TvShowViewModel."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/base/adapter/ErrorDelegateAdapter.kt:13:87",
        "message": "holder cannot be safely cast to ErrorViewHolder."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/base/BaseFragment.kt:32:47",
        "message": "activity cannot be safely cast to Activity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/MetricsExtension.kt:15:25",
        "message": "getSystemService(Context.WINDOW_SERVICE) cannot be safely cast to WindowManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/MetricsExtension.kt:23:25",
        "message": "getSystemService(Context.WINDOW_SERVICE) cannot be safely cast to WindowManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/test/kotlin/pl/hypeapp/presentation/mostpopular/MostPopularPresenterTest.kt:57:14",
        "message": "it.arguments[1] cannot be safely cast to MostPopularUseCase.Params."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/test/kotlin/pl/hypeapp/presentation/mostpopular/MostPopularPresenterTest.kt:58:14",
        "message": "it.arguments[1] cannot be safely cast to MostPopularUseCase.Params."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/test/kotlin/pl/hypeapp/presentation/mostpopular/MostPopularPresenterTest.kt:71:14",
        "message": "it.arguments[0] cannot be safely cast to MostPopularPresenter.MostPopularObserver."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/test/kotlin/pl/hypeapp/presentation/mostpopular/MostPopularPresenterTest.kt:85:14",
        "message": "it.arguments[0] cannot be safely cast to MostPopularPresenter.MostPopularObserver."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/test/kotlin/pl/hypeapp/presentation/toplist/TopListPresenterTest.kt:96:14",
        "message": "it.arguments[0] cannot be safely cast to TopListPresenter.TopListObserver."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/test/kotlin/pl/hypeapp/presentation/toplist/TopListPresenterTest.kt:110:14",
        "message": "it.arguments[0] cannot be safely cast to TopListPresenter.TopListObserver."
      }]
    }, {
      "name": "LateinitUsage",
      "description": "Usage of lateinit detected. Using lateinit for property initialization is error prone, try using constructor injection or delegation.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/WatchedShowView.kt:28:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/CustomFontTabLayout.kt:24:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/TopListFragment.kt:45:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/TopListFragment.kt:57:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/YourLibraryActivity.kt:77:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/YourLibraryActivity.kt:80:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowsummary/TvShowSummaryFragment.kt:27:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/PremieresFragment.kt:53:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/PremieresFragment.kt:55:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/PremieresFragment.kt:57:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/navigationdrawer/NavigationDrawer.kt:46:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/navigationdrawer/NavigationDrawer.kt:50:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/navigationdrawer/NavigationDrawer.kt:57:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mostpopular/MostPopularFragment.kt:42:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mostpopular/MostPopularFragment.kt:44:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:66:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:69:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:72:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:75:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:77:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/SearchActivity.kt:45:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/SearchActivity.kt:48:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/SearchActivity.kt:51:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/SearchActivity.kt:53:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:48:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:59:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:61:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasons/SeasonsFragment.kt:39:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasons/SeasonsFragment.kt:41:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasons/SeasonsFragment.kt:45:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasons/SeasonsFragment.kt:47:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasons/adapter/SeasonItemHolder.kt:23:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasons/SeasonsLayoutState.kt:15:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasons/SeasonsLayoutState.kt:18:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasons/SeasonsLayoutState.kt:21:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasons/SeasonsLayoutState.kt:24:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mainfeed/MainFeedActivity.kt:36:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mainfeed/MainFeedActivity.kt:40:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mainfeed/MainFeedActivity.kt:43:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/TimeCalculatorActivity.kt:58:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/TimeCalculatorActivity.kt:61:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/TimeCalculatorActivity.kt:64:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/base/BaseViewModelActivity.kt:11:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/base/BaseActivity.kt:17:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/base/BaseFragment.kt:20:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/base/BaseFragment.kt:22:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/base/BaseViewModelFragment.kt:14:5",
        "message": "Usages of latinit should be avoided."
      }]
    }]
  }, {
    "group": "style",
    "smells": [{
      "name": "UnusedPrivateMember",
      "description": "Private member is unused.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/test/kotlin/pl/hypeapp/dataproviders/datasource/WatchedDataSourceTest.kt:28:9",
        "message": "Private property watchedEpisodesEntites is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/test/kotlin/pl/hypeapp/dataproviders/datasource/WatchedDataSourceTest.kt:46:9",
        "message": "Private property tvShowId is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/test/kotlin/pl/hypeapp/dataproviders/datasource/WatchedDataSourceTest.kt:55:9",
        "message": "Private property seasonId is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/test/kotlin/pl/hypeapp/dataproviders/datasource/WatchedDataSourceTest.kt:64:9",
        "message": "Private property episodeId is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/test/kotlin/pl/hypeapp/dataproviders/datasource/WatchedDataSourceTest.kt:73:9",
        "message": "Private property tvShowId is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/test/kotlin/pl/hypeapp/dataproviders/datasource/WatchedDataSourceTest.kt:74:9",
        "message": "Private property watchedEpisodeCountEntity is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/test/kotlin/pl/hypeapp/dataproviders/datasource/WatchedDataSourceTest.kt:84:9",
        "message": "Private property tvShowIds is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/test/kotlin/pl/hypeapp/dataproviders/datasource/WatchedDataSourceTest.kt:85:9",
        "message": "Private property watchedEpisodesCountEntites is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/test/kotlin/pl/hypeapp/dataproviders/datasource/WatchedDataSourceTest.kt:95:9",
        "message": "Private property seasonIds is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/test/kotlin/pl/hypeapp/dataproviders/datasource/WatchedDataSourceTest.kt:96:9",
        "message": "Private property watchedSeasonsCountEntities is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/test/kotlin/pl/hypeapp/dataproviders/datasource/WatchedDataSourceTest.kt:106:9",
        "message": "Private property seasonId is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/test/kotlin/pl/hypeapp/dataproviders/datasource/WatchedDataSourceTest.kt:107:9",
        "message": "Private property watchedEpisodesIds is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/test/kotlin/pl/hypeapp/dataproviders/datasource/WatchedDataSourceTest.kt:117:9",
        "message": "Private property episodeId is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/test/kotlin/pl/hypeapp/dataproviders/datasource/TvShowDataSourceTest.kt:22:5",
        "message": "Private property pageableRequest is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:323:5",
        "message": "Private function isChildCorrectlyCentered is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/animation/pagetransformer/BaseTransformer.kt:90:35",
        "message": "Function parameter view is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/animation/pagetransformer/BaseTransformer.kt:90:47",
        "message": "Function parameter position is unused."
      }]
    }, {
      "name": "MayBeConst",
      "description": "Reports vals that can be const val instead.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/test/kotlin/pl/hypeapp/dataproviders/cache/EvictCacheTest.kt:18:9",
        "message": "KEY can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/datasource/TvShowDataSource.kt:63:9",
        "message": "MOST_POPULAR_KEY can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/datasource/TvShowDataSource.kt:64:9",
        "message": "TOP_LIST_KEY can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/datasource/TvShowDataSource.kt:65:9",
        "message": "PREMIERE_DATES_KEY can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/cache/EvictCache.kt:12:9",
        "message": "PREFIX_DYNAMIC_KEY can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/cache/EvictCache.kt:13:9",
        "message": "PREFIX_DYNAMIC_KEY_GROUP can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:420:9",
        "message": "MINIMUM_SCROLL_EVENT_OFFSET_MS can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/YourLibraryActivity.kt:362:9",
        "message": "SWIPE_THRESHOLD can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowsummary/TvShowSummaryFragment.kt:100:9",
        "message": "ARGUMENT_INFO_ABOUT_TV_SHOW can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/adapter/TvShowDetailsPagerAdapter.kt:32:9",
        "message": "PAGE_ABOUT can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/adapter/TvShowDetailsPagerAdapter.kt:33:9",
        "message": "PAGE_SEASONS can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/adapter/TvShowDetailsPagerAdapter.kt:34:9",
        "message": "NUM_PAGES can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/adapter/TvShowDetailsPagerAdapter.kt:35:9",
        "message": "TITLE_PAGE_ABOUT can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/adapter/TvShowDetailsPagerAdapter.kt:36:9",
        "message": "TITLE_PAGE_SEASONS can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasons/SeasonsFragment.kt:156:9",
        "message": "ARGUMENT_TV_SHOW_ID can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/animation/pagetransformer/DepthPageTransformer.kt:25:9",
        "message": "MIN_SCALE can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/base/adapter/ViewType.kt:8:9",
        "message": "ITEM can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/base/adapter/ViewType.kt:9:9",
        "message": "LOADING can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/base/adapter/ViewType.kt:10:9",
        "message": "ERROR can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/base/adapter/ViewType.kt:11:9",
        "message": "DECORATOR can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/base/adapter/ViewType.kt:16:13",
        "message": "HEADER can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/base/adapter/ViewType.kt:17:13",
        "message": "TIME_REMAINING_ITEM can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/base/adapter/ViewType.kt:18:13",
        "message": "EPISODE_ITEM can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/Prefs.kt:34:9",
        "message": "PREFS_NAME can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/Prefs.kt:35:9",
        "message": "NOTIFICATION_SEASON_TRACKER_DISPLAYED can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/Prefs.kt:36:9",
        "message": "NOTIFICATION_SEASON_TRACKER_ENABLED can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/Prefs.kt:37:9",
        "message": "NOTIFICATION_SEASON_TRACKER_CANCELED can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/Prefs.kt:38:9",
        "message": "REMINDER_TV_SHOW_ID can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/Prefs.kt:39:9",
        "message": "REMINDER_SEASON_ID can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/job/episodereminder/EpisodeReminderJob.kt:48:9",
        "message": "JOB_TAG can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/job/episodereminder/EpisodeReminderJob.kt:49:9",
        "message": "SYNC_JOB_TAG can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/job/episodereminder/EpisodeReminderJob.kt:50:9",
        "message": "EXTRA_ID can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/job/episodereminder/EpisodeReminderJob.kt:51:9",
        "message": "EXTRA_TITLE can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/job/episodereminder/EpisodeReminderJob.kt:52:9",
        "message": "EXTRA_EPISODE_NAME can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/job/episodereminder/EpisodeReminderJob.kt:53:9",
        "message": "EXTRA_SYNC_JOB can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/job/episodereminder/EpisodeReminderJob.kt:54:9",
        "message": "EXTRA_EPISODE_NUMBER can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/job/episodereminder/EpisodeReminderJob.kt:55:9",
        "message": "EXTRA_TV_SHOW_ID can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/job/episodereminder/EpisodeReminderJob.kt:56:9",
        "message": "EXTRA_SEASON_ID can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/job/premierereminder/PremiereReminderJob.kt:38:9",
        "message": "JOB_TAG can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/job/premierereminder/PremiereReminderJob.kt:39:9",
        "message": "EXTRAS_TV_SHOW_TITLE can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/test/kotlin/pl/hypeapp/domain/usecase/top/TopListUseCaseTest.kt:28:9",
        "message": "SIZE can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/test/kotlin/pl/hypeapp/domain/usecase/top/TopListUseCaseTest.kt:29:9",
        "message": "PAGE can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/test/kotlin/pl/hypeapp/domain/usecase/top/TopListUseCaseTest.kt:30:9",
        "message": "UPDATE can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/test/kotlin/pl/hypeapp/domain/usecase/mostpopular/MostPopularUseCaseTest.kt:24:9",
        "message": "SIZE can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/test/kotlin/pl/hypeapp/domain/usecase/mostpopular/MostPopularUseCaseTest.kt:25:9",
        "message": "PAGE can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/test/kotlin/pl/hypeapp/domain/usecase/mostpopular/MostPopularUseCaseTest.kt:26:9",
        "message": "UPDATE can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/test/kotlin/pl/hypeapp/domain/usecase/allepisodes/AllEpisodesUseCaseTest.kt:30:9",
        "message": "ID can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/test/kotlin/pl/hypeapp/domain/usecase/allepisodes/AllEpisodesUseCaseTest.kt:31:9",
        "message": "UPDATE can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/test/kotlin/pl/hypeapp/presentation/toplist/TopListPresenterTest.kt:30:9",
        "message": "PAGE can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/test/kotlin/pl/hypeapp/presentation/toplist/TopListPresenterTest.kt:31:9",
        "message": "PAGE_LIMIT can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/tvshowsummary/TvShowSummaryPresenter.kt:40:9",
        "message": "URL_TV_MAZE can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/tvshowsummary/TvShowSummaryPresenter.kt:41:9",
        "message": "URL_IMDB can be a `const val`."
      }]
    }, {
      "name": "WildcardImport",
      "description": "Wildcard imports should be replaced with imports using fully qualified class names. Wildcard imports can lead to naming conflicts. A library update can introduce naming clashes with your classes which results in compilation errors.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/datasource/TvShowDataSource.kt:10:1",
        "message": "pl.hypeapp.dataproviders.entity.api.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/datasource/TvShowDataStore.kt:4:1",
        "message": "pl.hypeapp.dataproviders.entity.api.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/cache/CacheProviders.kt:4:1",
        "message": "io.rx_cache2.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/cache/CacheProviders.kt:5:1",
        "message": "pl.hypeapp.dataproviders.entity.api.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/room/WatchedSeasonEntity.kt:3:1",
        "message": "android.arch.persistence.room.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/room/RoomService.kt:8:1",
        "message": "pl.hypeapp.dataproviders.entity.room.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/room/RoomService.kt:9:1",
        "message": "pl.hypeapp.dataproviders.service.room.dao.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/api/EpisodieApi.kt:4:1",
        "message": "pl.hypeapp.dataproviders.entity.api.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/api/ApiService.kt:4:1",
        "message": "pl.hypeapp.dataproviders.entity.api.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/adapter/TopListDelegateAdapter.kt:11:1",
        "message": "pl.hypeapp.episodie.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/YourLibraryActivity.kt:41:1",
        "message": "pl.hypeapp.episodie.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/adapter/PremieresDelegateAdapter.kt:10:1",
        "message": "pl.hypeapp.episodie.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/EpisodeDelegateAdapter.kt:18:1",
        "message": "pl.hypeapp.episodie.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:40:1",
        "message": "pl.hypeapp.episodie.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/adapter/SearchSuggestionsDelegateAdapter.kt:10:1",
        "message": "pl.hypeapp.episodie.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/SearchActivity.kt:25:1",
        "message": "pl.hypeapp.episodie.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:29:1",
        "message": "pl.hypeapp.episodie.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/AppModule.kt:7:1",
        "message": "pl.hypeapp.dataproviders.repository.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/AppModule.kt:10:1",
        "message": "pl.hypeapp.domain.repository.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/components/AppComponent.kt:7:1",
        "message": "pl.hypeapp.domain.repository.* is a wildcard import. Replace it with fully qualified imports."
      }]
    }, {
      "name": "MaxLineLength",
      "description": "Line detected that is longer than the defined maximum line length in the code style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/datasource/TvShowDataSource.kt:50:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/datasource/TvShowDataSource.kt:56:135",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/datasource/TvShowDataStore.kt:22:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/repository/EpisodeReminderDataRepository.kt:13:57",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/repository/EpisodeReminderDataRepository.kt:14:57",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/repository/PremiereDatesDataRepository.kt:18:55",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/repository/PremiereDatesDataRepository.kt:19:55",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/repository/PremiereDatesDataRepository.kt:22:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/cache/EvictCache.kt:31:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/cache/CacheProviders.kt:13:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/cache/CacheProviders.kt:16:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/cache/CacheProviders.kt:19:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/cache/CacheProviders.kt:22:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/cache/CacheProviders.kt:25:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/mapper/tvshow/SeasonEntityMapper.kt:9:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/DrawerHamburgerArrow.kt:16:122",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:36:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:176:13",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:248:125",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:250:125",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:253:135",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/WatchedShowView.kt:95:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/WatchedShowView.kt:96:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/TitleScrollingBehaviour.kt:11:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/TopListFragment.kt:138:122",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/TopListFragment.kt:158:152",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/TopListFragment.kt:163:127",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/TopListFragment.kt:164:123",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/adapter/TopListDelegateAdapter.kt:32:135",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/adapter/TopListDelegateAdapter.kt:43:124",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/YourLibraryActivity.kt:187:123",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/YourLibraryActivity.kt:192:126",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/YourLibraryActivity.kt:193:124",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/YourLibraryActivity.kt:290:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/YourLibraryActivity.kt:291:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/adapter/YourLibraryDelegateAdapter.kt:15:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/adapter/YourLibraryDelegateAdapter.kt:25:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/adapter/PremieresDelegateAdapter.kt:18:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/adapter/PremieresDelegateAdapter.kt:27:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/adapter/PremieresDelegateAdapter.kt:33:148",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/adapter/PremieresDelegateAdapter.kt:36:151",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/adapter/PremieresDelegateAdapter.kt:43:67",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/adapter/PremieresDelegateAdapter.kt:62:134",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/adapter/PremieresDelegateAdapter.kt:65:142",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/adapter/PremieresDelegateAdapter.kt:71:146",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/adapter/PremieresDelegateAdapter.kt:75:138",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/PremieresFragment.kt:173:127",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/PremieresFragment.kt:174:123",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/navigationdrawer/NavigationDrawer.kt:67:133",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/navigationdrawer/NavigationDrawer.kt:73:129",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/navigationdrawer/NavigationDrawer.kt:197:127",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/navigationdrawer/NavigationDrawer.kt:198:138",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/navigationdrawer/NavigationDrawer.kt:199:136",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mostpopular/MostPopularFragment.kt:35:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mostpopular/MostPopularFragment.kt:113:164",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mostpopular/MostPopularFragment.kt:116:13",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mostpopular/MostPopularFragment.kt:119:127",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mostpopular/MostPopularFragment.kt:120:123",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/RemainingTimeDelegateAdapter.kt:30:124",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/RemainingTimeDelegateAdapter.kt:31:131",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/RemainingTimeDelegateAdapter.kt:32:128",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/SeasonTrackerRecyclerAdapter.kt:13:36",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/SeasonTrackerRecyclerAdapter.kt:20:124",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/EpisodeDelegateAdapter.kt:34:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/EpisodeDelegateAdapter.kt:78:13",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/EpisodeDelegateAdapter.kt:98:124",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/EpisodeDelegateAdapter.kt:113:140",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/EpisodeDelegateAdapter.kt:119:139",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/EpisodeDelegateAdapter.kt:142:122",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/HeaderDelegateAdapter.kt:35:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/HeaderDelegateAdapter.kt:43:127",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/HeaderDelegateAdapter.kt:66:139",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/HeaderDelegateAdapter.kt:79:125",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:177:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:212:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:315:126",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:322:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/adapter/SearchSuggestionsDelegateAdapter.kt:32:143",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/adapter/SearchSuggestionsDelegateAdapter.kt:43:129",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/adapter/SearchSuggestionsDelegateAdapter.kt:50:128",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/adapter/SearchSuggestionsDelegateAdapter.kt:62:142",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/SearchActivity.kt:216:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsAppBarBehavior.kt:34:123",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/adapter/TvShowDetailsPagerAdapter.kt:11:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:130:123",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasons/adapter/EpisodeItemHolder.kt:30:131",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasons/adapter/SeasonItemHolder.kt:38:136",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mainfeed/ToolbarTitleAnimation.kt:12:128",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/TimeCalculatorActivity.kt:123:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/TimeCalculatorActivity.kt:136:122",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/TimeCalculatorActivity.kt:188:142",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/TimeCalculatorActivity.kt:193:125",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/TimeCalculatorActivity.kt:228:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/TimeCalculatorActivity.kt:265:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/TimeCalculatorActivity.kt:266:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/animation/pagetransformer/BaseTransformer.kt:39:147",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/App.kt:37:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/AppModule.kt:89:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/AppModule.kt:95:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/AppModule.kt:101:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/navigation/Navigator.kt:27:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/navigation/Navigator.kt:34:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/TextViewExtension.kt:20:135",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/TextViewExtension.kt:21:134",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/ViewExtensions.kt:34:21",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/ViewExtensions.kt:39:21",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/ViewExtensions.kt:60:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/ViewExtensions.kt:65:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/job/episodereminder/EpisodeReminderJob.kt:36:123",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/yourlibrary/GetWatchedTvShowUseCase.kt:14:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/yourlibrary/GetWatchedTvShowUseCase.kt:25:146",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/premieres/DeletePremiereReminderUseCase.kt:13:57",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/premieres/DeletePremiereReminderUseCase.kt:11:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/premieres/GetPremiereReminderUseCase.kt:11:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/watchstate/UpdateSeasonWatchStateUseCase.kt:17:57",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/watchstate/UpdateSeasonWatchStateUseCase.kt:22:131",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/watchstate/UpdateEpisodeWatchStateUseCase.kt:17:58",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/watchstate/UpdateEpisodeWatchStateUseCase.kt:22:132",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/watchstate/UpdateEpisodeWatchStateUseCase.kt:27:127",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/watchstate/UpdateEpisodeWatchStateUseCase.kt:29:131",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/watchstate/UpdateTvShowWatchStateByIdUseCase.kt:12:61",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/watchstate/UpdateTvShowWatchStateByIdUseCase.kt:13:61",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/watchstate/UpdateTvShowWatchStateByIdUseCase.kt:19:37",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/yourlibrary/YourLibraryPresenter.kt:17:48",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/premieres/PremieresPresenter.kt:56:128",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/toplist/TopListPresenter.kt:16:44",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/toplist/TopListPresenter.kt:55:127",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/search/SearchPresenter.kt:65:131",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/tvshowdetails/TvShowDetailsPresenter.kt:13:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/seasons/SeasonsPresenter.kt:51:123",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/seasons/SeasonsPresenter.kt:57:147",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/seasons/SeasonsPresenter.kt:63:145",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/seasons/SeasonsPresenter.kt:68:137",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }]
    }, {
      "name": "UnnecessaryParentheses",
      "description": "Unnecessary parentheses don't add any value to the code and should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/datasource/PagingHelper.kt:7:29",
        "message": "Parentheses in (page * size) are unnecessary and can be replaced with: page * size"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/cache/EvictCache.kt:18:31",
        "message": "Parentheses around the lambda ({\n            try {\n                if (isMatchingKey(it, key)) {\n                    disk.evict(it)\n                }\n            } catch (ex: StringIndexOutOfBoundsException) {\n                disk.evict(it)\n            }\n        }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/cache/EvictCache.kt:29:104",
        "message": "Parentheses in (dynamicKey) are unnecessary and can be replaced with: dynamicKey"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/room/WatchedEpisodeEntity.kt:11:13",
        "message": "Parentheses in (ForeignKey(entity = WatchedSeasonEntity::class,\n                    parentColumns = arrayOf(\"season_id\"),\n                    childColumns = arrayOf(\"season_id\"),\n                    onDelete = ForeignKey.CASCADE)) are unnecessary and can be replaced with: ForeignKey(entity = WatchedSeasonEntity::class,\n                    parentColumns = arrayOf(\"season_id\"),\n                    childColumns = arrayOf(\"season_id\"),\n                    onDelete = ForeignKey.CASCADE)"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/room/WatchedSeasonEntity.kt:8:13",
        "message": "Parentheses in (ForeignKey(entity = WatchedTvShowEntity::class,\n                    parentColumns = arrayOf(\"tv_show_id\"),\n                    childColumns = arrayOf(\"tv_show_id\"),\n                    onDelete = ForeignKey.CASCADE)) are unnecessary and can be replaced with: ForeignKey(entity = WatchedTvShowEntity::class,\n                    parentColumns = arrayOf(\"tv_show_id\"),\n                    childColumns = arrayOf(\"tv_show_id\"),\n                    onDelete = ForeignKey.CASCADE)"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/room/RoomService.kt:12:5",
        "message": "Parentheses in (WatchedEpisodeEntity::class) are unnecessary and can be replaced with: WatchedEpisodeEntity::class"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/room/RoomService.kt:13:5",
        "message": "Parentheses in (SeasonTrackerEntity::class) are unnecessary and can be replaced with: SeasonTrackerEntity::class"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/room/RoomService.kt:14:5",
        "message": "Parentheses in (EpisodeReminderEntity::class) are unnecessary and can be replaced with: EpisodeReminderEntity::class"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/room/RoomService.kt:15:5",
        "message": "Parentheses in (PremiereReminderEntity::class) are unnecessary and can be replaced with: PremiereReminderEntity::class"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/room/RoomService.kt:16:5",
        "message": "Parentheses in (WatchedTvShowEntity::class) are unnecessary and can be replaced with: WatchedTvShowEntity::class"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/room/RoomService.kt:17:5",
        "message": "Parentheses in (WatchedSeasonEntity::class) are unnecessary and can be replaced with: WatchedSeasonEntity::class"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/WatchedShowView.kt:72:38",
        "message": "Parentheses around the lambda ({ palette ->\n            colors = intArrayOf(\n                    palette.getMutedColor(0x000000),\n                    palette.getDominantColor(0x000000))\n        }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/TitleScrollingBehaviour.kt:19:32",
        "message": "Parentheses in (dependency?.y!!.toFloat() / dependency.height) are unnecessary and can be replaced with: dependency?.y!!.toFloat() / dependency.height"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/TopListFragment.kt:136:74",
        "message": "Parentheses around the lambda ({\n            if (it == STATE_CHANGED)\n                viewModel.tvShowList.let { presenter.checkWatchStateIntegrity(viewModel.tvShowList.map { it.tvShow!! }) }\n            presenter.updateUserRuntime()\n        }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/TopListFragment.kt:147:76",
        "message": "Parentheses around the lambda ({ presenter.onDrawerDrag(it) }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/YourLibraryActivity.kt:333:54",
        "message": "Parentheses in (paddingEnd + getNavigationBarSize().x) are unnecessary and can be replaced with: paddingEnd + getNavigationBarSize().x"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/YourLibraryActivity.kt:336:54",
        "message": "Parentheses in (paddingEnd + getNavigationBarSize().x) are unnecessary and can be replaced with: paddingEnd + getNavigationBarSize().x"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/YourLibraryActivity.kt:341:66",
        "message": "Parentheses in (paddingBottom + getNavigationBarSize().y) are unnecessary and can be replaced with: paddingBottom + getNavigationBarSize().y"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/PremieresFragment.kt:126:76",
        "message": "Parentheses around the lambda ({ presenter.onDrawerDrag(it) }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/PremieresFragment.kt:187:50",
        "message": "Parentheses in (paddingEnd + activity!!.getNavigationBarSize().x) are unnecessary and can be replaced with: paddingEnd + activity!!.getNavigationBarSize().x"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/dialog/SeasonItemHolder.kt:24:51",
        "message": "Parentheses around the lambda ({\n            onDialogItemClickListener.onDialogItemSelected(seasonModel)\n        }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:387:50",
        "message": "Parentheses in (paddingEnd + getNavigationBarSize().x) are unnecessary and can be replaced with: paddingEnd + getNavigationBarSize().x"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/SearchActivity.kt:104:55",
        "message": "Parentheses around the lambda ({\n        searchSuggestionsRecyclerAdapter.addSuggestions(viewModel.searchSuggestions)\n    }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/SearchActivity.kt:177:54",
        "message": "Parentheses in (paddingEnd + getNavigationBarSize().x) are unnecessary and can be replaced with: paddingEnd + getNavigationBarSize().x"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsAppBarBehavior.kt:25:31",
        "message": "Parentheses in (defaultAngle / dependency.totalScrollRange * scrollPercentage) are unnecessary and can be replaced with: defaultAngle / dependency.totalScrollRange * scrollPercentage"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:219:50",
        "message": "Parentheses in (paddingEnd + getNavigationBarSize().x) are unnecessary and can be replaced with: paddingEnd + getNavigationBarSize().x"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasons/SeasonsFragment.kt:106:34",
        "message": "Parentheses around the lambda ({ onRetry() }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mainfeed/MainFeedActivity.kt:128:49",
        "message": "Parentheses in (paddingEnd + getNavigationBarSize().x) are unnecessary and can be replaced with: paddingEnd + getNavigationBarSize().x"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/TimeCalculatorActivity.kt:282:79",
        "message": "Parentheses in (episodeOrderSum) are unnecessary and can be replaced with: episodeOrderSum"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/TimeCalculatorActivity.kt:291:79",
        "message": "Parentheses in (selectedSum) are unnecessary and can be replaced with: selectedSum"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/base/adapter/ErrorDelegateAdapter.kt:19:55",
        "message": "Parentheses around the lambda ({ onRetryListener.onRetry() }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/base/adapter/TvShowRecyclerAdapter.kt:52:22",
        "message": "Parentheses around the lambda ({\n            if (this.items.size < totalItemCount) this.items.add(it)\n        }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/base/adapter/TvShowRecyclerAdapter.kt:63:22",
        "message": "Parentheses around the lambda ({\n            this.items.add(it)\n        }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/base/adapter/InfiniteScrollListener.kt:34:29",
        "message": "Parentheses in (totalItemCount - visibleItemCount) are unnecessary and can be replaced with: totalItemCount - visibleItemCount"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/base/adapter/InfiniteScrollListener.kt:35:24",
        "message": "Parentheses in (firstVisibleItem + visibleThreshold) are unnecessary and can be replaced with: firstVisibleItem + visibleThreshold"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/components/FragmentComponent.kt:12:28",
        "message": "Parentheses in (AppComponent::class) are unnecessary and can be replaced with: AppComponent::class"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/components/ActivityComponent.kt:14:28",
        "message": "Parentheses in (AppComponent::class) are unnecessary and can be replaced with: AppComponent::class"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/TextViewExtension.kt:35:46",
        "message": "Parentheses in (it - TimeUnit.DAYS.toMinutes(days)) are unnecessary and can be replaced with: it - TimeUnit.DAYS.toMinutes(days)"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/ViewExtensions.kt:83:36",
        "message": "Parentheses in (resources.getStatusBarHeight() + context.getActionBarSize()) are unnecessary and can be replaced with: resources.getStatusBarHeight() + context.getActionBarSize()"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/episodereminder/SyncEpisodeRemindersUseCase.kt:77:21",
        "message": "Parentheses in (episodeModel.premiereDate != null && Calendar.getInstance().time.before(episodeModel.premiereDate)) are unnecessary and can be replaced with: episodeModel.premiereDate != null && Calendar.getInstance().time.before(episodeModel.premiereDate)"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/test/kotlin/pl/hypeapp/presentation/mostpopular/MostPopularPresenterTest.kt:56:62",
        "message": "Parentheses around the lambda ({\n            (it.arguments[1] as MostPopularUseCase.Params).update `should equal` true\n            (it.arguments[1] as MostPopularUseCase.Params).pageableRequest.page `should equal` 0\n        }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/test/kotlin/pl/hypeapp/presentation/mostpopular/MostPopularPresenterTest.kt:70:68",
        "message": "Parentheses around the lambda ({\n            (it.arguments[0] as MostPopularPresenter.MostPopularObserver).onSuccess(mostPopularModel)\n        }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/test/kotlin/pl/hypeapp/presentation/mostpopular/MostPopularPresenterTest.kt:84:68",
        "message": "Parentheses around the lambda ({\n            (it.arguments[0] as MostPopularPresenter.MostPopularObserver).onError(throwable)\n        }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/test/kotlin/pl/hypeapp/presentation/toplist/TopListPresenterTest.kt:95:72",
        "message": "Parentheses around the lambda ({\n            (it.arguments[0] as TopListPresenter.TopListObserver).onSuccess(topListModel)\n        }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/test/kotlin/pl/hypeapp/presentation/toplist/TopListPresenterTest.kt:109:72",
        "message": "Parentheses around the lambda ({\n            (it.arguments[0] as TopListPresenter.TopListObserver).onError(throwable)\n        }) are unnecessary and can be removed."
      }]
    }, {
      "name": "UseDataClass",
      "description": "Classes that do nothing but hold data should be replaced with a data class.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/datasource/PagingHelper.kt:31:1",
        "message": "The class LoadPageParams defines nofunctionality and only holds data. Consider converting it to a data class."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/model/premiere/PremiereDatesModel.kt:5:1",
        "message": "The class PremiereDatesModel defines nofunctionality and only holds data. Consider converting it to a data class."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/premieres/GetPremiereReminderUseCase.kt:20:5",
        "message": "The class Params defines nofunctionality and only holds data. Consider converting it to a data class."
      }]
    }, {
      "name": "ExpressionBodySyntax",
      "description": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/datasource/SeasonTrackerDataSource.kt:17:66",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/datasource/WatchedShowDataSource.kt:60:67",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/datasource/WatchedShowDataSource.kt:64:47",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/datasource/UserStatsDataSource.kt:13:53",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/datasource/UserStatsDataSource.kt:17:58",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/datasource/UserStatsDataSource.kt:21:63",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/datasource/EpisodeReminderDataSource.kt:13:70",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/datasource/PremiereReminderDataSource.kt:16:76",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/datasource/PremiereReminderDataSource.kt:24:90",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/mapper/reminder/PremiereReminderModelMapper.kt:12:82",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/entity/mapper/reminder/PremiereReminderEntityMapper.kt:12:82",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/executor/JobExecutor.kt:11:44",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/room/Converters.kt:10:56",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/api/ApiService.kt:11:82",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/api/ApiService.kt:15:74",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/api/ApiService.kt:19:68",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/api/ApiService.kt:23:84",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/api/ApiService.kt:27:68",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/api/ApiService.kt:31:104",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/service/api/ApiService.kt:35:106",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/viewmodel/TvShowModelParcelable.kt:104:42",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/viewmodel/TvShowModelParcelable.kt:109:78",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/viewmodel/TvShowModelParcelable.kt:113:73",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:390:36",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:395:42",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:400:40",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:409:29",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/YourLibraryActivity.kt:291:139",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/YourLibraryActivity.kt:295:85",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/adapter/YourLibraryRecyclerAdapter.kt:35:96",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/adapter/PremieresRecyclerAdapter.kt:43:96",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/SeasonTrackerRecyclerAdapter.kt:28:96",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:252:63",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/adapter/SearchSuggestionsRecyclerAdapter.kt:24:96",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/SearchActivity.kt:195:63",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mainfeed/MainFeedPagerAdapter.kt:21:34",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/TimeCalculatorActivity.kt:235:63",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/TimeCalculatorActivity.kt:266:139",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/TimeCalculatorActivity.kt:270:85",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/adapter/TimeCalculatorRecyclerAdapter.kt:24:96",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/animation/pagetransformer/BaseTransformer.kt:43:49",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/animation/pagetransformer/BaseTransformer.kt:52:51",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/base/adapter/TvShowRecyclerAdapter.kt:35:96",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/UIThread.kt:11:44",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/CacheModule.kt:19:43",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/CacheModule.kt:33:58",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/AppModule.kt:21:28",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/AppModule.kt:27:46",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/AppModule.kt:33:73",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/AppModule.kt:39:77",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/AppModule.kt:49:115",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/AppModule.kt:55:99",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/AppModule.kt:61:111",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/AppModule.kt:67:115",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/AppModule.kt:73:105",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/AppModule.kt:79:95",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/AppModule.kt:85:95",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/AppModule.kt:91:123",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/AppModule.kt:97:131",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/AppModule.kt:103:123",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/ApiModule.kt:21:61",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/ApiModule.kt:37:64",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/ApiModule.kt:43:61",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/ActivityModule.kt:16:89",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/DatabaseModule.kt:15:43",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/ViewExtensions.kt:23:75",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/top/TopListUseCase.kt:28:76",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/episodereminder/SyncEpisodeRemindersUseCase.kt:65:76",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/episodereminder/GetEpisodeRemindersUseCase.kt:17:82",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/yourlibrary/GetWatchedTvShowUseCase.kt:36:76",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/premieres/DeletePremiereReminderUseCase.kt:27:55",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/premieres/PremiereDatesUseCase.kt:32:76",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/premieres/AddPremiereReminderUseCase.kt:16:65",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/premieres/AddPremiereReminderUseCase.kt:22:83",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/premieres/GetPremiereReminderUseCase.kt:16:78",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/premieres/GetPremiereReminderUseCase.kt:22:56",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/watchstate/UpdateSeasonWatchStateUseCase.kt:36:87",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/watchstate/mapwatched/MapTvShowsWatchStateUseCase.kt:23:66",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/watchstate/mapwatched/MapTvShowWatchStateUseCase.kt:23:67",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/watchstate/UpdateEpisodeWatchStateUseCase.kt:38:89",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/watchstate/UpdateTvShowWatchStateByIdUseCase.kt:26:79",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/watchstate/UpdateTvShowWatchStateUseCase.kt:28:95",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/mostpopular/MostPopularUseCase.kt:23:76",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/seasontracker/UpdateSeasonTrackerUseCase.kt:16:65",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/seasontracker/UpdateSeasonTrackerUseCase.kt:22:77",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/seasontracker/SeasonTrackerUseCase.kt:17:74",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/search/BasicSearchUseCase.kt:27:52",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/gettvshow/GetTvShowUseCase.kt:24:67",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/gettvshow/GetTvShowExtendedUseCase.kt:34:107",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/userstats/UserRuntimeFlowableUseCase.kt:15:64",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/userstats/UserRuntimeUseCase.kt:16:60",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/base/AbsRxSingleUseCase.kt:25:53",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/base/AbsRxFlowableUseCase.kt:24:55",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/base/AbsRxCompletableUseCase.kt:24:55",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }]
    }, {
      "name": "MandatoryBracesIfStatements",
      "description": "Multi-line if statement was found that does not have braces. These should be added to improve readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/datasource/WatchedShowDataSource.kt:45:21",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/viewmodel/premiere/PremieresViewModel.kt:39:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/viewmodel/premiere/PremieresViewModel.kt:39:9",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/viewmodel/TopListViewModel.kt:39:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/viewmodel/TopListViewModel.kt:39:9",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/viewmodel/seasontracker/SeasonTrackerViewModel.kt:74:33",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/viewmodel/AllSeasonsViewModel.kt:31:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/viewmodel/AllSeasonsViewModel.kt:31:9",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/viewmodel/MostPopularViewModel.kt:32:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/viewmodel/MostPopularViewModel.kt:32:9",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:255:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:301:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:337:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:344:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/TopListFragment.kt:137:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/navigationdrawer/NavigationDrawer.kt:99:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:119:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:119:9",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mainfeed/listener/OnScrollHideBottomNavigationListener.kt:14:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mainfeed/listener/OnScrollHideBottomNavigationListener.kt:20:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/TextViewExtension.kt:41:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/TextViewExtension.kt:41:13",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/TextViewExtension.kt:46:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/TextViewExtension.kt:46:13",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/TextViewExtension.kt:57:5",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/TextViewExtension.kt:57:5",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/TextViewExtension.kt:64:5",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/TextViewExtension.kt:64:5",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/mostpopular/MostPopularPresenter.kt:30:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/seasontracker/SeasonTrackerPresenter.kt:126:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/toplist/TopListPresenter.kt:50:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/search/SearchPresenter.kt:82:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/timecalculator/TimeCalculatorPresenter.kt:94:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }]
    }, {
      "name": "NewLineAtEndOfFile",
      "description": "Checks whether files end with a line separator.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/dataproviders/src/main/kotlin/pl/hypeapp/dataproviders/executor/JobExecutor.kt:14:1",
        "message": "The file JobExecutor.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/base/adapter/InfiniteScrollListener.kt:43:1",
        "message": "The file InfiniteScrollListener.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/UIThread.kt:14:1",
        "message": "The file UIThread.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/base/Presenter.kt:15:1",
        "message": "The file Presenter.kt is not ending with a new line."
      }]
    }, {
      "name": "MagicNumber",
      "description": "Report magic numbers. Magic number is a numeric literal that is not defined as a constant and hence it's unclear what the purpose of this number is. It's better to declare such numbers as constants and give them a proper name. By default, -1, 0, 1, and 2 are not considered to be magic numbers.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/DrawerHamburgerArrow.kt:16:103",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:84:20",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:94:16",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:105:12",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:179:32",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:211:34",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:304:26",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:330:49",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:330:88",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/WatchedShowView.kt:37:41",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/WatchedShowView.kt:84:34",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/WatchedShowView.kt:98:35",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/RuntimeAlerterView.kt:45:12",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/RuntimeAlerterView.kt:50:27",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/RuntimeAlerterView.kt:80:42",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/TitleScrollingBehaviour.kt:21:46",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/TitleScrollingBehaviour.kt:22:46",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/TopListFragment.kt:153:40",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/top/adapter/TopListDelegateAdapter.kt:41:40",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/YourLibraryActivity.kt:154:34",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/YourLibraryActivity.kt:244:78",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/YourLibraryActivity.kt:310:24",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/yourlibrary/YourLibraryActivity.kt:313:83",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/PremieresFragment.kt:102:44",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/PremieresFragment.kt:163:40",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/navigationdrawer/NavigationDrawer.kt:61:42",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mostpopular/adapter/MostPopularDelegateAdapter.kt:37:36",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mostpopular/MostPopularFragment.kt:108:40",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:152:27",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:152:32",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:153:111",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:154:81",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:182:50",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:217:24",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/search/adapter/SearchSuggestionsDelegateAdapter.kt:60:40",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsAppBarBehavior.kt:16:32",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsAppBarBehavior.kt:25:97",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsAppBarBehavior.kt:41:43",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsAppBarBehavior.kt:43:43",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:102:31",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:103:28",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:152:27",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:152:32",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:153:104",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:154:81",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:177:12",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:182:32",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:191:100",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasons/adapter/EpisodeItemHolder.kt:28:32",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasons/adapter/SeasonItemHolder.kt:36:27",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mainfeed/listener/OnScrollHideFabButtonListener.kt:9:18",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mainfeed/listener/OnScrollHideFabButtonListener.kt:11:26",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mainfeed/listener/OnScrollHideBottomNavigationListener.kt:13:18",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mainfeed/listener/OnScrollHideBottomNavigationListener.kt:16:35",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mainfeed/listener/OnScrollHideBottomNavigationListener.kt:19:26",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mainfeed/listener/OnScrollHideBottomNavigationListener.kt:22:35",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mainfeed/ToolbarTitleAnimation.kt:9:50",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/TimeCalculatorActivity.kt:117:81",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/TimeCalculatorActivity.kt:124:40",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/TimeCalculatorActivity.kt:301:24",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/timecalculator/adapter/TimeCalculatorDelegateAdapter.kt:44:32",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/animation/pagetransformer/DepthPageTransformer.kt:15:22",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/ApiModule.kt:30:31",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/ApiModule.kt:31:30",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/TextViewExtension.kt:37:54",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/TextViewExtension.kt:64:18",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/TextViewExtension.kt:71:18",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/TextViewExtension.kt:80:18",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/TextViewExtension.kt:123:82",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/TextViewExtension.kt:123:87",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/TextViewExtension.kt:125:73",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/TextViewExtension.kt:125:78",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/TextViewExtension.kt:127:80",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/job/episodereminder/EpisodeReminderJob.kt:86:58",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/job/episodereminder/EpisodeReminderJob.kt:86:86",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/episodereminder/SyncEpisodeRemindersUseCase.kt:72:52",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/premieres/PremiereDatesUseCase.kt:38:49",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/mostpopular/MostPopularPresenter.kt:13:16",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/seasontracker/SeasonTrackerPresenter.kt:129:31",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/search/SearchPresenter.kt:85:31",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/timecalculator/TimeCalculatorPresenter.kt:78:53",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/presentation/src/main/kotlin/pl/hypeapp/presentation/timecalculator/TimeCalculatorPresenter.kt:97:31",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }]
    }, {
      "name": "CollapsibleIfStatements",
      "description": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:254:9",
        "message": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:265:9",
        "message": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:277:9",
        "message": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:278:13",
        "message": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/base/adapter/InfiniteScrollListener.kt:28:13",
        "message": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/glide/MyGlideApp.kt:16:5",
        "message": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability."
      }]
    }, {
      "name": "UntilInsteadOfRangeTo",
      "description": "'..' call can be replaced with 'until'",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:205:19",
        "message": "'..' call can be replaced with 'until'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/widget/SnappingRecyclerView.kt:307:19",
        "message": "'..' call can be replaced with 'until'"
      }]
    }, {
      "name": "SpacingBetweenPackageAndImports",
      "description": "Violation of the package declaration style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/adapter/DecoratorLineDelegateAdapter.kt:8:67",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of DecoratorLineDelegateAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/premieres/adapter/PremieresDelegateAdapter.kt:15:19",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of PremieresDelegateAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/animation/pagetransformer/BaseTransformer.kt:17:4",
        "message": "There should be exactly one empty line in between the package declaration and the list of imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/glide/MyGlideApp.kt:6:48",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of MyGlideApp."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/seasontracker/DeleteSeasonTrackerUseCase.kt:8:27",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of DeleteSeasonTrackerUseCase."
      }]
    }, {
      "name": "ReturnCount",
      "description": "Restrict the number of return statements in methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mostpopular/MostPopularFragment.kt:131:13",
        "message": "Function getSpanSize has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/glide/MyGlideApp.kt:12:1",
        "message": "Function isValidContextForGlide has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/extensions/MetricsExtension.kt:30:1",
        "message": "Function getNavigationBarSize has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/episodereminder/SyncEpisodeRemindersUseCase.kt:22:5",
        "message": "Function createCompletable has 3 return statements which exceeds the limit of 2."
      }]
    }, {
      "name": "OptionalWhenBraces",
      "description": "Optional braces in when expression",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/EpisodeDelegateAdapter.kt:49:17",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/adapter/EpisodeDelegateAdapter.kt:59:17",
        "message": "Optional braces in when expression"
      }]
    }, {
      "name": "OptionalUnit",
      "description": "Return type of 'Unit' is unnecessary and can be safely removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/seasontracker/SeasonTrackerActivity.kt:194:32",
        "message": "The function hideSearch defines a return type of Unit. This is unnecessary and can safely be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:89:63",
        "message": "The function initPagerAdapter defines a return type of Unit. This is unnecessary and can safely be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:174:56",
        "message": "The function updateWatchState defines a return type of Unit. This is unnecessary and can safely be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/tvshowdetails/TvShowDetailsActivity.kt:180:53",
        "message": "The function subscribeChangeWatchStateButton defines a return type of Unit. This is unnecessary and can safely be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/features/mainfeed/MainFeedActivity.kt:122:37",
        "message": "The function onToolbarHomeButtonClick defines a return type of Unit. This is unnecessary and can safely be removed."
      }]
    }, {
      "name": "FunctionOnlyReturningConstant",
      "description": "A function that only returns a constant is misleading. Consider declaring a constant instead",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/ui/animation/pagetransformer/BaseTransformer.kt:37:5",
        "message": "hideOffscreenPages is returning a constant. Prefer declaring a constant instead."
      }]
    }, {
      "name": "UnusedImports",
      "description": "Unused Imports are dead code and should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/application/src/main/kotlin/pl/hypeapp/episodie/di/module/ActivityModule.kt:6:1",
        "message": "The import 'pl.hypeapp.episodie.R' is unused."
      }]
    }, {
      "name": "DataClassContainsFunctions",
      "description": "Data classes should mainly be used to store data and should not have any extra functions. (Compiler will automatically generate equals, toString and hashCode functions)",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/model/tvshow/TvShowExtendedModel.kt:33:5",
        "message": "The data class TvShowExtendedModel contains functions which are not registered conversion functions. The offending method is called setSeasonWatchStateById"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/model/tvshow/TvShowExtendedModel.kt:38:5",
        "message": "The data class TvShowExtendedModel contains functions which are not registered conversion functions. The offending method is called setEpisodeWatchStateById"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/model/tvshow/TvShowExtendedModel.kt:43:5",
        "message": "The data class TvShowExtendedModel contains functions which are not registered conversion functions. The offending method is called applyProperWatchState"
      }]
    }, {
      "name": "ForbiddenVoid",
      "description": "`Unit` should be used instead of `Void`.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/episodereminder/GetEpisodeRemindersUseCase.kt:14:54",
        "message": "'Void' should be replaced with 'Unit'."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/episodereminder/GetEpisodeRemindersUseCase.kt:17:39",
        "message": "'Void' should be replaced with 'Unit'."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/seasontracker/DeleteSeasonTrackerUseCase.kt:14:31",
        "message": "'Void' should be replaced with 'Unit'."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/seasontracker/DeleteSeasonTrackerUseCase.kt:17:44",
        "message": "'Void' should be replaced with 'Unit'."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/seasontracker/SeasonTrackerUseCase.kt:14:46",
        "message": "'Void' should be replaced with 'Unit'."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/seasontracker/SeasonTrackerUseCase.kt:17:39",
        "message": "'Void' should be replaced with 'Unit'."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/userstats/UserRuntimeFlowableUseCase.kt:13:34",
        "message": "'Void' should be replaced with 'Unit'."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/userstats/UserRuntimeFlowableUseCase.kt:15:41",
        "message": "'Void' should be replaced with 'Unit'."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/userstats/UserStatsUseCase.kt:14:42",
        "message": "'Void' should be replaced with 'Unit'."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/userstats/UserStatsUseCase.kt:17:39",
        "message": "'Void' should be replaced with 'Unit'."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/userstats/UserRuntimeUseCase.kt:13:32",
        "message": "'Void' should be replaced with 'Unit'."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/hypeapps-episodie/domain/src/main/kotlin/pl/hypeapp/domain/usecase/userstats/UserRuntimeUseCase.kt:16:39",
        "message": "'Void' should be replaced with 'Unit'."
      }]
    }]
  }]
}