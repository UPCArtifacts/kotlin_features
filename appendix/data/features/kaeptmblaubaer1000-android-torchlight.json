{
  "complexity_metrics": {
    "loc": 1240,
    "sloc": 916,
    "lloc": 600,
    "cloc": 118,
    "mcc": 183,
    "n_smell": 110,
    "comment_ratio": 12,
    "mcc_per_thlines": 305
  },
  "metrics": {
    "number_of_string": 23,
    "number_of_string_template": 3,
    "number_of_inline_func": 0,
    "number_of_inferred_fun": 0,
    "number_of_inferred_var": 40,
    "number_of_objects_declarations": 10,
    "number_of_companion_objects": 2,
    "number_of_singletons": 7,
    "number_of_declaration": 61,
    "number_of_var_declaration": 61,
    "number_of_func_call": 265,
    "number_of_arguments": 265,
    "number_of_parameters": 103,
    "number_of_qualified_expressions": 368,
    "number_of_inheritances": 14,
    "number_of_unsafe_calls": 34,
    "number_of_safe_calls": 5,
    "number_of_destructuring_declarations": 0,
    "number_of_when_expressions": 2,
    "number_of_functions_with_default_value": 2,
    "number_of_function_call_with_named_value": 0,
    "number_of_named_argument": 0,
    "number_of_argument_with_default_value": 2,
    "number_of_overloaded_op": 1,
    "number_of_extension_function": 0,
    "number_of_properties_delegation": 0,
    "number_of_super_delegation": 0,
    "number_of_ranges": 0,
    "number_of_lambdas": 4,
    "number_of_possible_smart_casts": 3,
    "number_of_data_class": 0,
    "number_of_properties": 62,
    "number_of_functions": 88,
    "number_of_interfaces": 1,
    "number_of_classes": 16,
    "number_of_packages": 3,
    "number_of_kts_files": 4,
    "number_of_kt_files": 17
  },
  "findings": [{
    "group": "complexity",
    "smells": [{
      "name": "LabeledExpression",
      "description": "Expression with labels increase complexity and affect maintainability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/MainActivity.kt:77:17",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/MainActivity.kt:135:33",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/MainActivity.kt:152:33",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/MainActivity.kt:158:72",
        "message": "Expression with labels increase complexity and affect maintainability."
      }]
    }, {
      "name": "TooManyFunctions",
      "description": "Too many functions inside a/an file/class/object/interface always indicate a violation of the single responsibility principle. Maybe the file/class/object/interface wants to manage to many things at once. Extract functionality which clearly belongs together.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/Torchlight.kt:11:1",
        "message": "Class 'Torchlight' with '14' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/AppCompatPreferenceActivity.kt:14:1",
        "message": "Class 'AppCompatPreferenceActivity' with '14' functions detected. Defined threshold inside classes is set to '11'"
      }]
    }, {
      "name": "ComplexMethod",
      "description": "Prefer splitting up complex methods into smaller, easier to understand methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/TorchlightWidgetCommon.kt:19:5",
        "message": "The function updateOne appears to be too complex."
      }]
    }]
  }, {
    "group": "exceptions",
    "smells": [{
      "name": "TooGenericExceptionThrown",
      "description": "Thrown exception is too generic. Prefer throwing project specific exceptions to handle error cases.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/MainActivity.kt:83:17",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/MainActivity.kt:109:13",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/Common.kt:43:13",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/Common.kt:79:17",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/ToggleReceiver.kt:20:13",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/AutoFlashActivity.kt:21:13",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/AutoFlashActivity.kt:32:13",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/AutoFlashActivity.kt:43:13",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/AutoFlashActivity.kt:54:13",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/TorchlightWidgetCommon.kt:29:13",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }]
    }, {
      "name": "TooGenericExceptionCaught",
      "description": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightOld.kt:18:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightOld.kt:32:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightOld.kt:49:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightMarshmallow.kt:34:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }]
    }, {
      "name": "PrintStackTrace",
      "description": "Do not print an stack trace. These debug statements should be replaced with a logger or removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/Common.kt:40:13",
        "message": "Do not print an stack trace. These debug statements should be replaced with a logger or removed."
      }]
    }]
  }, {
    "group": "naming",
    "smells": [{
      "name": "FunctionNaming",
      "description": "Function names should follow the naming convention set in the configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightOld.kt:25:5",
        "message": "Function names should match the pattern: ^([a-z$][a-zA-Z$0-9]*)|(`.*`)$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightOld.kt:38:5",
        "message": "Function names should match the pattern: ^([a-z$][a-zA-Z$0-9]*)|(`.*`)$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/Torchlight.kt:21:5",
        "message": "Function names should match the pattern: ^([a-z$][a-zA-Z$0-9]*)|(`.*`)$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/Torchlight.kt:52:5",
        "message": "Function names should match the pattern: ^([a-z$][a-zA-Z$0-9]*)|(`.*`)$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightFallback.kt:16:5",
        "message": "Function names should match the pattern: ^([a-z$][a-zA-Z$0-9]*)|(`.*`)$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightFallback.kt:18:5",
        "message": "Function names should match the pattern: ^([a-z$][a-zA-Z$0-9]*)|(`.*`)$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightMarshmallow.kt:43:5",
        "message": "Function names should match the pattern: ^([a-z$][a-zA-Z$0-9]*)|(`.*`)$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightMarshmallow.kt:45:5",
        "message": "Function names should match the pattern: ^([a-z$][a-zA-Z$0-9]*)|(`.*`)$"
      }]
    }, {
      "name": "FunctionMaxLength",
      "description": "Function names should not be longer than the maximum set in the project configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/Torchlight.kt:117:5",
        "message": "Function names should be at most 30 characters long."
      }]
    }, {
      "name": "ClassNaming",
      "description": "A classes name should fit the naming pattern defined in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/buildSrc/src/main/java/Deps.kt:2:5",
        "message": "Class and Object names should match the pattern: [A-Z$][a-zA-Z0-9$]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/buildSrc/src/main/java/Deps.kt:11:5",
        "message": "Class and Object names should match the pattern: [A-Z$][a-zA-Z0-9$]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/buildSrc/src/main/java/Deps.kt:16:5",
        "message": "Class and Object names should match the pattern: [A-Z$][a-zA-Z0-9$]*"
      }]
    }]
  }, {
    "group": "potential-bugs",
    "smells": [{
      "name": "UnsafeCallOnNullableType",
      "description": "It will throw a NullPointerException at runtime if your nullable value is null.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/MainActivity.kt:36:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/MainActivity.kt:75:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/MainActivity.kt:80:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/MainActivity.kt:80:35",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/MainActivity.kt:92:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/MainActivity.kt:102:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/MainActivity.kt:103:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/MainActivity.kt:105:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/MainActivity.kt:115:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/MainActivity.kt:116:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/MainActivity.kt:171:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightOld.kt:17:29",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightOld.kt:28:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightOld.kt:43:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightOld.kt:45:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightOld.kt:48:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightOld.kt:54:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightOld.kt:59:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightOld.kt:61:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightControl.kt:26:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightControl.kt:27:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightControl.kt:27:28",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightControl.kt:29:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightControl.kt:33:16",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightMarshmallow.kt:26:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightMarshmallow.kt:52:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightMarshmallow.kt:52:43",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/AppCompatPreferenceActivity.kt:30:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/SettingsActivity.kt:156:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/TorchlightService.kt:14:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/TorchlightService.kt:17:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/AutoFlashActivity.kt:29:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/AutoFlashActivity.kt:40:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/AutoFlashActivity.kt:51:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }]
    }, {
      "name": "UnsafeCast",
      "description": "Cast operator throws an exception if the cast is not possible.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/MainActivity.kt:69:14",
        "message": "this.findViewById<View>(R.id.perm_info_text) cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightMarshmallow.kt:22:26",
        "message": "context.getSystemService(Context.CAMERA_SERVICE) cannot be safely cast to CameraManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/Common.kt:47:16",
        "message": "serviceConnection.service cannot be safely cast to T."
      }]
    }, {
      "name": "LateinitUsage",
      "description": "Usage of lateinit detected. Using lateinit for property initialization is error prone, try using constructor injection or delegation.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/Torchlight.kt:13:5",
        "message": "Usages of latinit should be avoided."
      }]
    }]
  }, {
    "group": "style",
    "smells": [{
      "name": "MagicNumber",
      "description": "Report magic numbers. Magic number is a numeric literal that is not defined as a constant and hence it's unclear what the purpose of this number is. It's better to declare such numbers as constants and give them a proper name. By default, -1, 0, 1, and 2 are not considered to be magic numbers.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/build.gradle.kts:13:23",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/build.gradle.kts:15:23",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightControl.kt:21:34",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }]
    }, {
      "name": "MaxLineLength",
      "description": "Line detected that is longer than the defined maximum line length in the code style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/MainActivity.kt:28:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/MainActivity.kt:67:150",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/Torchlight.kt:68:145",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightFallback.kt:45:17",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/Common.kt:30:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/Common.kt:36:173",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/Common.kt:62:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/SettingsActivity.kt:22:129",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/SettingsActivity.kt:23:124",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/SettingsActivity.kt:71:133",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/SettingsActivity.kt:137:147",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/ToggleReceiver.kt:23:195",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/TorchlightWidgetCommon.kt:35:138",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/TorchlightWidgetCommon.kt:36:144",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/TorchlightWidgetCommon.kt:37:124",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/TorchlightWidgetCommon.kt:38:145",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/TorchlightWidgetCommon.kt:39:144",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }]
    }, {
      "name": "ForbiddenComment",
      "description": "Flags a forbidden comment. Defaults values are TODO:, FIXME: or STOPSHIP:",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/Torchlight.kt:68:13",
        "message": "This comment contains text that has been defined as forbidden in detekt."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/Common.kt:30:5",
        "message": "This comment contains text that has been defined as forbidden in detekt."
      }]
    }, {
      "name": "ExpressionBodySyntax",
      "description": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/Torchlight.kt:57:33",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/Torchlight.kt:92:38",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightControl.kt:41:29",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightControl.kt:45:46",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/Common.kt:50:63",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/AppCompatPreferenceActivity.kt:48:50",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/SettingsActivity.kt:54:43",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/SettingsActivity.kt:70:65",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/SettingsActivity.kt:136:63",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/TorchlightService.kt:20:51",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }]
    }, {
      "name": "NewLineAtEndOfFile",
      "description": "Checks whether files end with a line separator.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/core/TorchlightFallback.kt:70:1",
        "message": "The file TorchlightFallback.kt is not ending with a new line."
      }]
    }, {
      "name": "WildcardImport",
      "description": "Wildcard imports should be replaced with imports using fully qualified class names. Wildcard imports can lead to naming conflicts. A library update can introduce naming clashes with your classes which results in compilation errors.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/SettingsActivity.kt:10:1",
        "message": "android.preference.* is a wildcard import. Replace it with fully qualified imports."
      }]
    }, {
      "name": "SpacingBetweenPackageAndImports",
      "description": "Violation of the package declaration style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/SettingsActivity.kt:1:36",
        "message": "There should be exactly one empty line in between the package declaration and the list of imports."
      }]
    }, {
      "name": "MandatoryBracesIfStatements",
      "description": "Multi-line if statement was found that does not have braces. These should be added to improve readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/SettingsActivity.kt:118:29",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/SettingsActivity.kt:118:29",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }]
    }, {
      "name": "UnusedPrivateMember",
      "description": "Private member is unused.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/kaeptmblaubaer1000-android-torchlight/app/src/main/java/com/fake/android/torchlight/AutoFlashActivity.kt:64:16",
        "message": "Function parameter view is unused."
      }]
    }]
  }]
}