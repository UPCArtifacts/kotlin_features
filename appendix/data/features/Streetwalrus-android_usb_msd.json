{
  "complexity_metrics": {
    "loc": 344,
    "sloc": 278,
    "lloc": 188,
    "cloc": 10,
    "mcc": 44,
    "n_smell": 44,
    "comment_ratio": 3,
    "mcc_per_thlines": 234
  },
  "metrics": {
    "number_of_string": 47,
    "number_of_string_template": 16,
    "number_of_inline_func": 0,
    "number_of_inferred_fun": 0,
    "number_of_inferred_var": 31,
    "number_of_objects_declarations": 0,
    "number_of_companion_objects": 0,
    "number_of_singletons": 0,
    "number_of_declaration": 41,
    "number_of_var_declaration": 41,
    "number_of_func_call": 89,
    "number_of_arguments": 132,
    "number_of_parameters": 48,
    "number_of_qualified_expressions": 161,
    "number_of_inheritances": 6,
    "number_of_unsafe_calls": 10,
    "number_of_safe_calls": 2,
    "number_of_destructuring_declarations": 0,
    "number_of_when_expressions": 1,
    "number_of_functions_with_default_value": 0,
    "number_of_function_call_with_named_value": 0,
    "number_of_named_argument": 0,
    "number_of_argument_with_default_value": 0,
    "number_of_overloaded_op": 0,
    "number_of_extension_function": 0,
    "number_of_properties_delegation": 0,
    "number_of_super_delegation": 0,
    "number_of_ranges": 0,
    "number_of_lambdas": 1,
    "number_of_possible_smart_casts": 0,
    "number_of_data_class": 0,
    "number_of_properties": 41,
    "number_of_functions": 23,
    "number_of_interfaces": 1,
    "number_of_classes": 9,
    "number_of_packages": 1,
    "number_of_kts_files": 0,
    "number_of_kt_files": 6
  },
  "findings": [{
    "group": "complexity",
    "smells": [{
      "name": "LabeledExpression",
      "description": "Expression with labels increase complexity and affect maintainability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/LicenseActivity.kt:53:29",
        "message": "Expression with labels increase complexity and affect maintainability."
      }]
    }]
  }, {
    "group": "naming",
    "smells": [{
      "name": "VariableNaming",
      "description": "Variable names should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/MainActivity.kt:14:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/FilePickerPreference.kt:15:5",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/HostPreferenceFragment.kt:7:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/HostPreferenceFragment.kt:9:5",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/HostPreferenceFragment.kt:10:5",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/LicenseActivity.kt:20:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/ActivityResultDispatcher.kt:7:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }]
    }]
  }, {
    "group": "potential-bugs",
    "smells": [{
      "name": "UnsafeCallOnNullableType",
      "description": "It will throw a NullPointerException at runtime if your nullable value is null.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/MainActivity.kt:52:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/MainActivity.kt:53:36",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/MainActivity.kt:56:22",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/MainActivity.kt:57:29",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/LicenseActivity.kt:44:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/LicenseActivity.kt:76:22",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/LicenseActivity.kt:77:18",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/LicenseActivity.kt:78:18",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/LicenseActivity.kt:79:31",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/LicenseActivity.kt:84:18",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }]
    }, {
      "name": "UnsafeCast",
      "description": "Cast operator throws an exception if the cast is not possible.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/MainActivity.kt:22:18",
        "message": "fragmentManager.findFragmentById(R.id.prefs) cannot be safely cast to HostPreferenceFragment."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/MainActivity.kt:43:26",
        "message": "applicationContext cannot be safely cast to UsbMountrApplication."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/FilePickerPreference.kt:27:26",
        "message": "context.applicationContext cannot be safely cast to UsbMountrApplication."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/FilePickerPreference.kt:38:26",
        "message": "context.applicationContext cannot be safely cast to UsbMountrApplication."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/FilePickerPreference.kt:48:24",
        "message": "context cannot be safely cast to Activity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/LicenseActivity.kt:50:20",
        "message": "l.adapter cannot be safely cast to LicenseArrayAdapter."
      }]
    }, {
      "name": "UselessPostfixExpression",
      "description": "The incremented or decremented value is unused. This value is replaced with the original value.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/ActivityResultDispatcher.kt:26:16",
        "message": "The result of the postfix expression: mCurId++ will not be used and is therefore useless."
      }]
    }]
  }, {
    "group": "style",
    "smells": [{
      "name": "ReturnCount",
      "description": "Restrict the number of return statements in methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/MainActivity.kt:68:9",
        "message": "Function doInBackground has 3 return statements which exceeds the limit of 2."
      }]
    }, {
      "name": "MaxLineLength",
      "description": "Line detected that is longer than the defined maximum line length in the code style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/MainActivity.kt:77:137",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }]
    }, {
      "name": "UnusedPrivateMember",
      "description": "Private member is unused.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/MainActivity.kt:14:5",
        "message": "Private property TAG is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/MainActivity.kt:63:26",
        "message": "Function parameter v is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/HostPreferenceFragment.kt:7:5",
        "message": "Private property TAG is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/LicenseActivity.kt:20:5",
        "message": "Private property TAG is unused."
      }]
    }, {
      "name": "ForbiddenVoid",
      "description": "`Unit` should be used instead of `Void`.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/MainActivity.kt:67:47",
        "message": "'Void' should be replaced with 'Unit'."
      }]
    }, {
      "name": "NewLineAtEndOfFile",
      "description": "Checks whether files end with a line separator.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/FilePickerPreference.kt:77:1",
        "message": "The file FilePickerPreference.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/UsbMountrApplication.kt:12:1",
        "message": "The file UsbMountrApplication.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/HostPreferenceFragment.kt:16:1",
        "message": "The file HostPreferenceFragment.kt is not ending with a new line."
      }]
    }, {
      "name": "UnnecessaryParentheses",
      "description": "Unnecessary parentheses don't add any value to the code and should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/LicenseActivity.kt:76:21",
        "message": "Parentheses in (view!!.findViewById<View>(android.R.id.icon_frame)) are unnecessary and can be replaced with: view!!.findViewById<View>(android.R.id.icon_frame)"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/LicenseActivity.kt:77:17",
        "message": "Parentheses in (view!!.findViewById<ImageView>(android.R.id.icon)) are unnecessary and can be replaced with: view!!.findViewById<ImageView>(android.R.id.icon)"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/LicenseActivity.kt:78:17",
        "message": "Parentheses in (view!!.findViewById<TextView>(android.R.id.title)) are unnecessary and can be replaced with: view!!.findViewById<TextView>(android.R.id.title)"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/LicenseActivity.kt:84:17",
        "message": "Parentheses in (view!!.findViewById<ViewGroup>(android.R.id.widget_frame)) are unnecessary and can be replaced with: view!!.findViewById<ViewGroup>(android.R.id.widget_frame)"
      }]
    }, {
      "name": "MagicNumber",
      "description": "Report magic numbers. Magic number is a numeric literal that is not defined as a constant and hence it's unclear what the purpose of this number is. It's better to declare such numbers as constants and give them a proper name. By default, -1, 0, 1, and 2 are not considered to be magic numbers.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/LicenseActivity.kt:75:57",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }]
    }, {
      "name": "ExpressionBodySyntax",
      "description": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/LicenseActivity.kt:92:91",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }]
    }, {
      "name": "MandatoryBracesIfStatements",
      "description": "Multi-line if statement was found that does not have braces. These should be added to improve readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/LicenseActivity.kt:75:17",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/LicenseActivity.kt:80:17",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/Streetwalrus-android_usb_msd/app/src/main/java/streetwalrus/usbmountr/LicenseActivity.kt:80:17",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }]
    }]
  }]
}