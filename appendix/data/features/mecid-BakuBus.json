{
  "complexity_metrics": {
    "loc": 361,
    "sloc": 293,
    "lloc": 198,
    "cloc": 10,
    "mcc": 41,
    "n_smell": 30,
    "comment_ratio": 3,
    "mcc_per_thlines": 207
  },
  "metrics": {
    "number_of_string": 59,
    "number_of_string_template": 0,
    "number_of_inline_func": 0,
    "number_of_inferred_fun": 0,
    "number_of_inferred_var": 35,
    "number_of_objects_declarations": 1,
    "number_of_companion_objects": 0,
    "number_of_singletons": 1,
    "number_of_declaration": 43,
    "number_of_var_declaration": 43,
    "number_of_func_call": 200,
    "number_of_arguments": 173,
    "number_of_parameters": 41,
    "number_of_qualified_expressions": 222,
    "number_of_inheritances": 4,
    "number_of_unsafe_calls": 2,
    "number_of_safe_calls": 20,
    "number_of_destructuring_declarations": 0,
    "number_of_when_expressions": 0,
    "number_of_functions_with_default_value": 0,
    "number_of_function_call_with_named_value": 0,
    "number_of_named_argument": 0,
    "number_of_argument_with_default_value": 0,
    "number_of_overloaded_op": 0,
    "number_of_extension_function": 0,
    "number_of_properties_delegation": 2,
    "number_of_super_delegation": 0,
    "number_of_ranges": 2,
    "number_of_lambdas": 27,
    "number_of_possible_smart_casts": 0,
    "number_of_data_class": 0,
    "number_of_properties": 43,
    "number_of_functions": 17,
    "number_of_interfaces": 0,
    "number_of_classes": 5,
    "number_of_packages": 1,
    "number_of_kts_files": 0,
    "number_of_kt_files": 3
  },
  "findings": [{
    "group": "complexity",
    "smells": [{
      "name": "StringLiteralDuplication",
      "description": "Multiple occurrences of the same string literal within a single file detected.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/MainActivity.kt:89:56",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }]
    }, {
      "name": "TooManyFunctions",
      "description": "Too many functions inside a/an file/class/object/interface always indicate a violation of the single responsibility principle. Maybe the file/class/object/interface wants to manage to many things at once. Extract functionality which clearly belongs together.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/MainActivity.kt:32:1",
        "message": "Class 'MainActivity' with '11' functions detected. Defined threshold inside classes is set to '11'"
      }]
    }, {
      "name": "LabeledExpression",
      "description": "Expression with labels increase complexity and affect maintainability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/MainActivity.kt:46:46",
        "message": "Expression with labels increase complexity and affect maintainability."
      }]
    }]
  }, {
    "group": "exceptions",
    "smells": [{
      "name": "TooGenericExceptionCaught",
      "description": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/DataManager.kt:39:21",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/DataManager.kt:66:21",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }]
    }]
  }, {
    "group": "naming",
    "smells": [{
      "name": "VariableNaming",
      "description": "Variable names should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/MainActivity.kt:36:5",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }]
    }]
  }, {
    "group": "performance",
    "smells": [{
      "name": "SpreadOperator",
      "description": "Using a spread operator causes a full copy of the array to be created before calling a method has a very high performance penalty.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/DataManager.kt:83:52",
        "message": "Using a spread operator causes a full copy of the array to be created before calling a method has a very high performance penalty."
      }]
    }]
  }, {
    "group": "potential-bugs",
    "smells": [{
      "name": "UnsafeCallOnNullableType",
      "description": "It will throw a NullPointerException at runtime if your nullable value is null.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/MainActivity.kt:127:35",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/MainActivity.kt:134:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }]
    }, {
      "name": "UnsafeCast",
      "description": "Cast operator throws an exception if the cast is not possible.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/MainActivity.kt:57:17",
        "message": "supportFragmentManager.findFragmentById(R.id.map) cannot be safely cast to SupportMapFragment."
      }]
    }]
  }, {
    "group": "style",
    "smells": [{
      "name": "NewLineAtEndOfFile",
      "description": "Checks whether files end with a line separator.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/BakuBusApplication.kt:16:1",
        "message": "The file BakuBusApplication.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/MainActivity.kt:223:1",
        "message": "The file MainActivity.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/DataManager.kt:122:1",
        "message": "The file DataManager.kt is not ending with a new line."
      }]
    }, {
      "name": "MandatoryBracesIfStatements",
      "description": "Multi-line if statement was found that does not have braces. These should be added to improve readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/BakuBusApplication.kt:13:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }]
    }, {
      "name": "WildcardImport",
      "description": "Wildcard imports should be replaced with imports using fully qualified class names. Wildcard imports can lead to naming conflicts. A library update can introduce naming clashes with your classes which results in compilation errors.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/MainActivity.kt:24:1",
        "message": "com.google.android.gms.maps.model.* is a wildcard import. Replace it with fully qualified imports."
      }]
    }, {
      "name": "MaxLineLength",
      "description": "Line detected that is longer than the defined maximum line length in the code style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/MainActivity.kt:127:125",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/MainActivity.kt:155:122",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/DataManager.kt:25:147",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/DataManager.kt:46:17",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/DataManager.kt:95:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }]
    }, {
      "name": "MagicNumber",
      "description": "Report magic numbers. Magic number is a numeric literal that is not defined as a constant and hence it's unclear what the purpose of this number is. It's better to declare such numbers as constants and give them a proper name. By default, -1, 0, 1, and 2 are not considered to be magic numbers.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/MainActivity.kt:36:36",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/MainActivity.kt:65:59",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/MainActivity.kt:95:59",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/MainActivity.kt:104:54",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/MainActivity.kt:157:91",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }]
    }, {
      "name": "UseDataClass",
      "description": "Classes that do nothing but hold data should be replaced with a data class.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/DataManager.kt:95:1",
        "message": "The class Bus defines nofunctionality and only holds data. Consider converting it to a data class."
      }]
    }, {
      "name": "UntilInsteadOfRangeTo",
      "description": "'..' call can be replaced with 'until'",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/DataManager.kt:46:31",
        "message": "'..' call can be replaced with 'until'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/DataManager.kt:75:31",
        "message": "'..' call can be replaced with 'until'"
      }]
    }, {
      "name": "MayBeConst",
      "description": "Reports vals that can be const val instead.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/DataManager.kt:21:5",
        "message": "BAKU_BUS_API_PATH can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/mecid-BakuBus/app/src/main/kotlin/com/aaplab/bakubus/DataManager.kt:22:5",
        "message": "BAKU_BUS_API_POSITION can be a `const val`."
      }]
    }]
  }]
}