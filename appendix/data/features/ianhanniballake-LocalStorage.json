{
  "complexity_metrics": {
    "loc": 738,
    "sloc": 624,
    "lloc": 436,
    "cloc": 61,
    "mcc": 107,
    "n_smell": 28,
    "comment_ratio": 9,
    "mcc_per_thlines": 245
  },
  "metrics": {
    "number_of_string": 35,
    "number_of_string_template": 6,
    "number_of_inline_func": 0,
    "number_of_inferred_fun": 1,
    "number_of_inferred_var": 66,
    "number_of_objects_declarations": 2,
    "number_of_companion_objects": 2,
    "number_of_singletons": 0,
    "number_of_declaration": 82,
    "number_of_var_declaration": 82,
    "number_of_func_call": 249,
    "number_of_arguments": 289,
    "number_of_parameters": 70,
    "number_of_qualified_expressions": 404,
    "number_of_inheritances": 5,
    "number_of_unsafe_calls": 0,
    "number_of_safe_calls": 7,
    "number_of_destructuring_declarations": 0,
    "number_of_when_expressions": 3,
    "number_of_functions_with_default_value": 0,
    "number_of_function_call_with_named_value": 1,
    "number_of_named_argument": 2,
    "number_of_argument_with_default_value": 0,
    "number_of_overloaded_op": 0,
    "number_of_extension_function": 0,
    "number_of_properties_delegation": 1,
    "number_of_super_delegation": 0,
    "number_of_ranges": 0,
    "number_of_lambdas": 28,
    "number_of_possible_smart_casts": 1,
    "number_of_data_class": 0,
    "number_of_properties": 82,
    "number_of_functions": 31,
    "number_of_interfaces": 0,
    "number_of_classes": 5,
    "number_of_packages": 1,
    "number_of_kts_files": 0,
    "number_of_kt_files": 4
  },
  "findings": [{
    "group": "complexity",
    "smells": [{
      "name": "LongMethod",
      "description": "One method should have one responsibility. Long methods tend to handle many things at once. Prefer smaller methods to make them easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/MainActivity.kt:46:5",
        "message": "The function onCreate is too long. The maximum length is 20."
      }]
    }, {
      "name": "ComplexMethod",
      "description": "Prefer splitting up complex methods into smaller, easier to understand methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/MainActivity.kt:46:5",
        "message": "The function onCreate appears to be too complex."
      }]
    }, {
      "name": "LabeledExpression",
      "description": "Expression with labels increase complexity and affect maintainability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/MainActivity.kt:52:69",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/MainActivity.kt:54:51",
        "message": "Expression with labels increase complexity and affect maintainability."
      }]
    }, {
      "name": "TooManyFunctions",
      "description": "Too many functions inside a/an file/class/object/interface always indicate a violation of the single responsibility principle. Maybe the file/class/object/interface wants to manage to many things at once. Extract functionality which clearly belongs together.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/LocalStorageProvider.kt:30:1",
        "message": "Class 'LocalStorageProvider' with '12' functions detected. Defined threshold inside classes is set to '11'"
      }]
    }]
  }, {
    "group": "naming",
    "smells": [{
      "name": "ObjectPropertyNaming",
      "description": "Property names inside objects should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/LocalStorageProvider.kt:34:9",
        "message": "Private object property names should match the pattern: (_)?[A-Za-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/LocalStorageProvider.kt:45:9",
        "message": "Private object property names should match the pattern: (_)?[A-Za-z][A-Za-z0-9]*"
      }]
    }]
  }, {
    "group": "potential-bugs",
    "smells": [{
      "name": "LateinitUsage",
      "description": "Usage of lateinit detected. Using lateinit for property initialization is error prone, try using constructor injection or delegation.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/DonateDialogFragment.kt:95:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/MainActivity.kt:36:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/MainActivity.kt:37:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/MainActivity.kt:38:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/MainActivity.kt:39:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/MainActivity.kt:40:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/MainActivity.kt:41:5",
        "message": "Usages of latinit should be avoided."
      }]
    }]
  }, {
    "group": "style",
    "smells": [{
      "name": "NewLineAtEndOfFile",
      "description": "Checks whether files end with a line separator.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/DonateDialogFragment.kt:136:1",
        "message": "The file DonateDialogFragment.kt is not ending with a new line."
      }]
    }, {
      "name": "ReturnCount",
      "description": "Restrict the number of return statements in methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/LocalStorageProvider.kt:56:9",
        "message": "Function isMissingPermission has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/LocalStorageProvider.kt:78:5",
        "message": "Function queryRoots has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/LocalStorageProvider.kt:122:5",
        "message": "Function createDocument has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/LocalStorageProvider.kt:144:5",
        "message": "Function openDocumentThumbnail has 4 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/LocalStorageProvider.kt:255:5",
        "message": "Function getDocumentType has 4 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/LocalStorageProvider.kt:284:5",
        "message": "Function renameDocument has 3 return statements which exceeds the limit of 2."
      }]
    }, {
      "name": "MagicNumber",
      "description": "Report magic numbers. Magic number is a numeric literal that is not defined as a constant and hence it's unclear what the purpose of this number is. It's better to declare such numbers as constants and give them a proper name. By default, -1, 0, 1, and 2 are not considered to be magic numbers.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/LocalStorageProvider.kt:179:60",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }]
    }, {
      "name": "ExpressionBodySyntax",
      "description": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/LocalStorageProvider.kt:191:89",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/LocalStorageProvider.kt:322:38",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }]
    }, {
      "name": "MandatoryBracesIfStatements",
      "description": "Multi-line if statement was found that does not have braces. These should be added to improve readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/LocalStorageProvider.kt:234:21",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/LocalStorageProvider.kt:234:21",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/LocalStorageProvider.kt:243:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/ianhanniballake-LocalStorage/mobile/src/main/java/com/ianhanniballake/localstorage/LocalStorageProvider.kt:260:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }]
    }]
  }]
}