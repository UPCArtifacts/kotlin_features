{
  "complexity_metrics": {
    "loc": 1851,
    "sloc": 1236,
    "lloc": 862,
    "cloc": 340,
    "mcc": 248,
    "n_smell": 142,
    "comment_ratio": 27,
    "mcc_per_thlines": 287
  },
  "metrics": {
    "number_of_type_alias": 0,
    "number_of_tailrec_func": 0,
    "number_of_infix_func": 0,
    "number_of_sealed_class": 0,
    "number_of_coroutines": 0,
    "number_of_contract": 0,
    "number_of_inline_klass": 0,
    "number_of_string": 12,
    "number_of_string_template": 3,
    "number_of_inline_func": 0,
    "number_of_inferred_fun": 0,
    "number_of_inferred_var": 118,
    "number_of_objects_declarations": 11,
    "number_of_companion_objects": 10,
    "number_of_singletons": 0,
    "number_of_declaration": 177,
    "number_of_var_declaration": 177,
    "number_of_func_call": 358,
    "number_of_arguments": 400,
    "number_of_parameters": 226,
    "number_of_qualified_expressions": 466,
    "number_of_inheritances": 9,
    "number_of_unsafe_calls": 17,
    "number_of_safe_calls": 27,
    "number_of_destructuring_declarations": 0,
    "number_of_when_expressions": 1,
    "number_of_functions_with_default_value": 5,
    "number_of_function_call_with_named_value": 0,
    "number_of_named_argument": 0,
    "number_of_argument_with_default_value": 6,
    "number_of_overloaded_op": 1,
    "number_of_extension_function": 0,
    "number_of_properties_delegation": 1,
    "number_of_super_delegation": 0,
    "number_of_ranges": 5,
    "number_of_lambdas": 14,
    "number_of_possible_smart_casts": 1,
    "number_of_data_class": 0,
    "number_of_constructors": 15,
    "number_of_properties": 177,
    "number_of_functions": 153,
    "number_of_interfaces": 3,
    "number_of_classes": 15,
    "number_of_packages": 3,
    "number_of_kts_files": 0,
    "number_of_kt_files": 13
  },
  "file_metrics": {
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFields.kt": {
      "sloc": 14,
      "number_of_properties": 0,
      "number_of_functions": 8,
      "complexity": 8,
      "class": "com.github.fields.electric.ElectricFields"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/MainActivity.kt": {
      "sloc": 198,
      "number_of_properties": 5,
      "number_of_functions": 21,
      "complexity": 45,
      "class": "com.github.fields.electric.MainActivity"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/SaveFileTask.kt": {
      "sloc": 88,
      "number_of_properties": 1,
      "number_of_functions": 6,
      "complexity": 15,
      "class": "com.github.fields.electric.SaveFileTask"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/PaletteDialog.kt": {
      "sloc": 45,
      "number_of_properties": 3,
      "number_of_functions": 1,
      "complexity": 1,
      "class": "com.github.fields.electric.PaletteDialog"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/FieldsTask.kt": {
      "sloc": 180,
      "number_of_properties": 4,
      "number_of_functions": 10,
      "complexity": 28,
      "class": "com.github.fields.electric.FieldsTask"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt": {
      "sloc": 183,
      "number_of_properties": 10,
      "number_of_functions": 26,
      "complexity": 38,
      "class": "com.github.fields.electric.wallpaper.WallpaperView"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperListener.kt": {
      "sloc": 5,
      "number_of_properties": 0,
      "number_of_functions": 1,
      "complexity": 1,
      "class": "com.github.fields.electric.wallpaper.WallpaperListener"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/ElectricFieldsWallpaperService.kt": {
      "sloc": 115,
      "number_of_properties": 0,
      "number_of_functions": 20,
      "complexity": 35,
      "class": "com.github.fields.electric.wallpaper.ElectricFieldsWallpaperService"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsListener.kt": {
      "sloc": 12,
      "number_of_properties": 0,
      "number_of_functions": 9,
      "complexity": 9,
      "class": "com.github.fields.electric.ElectricFieldsListener"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt": {
      "sloc": 261,
      "number_of_properties": 14,
      "number_of_functions": 35,
      "complexity": 48,
      "class": "com.github.fields.electric.ElectricFieldsView"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/SaveFileObserver.kt": {
      "sloc": 91,
      "number_of_properties": 3,
      "number_of_functions": 8,
      "complexity": 11,
      "class": "com.github.fields.electric.SaveFileObserver"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/Charge.kt": {
      "sloc": 29,
      "number_of_properties": 0,
      "number_of_functions": 5,
      "complexity": 5,
      "class": "com.github.fields.electric.Charge"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/reactivex/DefaultDisposable.kt": {
      "sloc": 15,
      "number_of_properties": 1,
      "number_of_functions": 3,
      "complexity": 4,
      "class": "com.github.reactivex.DefaultDisposable"
    }
  },
  "findings": [{
    "group": "complexity",
    "smells": [{
      "name": "TooManyFunctions",
      "description": "Too many functions inside a/an file/class/object/interface always indicate a violation of the single responsibility principle. Maybe the file/class/object/interface wants to manage to many things at once. Extract functionality which clearly belongs together.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/MainActivity.kt:35:1",
        "message": "Class 'MainActivity' with '21' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:34:1",
        "message": "Class 'WallpaperView' with '26' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/ElectricFieldsWallpaperService.kt:40:5",
        "message": "Class 'ElectricFieldsWallpaperEngine' with '19' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:37:1",
        "message": "Class 'ElectricFieldsView' with '31' functions detected. Defined threshold inside classes is set to '11'"
      }]
    }, {
      "name": "LabeledExpression",
      "description": "Expression with labels increase complexity and affect maintainability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/MainActivity.kt:126:38",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/FieldsTask.kt:152:25",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/FieldsTask.kt:134:13",
        "message": "Expression with labels increase complexity and affect maintainability."
      }]
    }, {
      "name": "ComplexMethod",
      "description": "Prefer splitting up complex methods into smaller, easier to understand methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/SaveFileTask.kt:68:9",
        "message": "The function run appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/FieldsTask.kt:97:9",
        "message": "The function run appears to be too complex."
      }]
    }, {
      "name": "LongParameterList",
      "description": "The more parameters a method has the more complex it is. Long parameter lists are often used to control complex algorithms and violate the Single Responsibility Principle. Prefer methods with short parameter lists.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/FieldsTask.kt:171:25",
        "message": "The function plot has too many parameters. The current threshold is set to 6."
      }]
    }, {
      "name": "LongMethod",
      "description": "One method should have one responsibility. Long methods tend to handle many things at once. Prefer smaller methods to make them easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/FieldsTask.kt:97:9",
        "message": "The function run is too long. The maximum length is 20."
      }]
    }, {
      "name": "NestedBlockDepth",
      "description": "Excessive nesting leads to hidden complexity. Prefer extracting code to make it easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/ElectricFieldsWallpaperService.kt:143:9",
        "message": "Function draw is nested too deeply."
      }]
    }, {
      "name": "LargeClass",
      "description": "One class should have one responsibility. Large classes tend to handle many things at once. Split up large classes into smaller classes that are easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:37:1",
        "message": "Class ElectricFieldsView is too large. Consider splitting it into smaller pieces."
      }]
    }]
  }, {
    "group": "exceptions",
    "smells": [{
      "name": "TooGenericExceptionCaught",
      "description": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/SaveFileTask.kt:82:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/ElectricFieldsWallpaperService.kt:158:26",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }]
    }, {
      "name": "PrintStackTrace",
      "description": "Do not print an stack trace. These debug statements should be replaced with a logger or removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/ElectricFieldsWallpaperService.kt:159:21",
        "message": "Do not print an stack trace. These debug statements should be replaced with a logger or removed."
      }]
    }]
  }, {
    "group": "naming",
    "smells": [{
      "name": "VariableNaming",
      "description": "Variable names should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/SaveFileTask.kt:61:9",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/SaveFileTask.kt:63:9",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/SaveFileTask.kt:64:9",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }]
    }]
  }, {
    "group": "potential-bugs",
    "smells": [{
      "name": "LateinitUsage",
      "description": "Usage of lateinit detected. Using lateinit for property initialization is error prone, try using constructor injection or delegation.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/MainActivity.kt:43:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/SaveFileTask.kt:42:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/ElectricFieldsWallpaperService.kt:46:9",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:74:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:75:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:78:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/SaveFileObserver.kt:43:5",
        "message": "Usages of latinit should be avoided."
      }]
    }, {
      "name": "UnsafeCallOnNullableType",
      "description": "It will throw a NullPointerException at runtime if your nullable value is null.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/MainActivity.kt:68:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/MainActivity.kt:71:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/MainActivity.kt:134:36",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/MainActivity.kt:137:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/FieldsTask.kt:215:50",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:121:41",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:167:38",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:237:27",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:69:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:210:28",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:221:47",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:258:65",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:258:101",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:263:38",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:263:69",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:268:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:269:46",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }]
    }, {
      "name": "UnsafeCast",
      "description": "Cast operator throws an exception if the cast is not possible.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:53:29",
        "message": "context.getSystemService(Context.WINDOW_SERVICE) cannot be safely cast to WindowManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/SaveFileObserver.kt:42:43",
        "message": "context.getSystemService(Context.NOTIFICATION_SERVICE) cannot be safely cast to NotificationManager."
      }]
    }]
  }, {
    "group": "style",
    "smells": [{
      "name": "NewLineAtEndOfFile",
      "description": "Checks whether files end with a line separator.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFields.kt:58:1",
        "message": "The file ElectricFields.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/PaletteDialog.kt:77:1",
        "message": "The file PaletteDialog.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/SaveFileObserver.kt:136:1",
        "message": "The file SaveFileObserver.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/reactivex/DefaultDisposable.kt:40:1",
        "message": "The file DefaultDisposable.kt is not ending with a new line."
      }]
    }, {
      "name": "CollapsibleIfStatements",
      "description": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/MainActivity.kt:207:9",
        "message": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/MainActivity.kt:208:13",
        "message": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:70:9",
        "message": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:114:9",
        "message": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability."
      }]
    }, {
      "name": "ReturnCount",
      "description": "Restrict the number of return statements in methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/MainActivity.kt:76:5",
        "message": "Function onOptionsItemSelected has 6 return statements which exceeds the limit of 2."
      }]
    }, {
      "name": "MaxLineLength",
      "description": "Line detected that is longer than the defined maximum line length in the code style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/MainActivity.kt:116:142",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/MainActivity.kt:127:123",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/SaveFileTask.kt:59:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/SaveFileTask.kt:94:107",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/FieldsTask.kt:27:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/FieldsTask.kt:69:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/ElectricFieldsWallpaperService.kt:98:148",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/SaveFileObserver.kt:120:148",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }]
    }, {
      "name": "UnnecessaryParentheses",
      "description": "Unnecessary parentheses don't add any value to the code and should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/MainActivity.kt:134:13",
        "message": "Parentheses in (menuSave == null) are unnecessary and can be replaced with: menuSave == null"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/MainActivity.kt:153:16",
        "message": "Parentheses in (view == mainView) are unnecessary and can be replaced with: view == mainView"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/MainActivity.kt:157:16",
        "message": "Parentheses in (view == mainView) are unnecessary and can be replaced with: view == mainView"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/MainActivity.kt:169:13",
        "message": "Parentheses in (view == mainView) are unnecessary and can be replaced with: view == mainView"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/MainActivity.kt:208:45",
        "message": "Parentheses in (permissions[0] == Manifest.permission.WRITE_EXTERNAL_STORAGE) are unnecessary and can be replaced with: permissions[0] == Manifest.permission.WRITE_EXTERNAL_STORAGE"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/MainActivity.kt:209:50",
        "message": "Parentheses in (grantResults[0] == PERMISSION_GRANTED) are unnecessary and can be replaced with: grantResults[0] == PERMISSION_GRANTED"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/MainActivity.kt:223:13",
        "message": "Parentheses in (actionBar != null) are unnecessary and can be replaced with: actionBar != null"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/SaveFileTask.kt:95:25",
        "message": "Parentheses in (uri != null) are unnecessary and can be replaced with: uri != null"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/SaveFileTask.kt:95:42",
        "message": "Parentheses in (SCHEME_FILE != uri.scheme) are unnecessary and can be replaced with: SCHEME_FILE != uri.scheme"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/FieldsTask.kt:149:30",
        "message": "Parentheses in (x1 < w) are unnecessary and can be replaced with: x1 < w"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/FieldsTask.kt:162:22",
        "message": "Parentheses in (resolution >= 1) are unnecessary and can be replaced with: resolution >= 1"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/FieldsTask.kt:184:21",
        "message": "Parentheses in (dx * dx) are unnecessary and can be replaced with: dx * dx"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/FieldsTask.kt:184:33",
        "message": "Parentheses in (dy * dy) are unnecessary and can be replaced with: dy * dy"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/FieldsTask.kt:203:23",
        "message": "Parentheses in (z * density) are unnecessary and can be replaced with: z * density"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/FieldsTask.kt:215:29",
        "message": "Parentheses in (runner == null) are unnecessary and can be replaced with: runner == null"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:102:17",
        "message": "Parentheses in (dx * dx) are unnecessary and can be replaced with: dx * dx"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:102:29",
        "message": "Parentheses in (dy * dy) are unnecessary and can be replaced with: dy * dy"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:103:17",
        "message": "Parentheses in (d <= sameChargeDistance) are unnecessary and can be replaced with: d <= sameChargeDistance"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:103:46",
        "message": "Parentheses in (d < dMin) are unnecessary and can be replaced with: d < dMin"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:167:16",
        "message": "Parentheses in (listener != null) are unnecessary and can be replaced with: listener != null"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:216:17",
        "message": "Parentheses in (width != bw) are unnecessary and can be replaced with: width != bw"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:216:34",
        "message": "Parentheses in (height != bh) are unnecessary and can be replaced with: height != bh"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:143:17",
        "message": "Parentheses in (dx * dx) are unnecessary and can be replaced with: dx * dx"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:143:29",
        "message": "Parentheses in (dy * dy) are unnecessary and can be replaced with: dy * dy"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:144:17",
        "message": "Parentheses in (d <= sameChargeDistance) are unnecessary and can be replaced with: d <= sameChargeDistance"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:144:46",
        "message": "Parentheses in (d < dMin) are unnecessary and can be replaced with: d < dMin"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:221:29",
        "message": "Parentheses in (task == null) are unnecessary and can be replaced with: task == null"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:258:16",
        "message": "Parentheses in (listener != null) are unnecessary and can be replaced with: listener != null"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:258:38",
        "message": "Parentheses in (chargeToScale != null) are unnecessary and can be replaced with: chargeToScale != null"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:263:16",
        "message": "Parentheses in (listener != null) are unnecessary and can be replaced with: listener != null"
      }]
    }, {
      "name": "MagicNumber",
      "description": "Report magic numbers. Magic number is a numeric literal that is not defined as a constant and hence it's unclear what the purpose of this number is. It's better to declare such numbers as constants and give them a proper name. By default, -1, 0, 1, and 2 are not considered to be magic numbers.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/MainActivity.kt:116:138",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/SaveFileTask.kt:79:60",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/PaletteDialog.kt:42:34",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/PaletteDialog.kt:43:34",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/PaletteDialog.kt:47:31",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/PaletteDialog.kt:48:31",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:124:30",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:125:30",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:166:38",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:220:34",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:222:34",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/ElectricFieldsWallpaperService.kt:98:144",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:279:38",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }]
    }, {
      "name": "UnusedPrivateMember",
      "description": "Private member is unused.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/MainActivity.kt:115:14",
        "message": "Private property i is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/ElectricFieldsWallpaperService.kt:97:18",
        "message": "Private property i is unused."
      }]
    }, {
      "name": "ExpressionBodySyntax",
      "description": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/MainActivity.kt:152:84",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/MainActivity.kt:156:79",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/SaveFileTask.kt:51:40",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/SaveFileTask.kt:116:40",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/FieldsTask.kt:61:40",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:65:67",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:138:55",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:142:60",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:146:50",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:150:105",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:156:106",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:170:57",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/ElectricFieldsWallpaperService.kt:36:60",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/ElectricFieldsWallpaperService.kt:107:88",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/ElectricFieldsWallpaperService.kt:111:83",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/ElectricFieldsWallpaperService.kt:115:86",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:109:67",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:223:55",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:227:60",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:231:50",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:235:105",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:241:106",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:287:57",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:330:46",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:335:71",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:339:66",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/Charge.kt:37:37",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/Charge.kt:56:62",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/reactivex/DefaultDisposable.kt:29:40",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }]
    }, {
      "name": "WildcardImport",
      "description": "Wildcard imports should be replaced with imports using fully qualified class names. Wildcard imports can lead to naming conflicts. A library update can introduce naming clashes with your classes which results in compilation errors.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/FieldsTask.kt:18:1",
        "message": "android.graphics.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:27:1",
        "message": "com.github.fields.electric.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/ElectricFieldsView.kt:29:1",
        "message": "android.view.* is a wildcard import. Replace it with fully qualified imports."
      }]
    }, {
      "name": "UseDataClass",
      "description": "Classes that do nothing but hold data should be replaced with a data class.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/FieldsTask.kt:217:5",
        "message": "The class ChargeHolder defines nofunctionality and only holds data. Consider converting it to a data class."
      }]
    }, {
      "name": "ProtectedMemberInFinalClass",
      "description": "Member with protected visibility in final class is private. Consider using private or internal as modifier.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:203:5",
        "message": "Member with protected visibility in final class is private. Consider using private or internal as modifier."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-fields-electric/electric-android/app/src/main/kotlin/com/github/fields/electric/wallpaper/WallpaperView.kt:236:5",
        "message": "Member with protected visibility in final class is private. Consider using private or internal as modifier."
      }]
    }]
  }]
}