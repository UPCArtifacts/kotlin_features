{
  "complexity_metrics": {
    "loc": 323,
    "sloc": 257,
    "lloc": 178,
    "cloc": 0,
    "mcc": 72,
    "n_smell": 14,
    "comment_ratio": 0,
    "mcc_per_thlines": 404
  },
  "metrics": {
    "number_of_type_alias": 0,
    "number_of_tailrec_func": 0,
    "number_of_infix_func": 0,
    "number_of_sealed_class": 0,
    "number_of_coroutines": 1,
    "number_of_contract": 0,
    "number_of_inline_klass": 0,
    "number_of_string": 49,
    "number_of_string_template": 3,
    "number_of_inline_func": 5,
    "number_of_inferred_fun": 23,
    "number_of_inferred_var": 21,
    "number_of_objects_declarations": 2,
    "number_of_companion_objects": 1,
    "number_of_singletons": 0,
    "number_of_declaration": 23,
    "number_of_var_declaration": 23,
    "number_of_func_call": 164,
    "number_of_arguments": 130,
    "number_of_parameters": 45,
    "number_of_qualified_expressions": 108,
    "number_of_inheritances": 2,
    "number_of_unsafe_calls": 2,
    "number_of_safe_calls": 5,
    "number_of_destructuring_declarations": 0,
    "number_of_when_expressions": 2,
    "number_of_functions_with_default_value": 1,
    "number_of_function_call_with_named_value": 0,
    "number_of_named_argument": 0,
    "number_of_argument_with_default_value": 1,
    "number_of_overloaded_op": 1,
    "number_of_extension_function": 18,
    "number_of_properties_delegation": 0,
    "number_of_super_delegation": 0,
    "number_of_ranges": 0,
    "number_of_lambdas": 21,
    "number_of_possible_smart_casts": 0,
    "number_of_data_class": 0,
    "number_of_constructors": 0,
    "number_of_properties": 23,
    "number_of_functions": 38,
    "number_of_interfaces": 0,
    "number_of_classes": 2,
    "number_of_packages": 1,
    "number_of_kts_files": 0,
    "number_of_kt_files": 6
  },
  "file_metrics": {
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/fr-rhaz-ipfs-sweet/app/src/main/java/fr/rhaz/ipfs/sweet/WebActivity.kt": {
      "sloc": 52,
      "number_of_properties": 0,
      "number_of_functions": 9,
      "complexity": 10,
      "class": "fr.rhaz.ipfs.sweet.WebActivity"
    }
  },
  "findings": [{
    "group": "complexity",
    "smells": [{
      "name": "StringLiteralDuplication",
      "description": "Multiple occurrences of the same string literal within a single file detected.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/fr-rhaz-ipfs-sweet/app/src/main/java/fr/rhaz/ipfs/sweet/Daemon.kt:132:77",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/fr-rhaz-ipfs-sweet/app/src/main/java/fr/rhaz/ipfs/sweet/Daemon.kt:28:46",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/fr-rhaz-ipfs-sweet/app/src/main/java/fr/rhaz/ipfs/sweet/Daemon.kt:127:75",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }]
    }]
  }, {
    "group": "empty-blocks",
    "smells": [{
      "name": "EmptyCatchBlock",
      "description": "Empty block of code detected. As they serve no purpose they should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/fr-rhaz-ipfs-sweet/app/src/main/java/fr/rhaz/ipfs/sweet/Files.kt:34:50",
        "message": "This empty block of code can be removed."
      }]
    }]
  }, {
    "group": "exceptions",
    "smells": [{
      "name": "TooGenericExceptionThrown",
      "description": "Thrown exception is too generic. Prefer throwing project specific exceptions to handle error cases.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/fr-rhaz-ipfs-sweet/app/src/main/java/fr/rhaz/ipfs/sweet/Daemon.kt:45:25",
        "message": "Exception is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }]
    }, {
      "name": "TooGenericExceptionCaught",
      "description": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/fr-rhaz-ipfs-sweet/app/src/main/java/fr/rhaz/ipfs/sweet/Errors.kt:9:14",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }]
    }]
  }, {
    "group": "naming",
    "smells": [{
      "name": "MatchingDeclarationName",
      "description": "If a source file contains only a single non-private top-level class or object, the file name should reflect the case-sensitive name plus the .kt extension.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/fr-rhaz-ipfs-sweet/app/src/main/java/fr/rhaz/ipfs/sweet/Daemon.kt:1:1",
        "message": "The file name 'Daemon.kt' does not match the name of the single top-level declaration 'DaemonService'."
      }]
    }]
  }, {
    "group": "potential-bugs",
    "smells": [{
      "name": "UnsafeCast",
      "description": "Cast operator throws an exception if the cast is not possible.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/fr-rhaz-ipfs-sweet/app/src/main/java/fr/rhaz/ipfs/sweet/Daemon.kt:153:23",
        "message": "getSystemService(Context.NOTIFICATION_SERVICE) cannot be safely cast to NotificationManager."
      }]
    }, {
      "name": "UnsafeCallOnNullableType",
      "description": "It will throw a NullPointerException at runtime if your nullable value is null.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/fr-rhaz-ipfs-sweet/app/src/main/java/fr/rhaz/ipfs/sweet/Files.kt:14:27",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/fr-rhaz-ipfs-sweet/app/src/main/java/fr/rhaz/ipfs/sweet/WebActivity.kt:21:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }]
    }]
  }, {
    "group": "style",
    "smells": [{
      "name": "NewLineAtEndOfFile",
      "description": "Checks whether files end with a line separator.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/fr-rhaz-ipfs-sweet/app/src/main/java/fr/rhaz/ipfs/sweet/Json.kt:26:1",
        "message": "The file Json.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/fr-rhaz-ipfs-sweet/app/src/main/java/fr/rhaz/ipfs/sweet/Intents.kt:21:91",
        "message": "The file Intents.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/fr-rhaz-ipfs-sweet/app/src/main/java/fr/rhaz/ipfs/sweet/Files.kt:38:1",
        "message": "The file Files.kt is not ending with a new line."
      }]
    }, {
      "name": "MandatoryBracesIfStatements",
      "description": "Multi-line if statement was found that does not have braces. These should be added to improve readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/fr-rhaz-ipfs-sweet/app/src/main/java/fr/rhaz/ipfs/sweet/Daemon.kt:27:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }]
    }]
  }]
}