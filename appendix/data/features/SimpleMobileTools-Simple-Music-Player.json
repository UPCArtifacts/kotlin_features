{
  "complexity_metrics": {
    "loc": 3689,
    "sloc": 3128,
    "lloc": 2175,
    "cloc": 10,
    "mcc": 724,
    "n_smell": 238,
    "comment_ratio": 0,
    "mcc_per_thlines": 332
  },
  "metrics": {
    "number_of_string": 91,
    "number_of_string_template": 8,
    "number_of_inline_func": 1,
    "number_of_inferred_fun": 28,
    "number_of_inferred_var": 324,
    "number_of_objects_declarations": 15,
    "number_of_companion_objects": 6,
    "number_of_singletons": 1,
    "number_of_declaration": 363,
    "number_of_var_declaration": 364,
    "number_of_func_call": 1389,
    "number_of_arguments": 1138,
    "number_of_parameters": 265,
    "number_of_qualified_expressions": 1699,
    "number_of_inheritances": 18,
    "number_of_unsafe_calls": 68,
    "number_of_safe_calls": 83,
    "number_of_destructuring_declarations": 1,
    "number_of_when_expressions": 20,
    "number_of_functions_with_default_value": 5,
    "number_of_function_call_with_named_value": 2,
    "number_of_named_argument": 2,
    "number_of_argument_with_default_value": 5,
    "number_of_overloaded_op": 0,
    "number_of_extension_function": 8,
    "number_of_properties_delegation": 0,
    "number_of_super_delegation": 0,
    "number_of_ranges": 3,
    "number_of_lambdas": 174,
    "number_of_possible_smart_casts": 2,
    "number_of_data_class": 2,
    "number_of_properties": 362,
    "number_of_functions": 264,
    "number_of_interfaces": 4,
    "number_of_classes": 33,
    "number_of_packages": 13,
    "number_of_kts_files": 0,
    "number_of_kt_files": 34
  },
  "findings": [{
    "group": "complexity",
    "smells": [{
      "name": "ComplexMethod",
      "description": "Prefer splitting up complex methods into smaller, easier to understand methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/models/Song.kt:29:5",
        "message": "The function compareTo appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/receivers/RemoteControlReceiver.kt:38:5",
        "message": "The function onReceive appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/SongAdapter.kt:244:5",
        "message": "The function removeFromPlaylist appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/SongAdapter.kt:406:5",
        "message": "The function updateColors appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:206:5",
        "message": "The function onOptionsItemSelected appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:131:5",
        "message": "The function onStartCommand appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:366:5",
        "message": "The function setupNotification appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:621:5",
        "message": "The function getAlbumImage appears to be too complex."
      }]
    }, {
      "name": "NestedBlockDepth",
      "description": "Excessive nesting leads to hidden complexity. Prefer extracting code to make it easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/receivers/RemoteControlReceiver.kt:38:5",
        "message": "Function onReceive is nested too deeply."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/SongAdapter.kt:244:5",
        "message": "Function removeFromPlaylist is nested too deeply."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/RoomHelper.kt:26:5",
        "message": "Function getSongsFromPaths is nested too deeply."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:307:5",
        "message": "Function getAllDeviceSongs is nested too deeply."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:621:5",
        "message": "Function getAlbumImage is nested too deeply."
      }]
    }, {
      "name": "LabeledExpression",
      "description": "Expression with labels increase complexity and affect maintainability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/receivers/RemoteControlReceiver.kt:25:17",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/dialogs/NewPlaylistDialog.kt:45:37",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/dialogs/NewPlaylistDialog.kt:48:37",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/dialogs/EditDialog.kt:40:33",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/dialogs/EditDialog.kt:53:33",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:552:25",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:555:38",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:562:38",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:667:24",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/PlaylistsActivity.kt:26:34",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/PlaylistsActivity.kt:26:69",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/SettingsActivity.kt:126:30",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/SettingsActivity.kt:141:30",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:300:35",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:301:37",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:302:32",
        "message": "Expression with labels increase complexity and affect maintainability."
      }]
    }, {
      "name": "LargeClass",
      "description": "One class should have one responsibility. Large classes tend to handle many things at once. Split up large classes into smaller classes that are easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/SongAdapter.kt:29:1",
        "message": "Class SongAdapter is too large. Consider splitting it into smaller pieces."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:55:1",
        "message": "Class MainActivity is too large. Consider splitting it into smaller pieces."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:47:1",
        "message": "Class MusicService is too large. Consider splitting it into smaller pieces."
      }]
    }, {
      "name": "TooManyFunctions",
      "description": "Too many functions inside a/an file/class/object/interface always indicate a violation of the single responsibility principle. Maybe the file/class/object/interface wants to manage to many things at once. Extract functionality which clearly belongs together.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/SongAdapter.kt:29:1",
        "message": "Class 'SongAdapter' with '36' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/PlaylistsAdapter.kt:24:1",
        "message": "Class 'PlaylistsAdapter' with '17' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:55:1",
        "message": "Class 'MainActivity' with '49' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/SettingsActivity.kt:20:1",
        "message": "Class 'SettingsActivity' with '14' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/MyWidgetProvider.kt:25:1",
        "message": "Class 'MyWidgetProvider' with '17' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:47:1",
        "message": "Class 'MusicService' with '44' functions detected. Defined threshold inside classes is set to '11'"
      }]
    }, {
      "name": "ComplexCondition",
      "description": "Complex conditions should be simplified and extracted into well-named methods if necessary.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/dialogs/EditDialog.kt:38:33",
        "message": "This condition is too complex."
      }]
    }, {
      "name": "LongMethod",
      "description": "One method should have one responsibility. Long methods tend to handle many things at once. Prefer smaller methods to make them easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:72:5",
        "message": "The function onCreate is too long. The maximum length is 20."
      }]
    }]
  }, {
    "group": "empty-blocks",
    "smells": [{
      "name": "EmptyCatchBlock",
      "description": "Empty block of code detected. As they serve no purpose they should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/RoomHelper.kt:66:36",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/MyWidgetProvider.kt:163:32",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/MyWidgetProvider.kt:170:32",
        "message": "This empty block of code can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:659:36",
        "message": "This empty block of code can be removed."
      }]
    }]
  }, {
    "group": "exceptions",
    "smells": [{
      "name": "TooGenericExceptionCaught",
      "description": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/SettingsActivity.kt:119:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/RoomHelper.kt:66:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/MyWidgetProvider.kt:163:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/MyWidgetProvider.kt:170:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:263:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:564:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:659:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }]
    }]
  }, {
    "group": "naming",
    "smells": [{
      "name": "FunctionNaming",
      "description": "Function names should follow the naming convention set in the configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/databases/SongsDatabase.kt:21:5",
        "message": "Function names should match the pattern: ^([a-z$][a-zA-Z$0-9]*)|(`.*`)$"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/databases/SongsDatabase.kt:23:5",
        "message": "Function names should match the pattern: ^([a-z$][a-zA-Z$0-9]*)|(`.*`)$"
      }]
    }, {
      "name": "MemberNameEqualsClassName",
      "description": "A member should not given the same name as its parent class or object.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/objects/MyExecutor.kt:6:5",
        "message": "A member is named after the class object. This might result in confusion. Please rename the member."
      }]
    }, {
      "name": "VariableNaming",
      "description": "Variable names should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/SongAdapter.kt:32:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/SongAdapter.kt:33:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/SongAdapter.kt:34:5",
        "message": "Private variable names should match the pattern: (_)?[a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/SongAdapter.kt:203:9",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/RoomHelper.kt:38:9",
        "message": "Variable names should match the pattern: [a-z][A-Za-z0-9]*"
      }]
    }]
  }, {
    "group": "potential-bugs",
    "smells": [{
      "name": "UnsafeCallOnNullableType",
      "description": "It will throw a NullPointerException at runtime if your nullable value is null.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/databases/SongsDatabase.kt:46:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/receivers/RemoteControlReceiver.kt:27:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/SongAdapter.kt:140:16",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/SongAdapter.kt:150:57",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/SongAdapter.kt:153:16",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/SongAdapter.kt:348:30",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/SongAdapter.kt:358:34",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/dialogs/NewPlaylistDialog.kt:24:40",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/dialogs/NewPlaylistDialog.kt:40:78",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/dialogs/NewPlaylistDialog.kt:51:33",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/dialogs/NewPlaylistDialog.kt:54:65",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/dialogs/NewPlaylistDialog.kt:56:65",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/dialogs/NewPlaylistDialog.kt:57:37",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:241:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:247:10",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:552:57",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/MyWidgetProvider.kt:70:58",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/MyWidgetProvider.kt:80:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/MyWidgetProvider.kt:81:22",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/MyWidgetProvider.kt:92:58",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/MyWidgetProvider.kt:100:31",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/MyWidgetProvider.kt:101:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/MyWidgetProvider.kt:106:22",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/MyWidgetProvider.kt:107:19",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/MyWidgetProvider.kt:162:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/MyWidgetProvider.kt:169:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:84:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:93:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:99:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:115:43",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:190:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:198:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:209:65",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:249:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:282:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:284:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:286:28",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:287:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:352:39",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:377:54",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:427:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:480:44",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:491:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:506:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:545:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:556:32",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:557:35",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:559:89",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:561:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:562:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:586:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:587:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:593:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:610:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:626:54",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:674:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:685:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:745:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:754:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:772:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:774:32",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:775:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:776:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:777:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:781:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:794:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:795:36",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:797:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }]
    }, {
      "name": "UnsafeCast",
      "description": "Cast operator throws an exception if the cast is not possible.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/SongAdapter.kt:145:30",
        "message": "activity.layoutInflater.inflate(R.layout.item_navigation, null) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/SongAdapter.kt:183:21",
        "message": "getSelectedSongs().map { it.path } cannot be safely cast to ArrayList<String>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/SongAdapter.kt:230:27",
        "message": "removeSongs.map { it.path.hashCode() } cannot be safely cast to ArrayList<Int>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/SongAdapter.kt:282:27",
        "message": "removeSongs.map { it.path } cannot be safely cast to ArrayList<String>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/PlaylistsAdapter.kt:68:23",
        "message": "selectedKeys.map { it } cannot be safely cast to ArrayList<Int>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/PlaylistsAdapter.kt:83:32",
        "message": "paths.map { FileDirItem(it, it.getFilenameFromPath()) } cannot be safely cast to ArrayList<FileDirItem>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:83:19",
        "message": "layoutInflater.inflate(R.layout.item_transparent, null) cannot be safely cast to ViewGroup."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:245:29",
        "message": "getSystemService(Context.SEARCH_SERVICE) cannot be safely cast to SearchManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:247:10",
        "message": "searchMenuItem!!.actionView cannot be safely cast to SearchView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:281:22",
        "message": "songs_list.layoutManager cannot be safely cast to androidx.recyclerview.widget.LinearLayoutManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:348:45",
        "message": "paths.map { FileDirItem(it, it.getFilenameFromPath()) } cannot be safely cast to ArrayList<FileDirItem>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:368:29",
        "message": "playlistDAO.getAll() cannot be safely cast to ArrayList<Playlist>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:390:33",
        "message": "it cannot be safely cast to Int."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:553:41",
        "message": "it cannot be safely cast to Song."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:560:26",
        "message": "songs_list.layoutManager cannot be safely cast to MyLinearLayoutManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:561:14",
        "message": "currAdapter cannot be safely cast to SongAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:565:14",
        "message": "songs_list.layoutManager cannot be safely cast to MyLinearLayoutManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:601:27",
        "message": "event.songs.clone() cannot be safely cast to ArrayList<Song>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:648:24",
        "message": "songs.filter { it.artist.contains(text, true) || it.title.contains(text, true) } cannot be safely cast to ArrayList."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/PlaylistsActivity.kt:24:29",
        "message": "playlistDAO.getAll() cannot be safely cast to ArrayList<Playlist>."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/PlaylistsActivity.kt:28:38",
        "message": "it cannot be safely cast to Playlist."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/SettingsActivity.kt:127:36",
        "message": "it cannot be safely cast to Int."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/SettingsActivity.kt:142:39",
        "message": "it cannot be safely cast to Int."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/OreoAudioFocusHandler.kt:16:24",
        "message": "context.getSystemService(Context.AUDIO_SERVICE) cannot be safely cast to AudioManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:92:25",
        "message": "getSystemService(Context.AUDIO_SERVICE) cannot be safely cast to AudioManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:185:29",
        "message": "intent.getSerializableExtra(EDITED_SONG) cannot be safely cast to Song."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:385:39",
        "message": "getSystemService(Context.NOTIFICATION_SERVICE) cannot be safely cast to NotificationManager."
      }]
    }, {
      "name": "LateinitUsage",
      "description": "Usage of lateinit detected. Using lateinit for property initialization is error prone, try using constructor injection or delegation.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:70:5",
        "message": "Usages of latinit should be avoided."
      }]
    }]
  }, {
    "group": "style",
    "smells": [{
      "name": "UnnecessaryParentheses",
      "description": "Unnecessary parentheses don't add any value to the code and should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/databases/SongsDatabase.kt:18:23",
        "message": "Parentheses in (Song::class) are unnecessary and can be replaced with: Song::class"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/databases/SongsDatabase.kt:18:38",
        "message": "Parentheses in (Playlist::class) are unnecessary and can be replaced with: Playlist::class"
      }]
    }, {
      "name": "OptionalWhenBraces",
      "description": "Optional braces in when expression",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/models/Song.kt:31:13",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/models/Song.kt:40:13",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:177:13",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:207:13",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:213:13",
        "message": "Optional braces in when expression"
      }]
    }, {
      "name": "DataClassContainsFunctions",
      "description": "Data classes should mainly be used to store data and should not have any extra functions. (Compiler will automatically generate equals, toString and hashCode functions)",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/models/Song.kt:64:5",
        "message": "The data class Song contains functions which are not registered conversion functions. The offending method is called getBubbleText"
      }]
    }, {
      "name": "UseDataClass",
      "description": "Classes that do nothing but hold data should be replaced with a data class.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/models/Events.kt:6:5",
        "message": "The class SongChanged defines nofunctionality and only holds data. Consider converting it to a data class."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/models/Events.kt:8:5",
        "message": "The class SongStateChanged defines nofunctionality and only holds data. Consider converting it to a data class."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/models/Events.kt:10:5",
        "message": "The class PlaylistUpdated defines nofunctionality and only holds data. Consider converting it to a data class."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/models/Events.kt:12:5",
        "message": "The class ProgressUpdated defines nofunctionality and only holds data. Consider converting it to a data class."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/dialogs/NewPlaylistDialog.kt:15:1",
        "message": "The class NewPlaylistDialog defines nofunctionality and only holds data. Consider converting it to a data class."
      }]
    }, {
      "name": "MagicNumber",
      "description": "Report magic numbers. Magic number is a numeric literal that is not defined as a constant and hence it's unclear what the purpose of this number is. It's better to declare such numbers as constants and give them a proper name. By default, -1, 0, 1, and 2 are not considered to be magic numbers.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/receivers/RemoteControlReceiver.kt:54:43",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:690:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:691:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:692:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:693:25",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/SettingsActivity.kt:44:77",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/WidgetConfigureActivity.kt:60:24",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/WidgetConfigureActivity.kt:62:48",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/WidgetConfigureActivity.kt:67:50",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/WidgetConfigureActivity.kt:147:45",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/RoomHelper.kt:38:31",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/RoomHelper.kt:58:94",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:209:93",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:286:56",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:319:90",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:480:72",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:736:28",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:736:34",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:745:37",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:774:60",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:795:57",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }]
    }, {
      "name": "MandatoryBracesIfStatements",
      "description": "Multi-line if statement was found that does not have braces. These should be added to improve readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/receivers/RemoteControlReceiver.kt:24:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/inlines/Int.kt:5:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/dialogs/RemovePlaylistDialog.kt:25:16",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:294:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }]
    }, {
      "name": "WildcardImport",
      "description": "Wildcard imports should be replaced with imports using fully qualified class names. Wildcard imports can lead to naming conflicts. A library update can introduce naming clashes with your classes which results in compilation errors.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/SongAdapter.kt:11:1",
        "message": "com.simplemobiletools.commons.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/SongAdapter.kt:22:1",
        "message": "com.simplemobiletools.musicplayer.helpers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/PlaylistsAdapter.kt:7:1",
        "message": "com.simplemobiletools.commons.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/dialogs/EditDialog.kt:8:1",
        "message": "com.simplemobiletools.commons.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/dialogs/ChangeSortingDialog.kt:7:1",
        "message": "com.simplemobiletools.commons.helpers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:21:1",
        "message": "com.simplemobiletools.commons.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:38:1",
        "message": "com.simplemobiletools.musicplayer.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:39:1",
        "message": "com.simplemobiletools.musicplayer.helpers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/SettingsActivity.kt:6:1",
        "message": "com.simplemobiletools.commons.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/RoomHelper.kt:6:1",
        "message": "com.simplemobiletools.commons.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:8:1",
        "message": "android.content.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:13:1",
        "message": "android.media.AudioManager.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:28:1",
        "message": "com.simplemobiletools.commons.extensions.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:37:1",
        "message": "com.simplemobiletools.musicplayer.helpers.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/interfaces/SongsDao.kt:3:1",
        "message": "androidx.room.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/interfaces/PlaylistsDao.kt:3:1",
        "message": "androidx.room.* is a wildcard import. Replace it with fully qualified imports."
      }]
    }, {
      "name": "MaxLineLength",
      "description": "Line detected that is longer than the defined maximum line length in the code style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/SongAdapter.kt:29:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/SongAdapter.kt:30:19",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/SongAdapter.kt:249:136",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/SongAdapter.kt:436:140",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/SongAdapter.kt:467:145",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/SongAdapter.kt:470:148",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/PlaylistsAdapter.kt:24:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/dialogs/NewPlaylistDialog.kt:15:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/dialogs/NewPlaylistDialog.kt:40:143",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/dialogs/EditDialog.kt:38:132",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/dialogs/RemovePlaylistDialog.kt:10:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/dialogs/RemovePlaylistDialog.kt:28:122",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:150:125",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:281:132",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:348:33",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:594:123",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/RoomHelper.kt:75:13",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/RoomHelper.kt:88:122",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/MyWidgetProvider.kt:143:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/MyWidgetProvider.kt:156:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:47:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:651:125",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }]
    }, {
      "name": "LoopWithTooManyJumpStatements",
      "description": "The loop contains more than one break or continue statement. The code should be refactored to increase readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/adapters/PlaylistsAdapter.kt:93:9",
        "message": "The loop contains more than one break or continue statement. The code should be refactored to increase readability."
      }]
    }, {
      "name": "UnusedPrivateMember",
      "description": "Private member is unused.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/activities/MainActivity.kt:612:29",
        "message": "Function parameter event is unused."
      }]
    }, {
      "name": "UtilityClassWithPublicConstructor",
      "description": "The class declaration is unnecessary because it only contains utility functions. An object declaration should be used instead.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/helpers/BusProvider.kt:5:1",
        "message": "The class BusProvider only contains utility functions. Consider defining it as an object."
      }]
    }, {
      "name": "ReturnCount",
      "description": "Restrict the number of return statements in methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:621:5",
        "message": "Function getAlbumImage has 3 return statements which exceeds the limit of 2."
      }]
    }, {
      "name": "PreferToOverPairSyntax",
      "description": "Pair was created using the Pair constructor, using the to syntax is preferred.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:638:32",
        "message": "Pair is created by using the pair constructor. This can replaced by `resultBitmap to true`"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:655:36",
        "message": "Pair is created by using the pair constructor. This can replaced by `resultBitmap to true`"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/SimpleMobileTools-Simple-Music-Player/app/src/main/kotlin/com/simplemobiletools/musicplayer/services/MusicService.kt:663:16",
        "message": "Pair is created by using the pair constructor. This can replaced by `resources.getColoredBitmap(R.drawable.ic_headset, config.textColor) to false`"
      }]
    }]
  }]
}