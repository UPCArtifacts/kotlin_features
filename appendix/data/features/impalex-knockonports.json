{
  "complexity_metrics": {
    "loc": 3577,
    "sloc": 2361,
    "lloc": 1665,
    "cloc": 729,
    "mcc": 458,
    "n_smell": 236,
    "comment_ratio": 30,
    "mcc_per_thlines": 275
  },
  "metrics": {
    "number_of_string": 152,
    "number_of_string_template": 19,
    "number_of_inline_func": 0,
    "number_of_inferred_fun": 7,
    "number_of_inferred_var": 213,
    "number_of_objects_declarations": 18,
    "number_of_companion_objects": 14,
    "number_of_singletons": 0,
    "number_of_declaration": 280,
    "number_of_var_declaration": 280,
    "number_of_func_call": 1138,
    "number_of_arguments": 1023,
    "number_of_parameters": 350,
    "number_of_qualified_expressions": 1571,
    "number_of_inheritances": 31,
    "number_of_unsafe_calls": 58,
    "number_of_safe_calls": 121,
    "number_of_destructuring_declarations": 0,
    "number_of_when_expressions": 12,
    "number_of_functions_with_default_value": 4,
    "number_of_function_call_with_named_value": 0,
    "number_of_named_argument": 0,
    "number_of_argument_with_default_value": 5,
    "number_of_overloaded_op": 0,
    "number_of_extension_function": 4,
    "number_of_properties_delegation": 38,
    "number_of_super_delegation": 0,
    "number_of_ranges": 4,
    "number_of_lambdas": 208,
    "number_of_possible_smart_casts": 1,
    "number_of_data_class": 5,
    "number_of_properties": 280,
    "number_of_functions": 185,
    "number_of_interfaces": 2,
    "number_of_classes": 51,
    "number_of_packages": 13,
    "number_of_kts_files": 0,
    "number_of_kt_files": 36
  },
  "findings": [{
    "group": "complexity",
    "smells": [{
      "name": "TooManyFunctions",
      "description": "Too many functions inside a/an file/class/object/interface always indicate a violation of the single responsibility principle. Maybe the file/class/object/interface wants to manage to many things at once. Extract functionality which clearly belongs together.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewmodel/MainViewModel.kt:47:1",
        "message": "Class 'MainViewModel' with '18' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/dao/SequenceDao.kt:28:1",
        "message": "Interface 'SequenceDao' with '11' functions detected. Defined threshold inside interfaces is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/widget/KnocksWidgetConfigureActivity.kt:134:5",
        "message": "Object 'Companion' with '12' functions detected. Defined threshold inside objects is set to '11'"
      }]
    }, {
      "name": "LabeledExpression",
      "description": "Expression with labels increase complexity and affect maintainability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewmodel/MainViewModel.kt:166:28",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/MainActivity.kt:216:21",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/MainActivity.kt:232:21",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/MainActivity.kt:234:41",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/FileChooserFragment.kt:78:17",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/FileChooserFragment.kt:147:22",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/FileChooserFragment.kt:148:24",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/FileChooserFragment.kt:153:18",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/AppChooserFragment.kt:44:85",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/IcmpAdapter.kt:71:13",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/PortAdapter.kt:94:13",
        "message": "Expression with labels increase complexity and affect maintainability."
      }]
    }, {
      "name": "ComplexInterface",
      "description": "An interface contains too many functions and properties. Large classes tend to handle many things at once. An interface should have one responsibility. Split up large interfaces into smaller ones that are easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/dao/SequenceDao.kt:28:1",
        "message": "The interface SequenceDao is too complex. Consider splitting it up."
      }]
    }, {
      "name": "ComplexMethod",
      "description": "Prefer splitting up complex methods into smaller, easier to understand methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksDatabase.kt:66:9",
        "message": "The function migrate appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksDatabase.kt:97:9",
        "message": "The function migrate appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/MainActivity.kt:69:5",
        "message": "The function onCreate appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/json/SequenceData.kt:132:9",
        "message": "The function fromJson appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/service/Knocker.kt:37:5",
        "message": "The function knockPorts appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/service/Knocker.kt:154:5",
        "message": "The function execute appears to be too complex."
      }]
    }, {
      "name": "MethodOverloading",
      "description": "Methods which are overloaded often might be harder to maintain. Furthermore, these methods are tightly coupled. Refactor these methods and try to use optional parameters.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksDatabase.kt:37:1",
        "message": "This method is overloaded too many times."
      }]
    }, {
      "name": "NestedBlockDepth",
      "description": "Excessive nesting leads to hidden complexity. Prefer extracting code to make it easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksDatabase.kt:66:9",
        "message": "Function migrate is nested too deeply."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/json/SequenceData.kt:132:9",
        "message": "Function fromJson is nested too deeply."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/service/Knocker.kt:37:5",
        "message": "Function knockPorts is nested too deeply."
      }]
    }, {
      "name": "LongParameterList",
      "description": "The more parameters a method has the more complex it is. Long parameter lists are often used to control complex algorithms and violate the Single Responsibility Principle. Prefer methods with short parameter lists.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/widget/KnocksWidget.kt:153:32",
        "message": "The function updateImage has too many parameters. The current threshold is set to 6."
      }]
    }, {
      "name": "LongMethod",
      "description": "One method should have one responsibility. Long methods tend to handle many things at once. Prefer smaller methods to make them easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/BasicSettingsFragment.kt:71:5",
        "message": "The function onViewCreated is too long. The maximum length is 20."
      }]
    }]
  }, {
    "group": "empty-blocks",
    "smells": [{
      "name": "EmptyInitBlock",
      "description": "Empty block of code detected. As they serve no purpose they should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksRepository.kt:34:10",
        "message": "This empty block of code can be removed."
      }]
    }]
  }, {
    "group": "exceptions",
    "smells": [{
      "name": "TooGenericExceptionCaught",
      "description": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewmodel/MainViewModel.kt:175:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewmodel/MainViewModel.kt:200:22",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/service/Knocker.kt:65:26",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/service/Knocker.kt:100:30",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/service/Knocker.kt:113:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/service/Knocker.kt:149:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/service/Knocker.kt:170:18",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }]
    }]
  }, {
    "group": "potential-bugs",
    "smells": [{
      "name": "UnsafeCallOnNullableType",
      "description": "It will throw a NullPointerException at runtime if your nullable value is null.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksRepository.kt:30:30",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/widget/KnocksWidget.kt:86:70",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/widget/KnocksWidget.kt:97:70",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/widget/KnocksWidget.kt:132:85",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/SequenceListFragment.kt:41:59",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/SequenceListFragment.kt:42:63",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/SequenceListFragment.kt:75:125",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/SequenceConfigFragment.kt:39:63",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/SequenceConfigFragment.kt:54:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/SequenceConfigFragment.kt:54:72",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/SequenceConfigFragment.kt:57:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/BasicSettingsFragment.kt:54:63",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/BasicSettingsFragment.kt:56:51",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/BasicSettingsFragment.kt:57:36",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/BasicSettingsFragment.kt:58:36",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/BasicSettingsFragment.kt:59:41",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/BasicSettingsFragment.kt:60:41",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/BasicSettingsFragment.kt:61:38",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/BasicSettingsFragment.kt:62:44",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/BasicSettingsFragment.kt:63:44",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/BasicSettingsFragment.kt:64:45",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/BasicSettingsFragment.kt:65:38",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/BasicSettingsFragment.kt:66:39",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/AdvancedSettingsFragment.kt:41:63",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/AdvancedSettingsFragment.kt:42:37",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/AdvancedSettingsFragment.kt:43:39",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/AdvancedSettingsFragment.kt:44:42",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/AdvancedSettingsFragment.kt:45:42",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/AdvancedSettingsFragment.kt:46:39",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/AdvancedSettingsFragment.kt:47:37",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/FileChooserFragment.kt:40:59",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/FileChooserFragment.kt:42:39",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/FileChooserFragment.kt:109:63",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/AppChooserFragment.kt:44:53",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/AppChooserFragment.kt:45:63",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/AppChooserFragment.kt:46:39",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/AppChooserFragment.kt:47:36",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/AppChooserFragment.kt:67:57",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/service/Knocker.kt:85:90",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/service/Knocker.kt:97:73",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/AppListAdapter.kt:59:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/SequenceAdapter.kt:104:28",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/SequenceAdapter.kt:105:26",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/SequenceAdapter.kt:106:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/SequenceAdapter.kt:107:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/SequenceAdapter.kt:108:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/IcmpAdapter.kt:127:26",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/IcmpAdapter.kt:128:27",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/IcmpAdapter.kt:129:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/IcmpAdapter.kt:130:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/IcmpAdapter.kt:131:27",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/IcmpAdapter.kt:132:31",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/PortAdapter.kt:110:26",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/PortAdapter.kt:111:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/PortAdapter.kt:112:33",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/PortAdapter.kt:113:27",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/FileItemAdapter.kt:60:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/FileItemAdapter.kt:61:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }]
    }, {
      "name": "UnsafeCast",
      "description": "Cast operator throws an exception if the cast is not possible.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/ext/ExpandAnimation.kt:34:18",
        "message": "layout.layoutParams cannot be safely cast to LinearLayout.LayoutParams?."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/ext/ExpandAnimation.kt:45:14",
        "message": "this.layoutParams cannot be safely cast to LinearLayout.LayoutParams?."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/AppListAdapter.kt:41:28",
        "message": "context.getSystemService(Context.LAYOUT_INFLATER_SERVICE) cannot be safely cast to LayoutInflater."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/AppListAdapter.kt:51:22",
        "message": "view.tag cannot be safely cast to ViewHolder."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/FileItemAdapter.kt:40:28",
        "message": "context.getSystemService(Context.LAYOUT_INFLATER_SERVICE) cannot be safely cast to LayoutInflater."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/FileItemAdapter.kt:52:22",
        "message": "view.tag cannot be safely cast to ViewHolder."
      }]
    }]
  }, {
    "group": "style",
    "smells": [{
      "name": "NewLineAtEndOfFile",
      "description": "Checks whether files end with a line separator.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewmodel/MainViewModel.kt:220:1",
        "message": "The file MainViewModel.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/converter/SequenceConverters.kt:105:1",
        "message": "The file SequenceConverters.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/entity/Sequence.kt:77:1",
        "message": "The file Sequence.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/dao/SequenceDao.kt:62:1",
        "message": "The file SequenceDao.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksRepository.kt:51:1",
        "message": "The file KnocksRepository.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksDatabase.kt:191:1",
        "message": "The file KnocksDatabase.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/App.kt:52:1",
        "message": "The file App.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/ext/ItemTouchHelperAdapter.kt:30:1",
        "message": "The file ItemTouchHelperAdapter.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/ext/EditTextExtension.kt:43:1",
        "message": "The file EditTextExtension.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/ext/ExpandAnimation.kt:55:1",
        "message": "The file ExpandAnimation.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/json/SequenceData.kt:216:1",
        "message": "The file SequenceData.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/json/IcmpData.kt:26:105",
        "message": "The file IcmpData.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/json/PortData.kt:26:56",
        "message": "The file PortData.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/SequenceListFragment.kt:90:1",
        "message": "The file SequenceListFragment.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/SequenceConfigFragment.kt:88:1",
        "message": "The file SequenceConfigFragment.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/BasicSettingsFragment.kt:162:1",
        "message": "The file BasicSettingsFragment.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/AdvancedSettingsFragment.kt:105:1",
        "message": "The file AdvancedSettingsFragment.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/AppChooserFragment.kt:88:1",
        "message": "The file AppChooserFragment.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/service/Knocker.kt:205:1",
        "message": "The file Knocker.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/service/KnockerService.kt:77:1",
        "message": "The file KnockerService.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/data/ContentEncoding.kt:59:1",
        "message": "The file ContentEncoding.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/data/AppData.kt:55:1",
        "message": "The file AppData.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/data/PortType.kt:32:1",
        "message": "The file PortType.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/data/KnockType.kt:31:1",
        "message": "The file KnockType.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/SettingsPagerAdapter.kt:37:1",
        "message": "The file SettingsPagerAdapter.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/SequenceAdapter.kt:111:1",
        "message": "The file SequenceAdapter.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/IcmpAdapter.kt:135:1",
        "message": "The file IcmpAdapter.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/PortAdapter.kt:115:1",
        "message": "The file PortAdapter.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/KnockerItemTouchHelper.kt:39:1",
        "message": "The file KnockerItemTouchHelper.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/FileItemAdapter.kt:63:1",
        "message": "The file FileItemAdapter.kt is not ending with a new line."
      }]
    }, {
      "name": "WildcardImport",
      "description": "Wildcard imports should be replaced with imports using fully qualified class names. Wildcard imports can lead to naming conflicts. A library update can introduce naming clashes with your classes which results in compilation errors.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewmodel/MainViewModel.kt:44:1",
        "message": "org.jetbrains.anko.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/entity/Sequence.kt:24:1",
        "message": "androidx.room.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/dao/SequenceDao.kt:25:1",
        "message": "androidx.room.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/FileChooserFragment.kt:31:1",
        "message": "android.widget.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/service/Knocker.kt:29:1",
        "message": "org.jetbrains.anko.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/service/Knocker.kt:30:1",
        "message": "java.net.* is a wildcard import. Replace it with fully qualified imports."
      }]
    }, {
      "name": "MagicNumber",
      "description": "Report magic numbers. Magic number is a numeric literal that is not defined as a constant and hence it's unclear what the purpose of this number is. It's better to declare such numbers as constants and give them a proper name. By default, -1, 0, 1, and 2 are not considered to be magic numbers.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewmodel/MainViewModel.kt:110:23",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/converter/SequenceConverters.kt:83:34",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/converter/SequenceConverters.kt:84:48",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksDatabase.kt:39:19",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksDatabase.kt:52:39",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksDatabase.kt:59:36",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksDatabase.kt:59:39",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksDatabase.kt:65:36",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksDatabase.kt:65:39",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksDatabase.kt:96:36",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksDatabase.kt:96:39",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksDatabase.kt:129:58",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksDatabase.kt:129:61",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksDatabase.kt:153:36",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksDatabase.kt:153:39",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/service/Knocker.kt:34:35",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/service/Knocker.kt:35:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/service/Knocker.kt:38:57",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/data/ContentEncoding.kt:45:95",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }]
    }, {
      "name": "MaxLineLength",
      "description": "Line detected that is longer than the defined maximum line length in the code style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/entity/Sequence.kt:70:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/dao/SequenceDao.kt:48:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/dao/SequenceDao.kt:51:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksDatabase.kt:76:17",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksDatabase.kt:90:137",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksDatabase.kt:121:33",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksDatabase.kt:146:32",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/MainActivity.kt:128:141",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/MainActivity.kt:137:139",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/MainActivity.kt:227:136",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/widget/KnocksWidget.kt:137:124",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/widget/KnocksWidget.kt:139:139",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/widget/KnocksWidget.kt:143:150",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/widget/KnocksWidget.kt:144:147",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/widget/KnocksWidget.kt:146:123",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/widget/KnocksWidget.kt:147:124",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/widget/KnocksWidget.kt:153:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/widget/KnocksWidgetConfigureActivity.kt:77:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/widget/KnocksWidgetConfigureActivity.kt:79:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/widget/KnocksWidgetConfigureActivity.kt:89:131",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/widget/KnocksWidgetConfigureActivity.kt:90:137",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/widget/KnocksWidgetConfigureActivity.kt:157:134",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/widget/KnocksWidgetConfigureActivity.kt:176:134",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/widget/KnocksWidgetConfigureActivity.kt:195:128",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/json/SequenceData.kt:144:21",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/json/SequenceData.kt:188:132",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/SequenceListFragment.kt:74:34",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/SequenceListFragment.kt:80:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/BasicSettingsFragment.kt:94:136",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/BasicSettingsFragment.kt:95:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/BasicSettingsFragment.kt:112:136",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/BasicSettingsFragment.kt:113:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/FileChooserFragment.kt:113:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/FileChooserFragment.kt:132:139",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/FileChooserFragment.kt:148:13",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/AppChooserFragment.kt:44:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/data/AppData.kt:48:124",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/SettingsPagerAdapter.kt:28:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/SequenceAdapter.kt:34:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/IcmpAdapter.kt:40:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/KnockerItemTouchHelper.kt:35:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/FileItemAdapter.kt:51:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }]
    }, {
      "name": "DataClassContainsFunctions",
      "description": "Data classes should mainly be used to store data and should not have any extra functions. (Compiler will automatically generate equals, toString and hashCode functions)",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/entity/Sequence.kt:60:5",
        "message": "The data class Sequence contains functions which are not registered conversion functions. The offending method is called getReadableDescription"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/entity/Sequence.kt:67:5",
        "message": "The data class Sequence contains functions which are not registered conversion functions. The offending method is called getReadablePortString"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/entity/Sequence.kt:70:5",
        "message": "The data class Sequence contains functions which are not registered conversion functions. The offending method is called getReadableIcmpString"
      }]
    }, {
      "name": "LoopWithTooManyJumpStatements",
      "description": "The loop contains more than one break or continue statement. The code should be refactored to increase readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksDatabase.kt:136:17",
        "message": "The loop contains more than one break or continue statement. The code should be refactored to increase readability."
      }]
    }, {
      "name": "MandatoryBracesIfStatements",
      "description": "Multi-line if statement was found that does not have braces. These should be added to improve readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksDatabase.kt:102:21",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksDatabase.kt:137:21",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/database/KnocksDatabase.kt:140:21",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/MainActivity.kt:80:17",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/MainActivity.kt:83:17",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/MainActivity.kt:94:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/MainActivity.kt:179:9",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/widget/KnocksWidget.kt:67:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/widget/KnocksWidget.kt:131:17",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/ext/ExpandAnimation.kt:47:5",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/json/SequenceData.kt:50:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/json/SequenceData.kt:50:13",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/json/SequenceData.kt:57:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/json/SequenceData.kt:57:13",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/SequenceListFragment.kt:55:17",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/SequenceConfigFragment.kt:64:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/AdvancedSettingsFragment.kt:92:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/FileChooserFragment.kt:77:13",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/FileChooserFragment.kt:85:17",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/FileChooserFragment.kt:93:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/FileChooserFragment.kt:99:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/FileChooserFragment.kt:122:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/service/Knocker.kt:93:25",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }]
    }, {
      "name": "UnnecessaryParentheses",
      "description": "Unnecessary parentheses don't add any value to the code and should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/fragment/FileChooserFragment.kt:121:25",
        "message": "Parentheses in (if (dir == \"..\") File(currentDir).parentFile else File(dir)) are unnecessary and can be replaced with: if (dir == \"..\") File(currentDir).parentFile else File(dir)"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/data/AppData.kt:33:34",
        "message": "Parentheses in (other is AppData && other.app == app && other.name == name) are unnecessary and can be replaced with: other is AppData && other.app == app && other.name == name"
      }]
    }, {
      "name": "ReturnCount",
      "description": "Restrict the number of return statements in methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/service/Knocker.kt:154:5",
        "message": "Function execute has 3 return statements which exceeds the limit of 2."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/service/KnockerService.kt:35:5",
        "message": "Function onHandleIntent has 3 return statements which exceeds the limit of 2."
      }]
    }, {
      "name": "UnusedPrivateMember",
      "description": "Private member is unused.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/service/Knocker.kt:197:31",
        "message": "Function parameter address is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/service/Knocker.kt:197:48",
        "message": "Function parameter size is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/service/Knocker.kt:197:59",
        "message": "Function parameter count is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/service/Knocker.kt:197:71",
        "message": "Function parameter pattern is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/service/Knocker.kt:197:91",
        "message": "Function parameter sleep is unused."
      }]
    }, {
      "name": "ExpressionBodySyntax",
      "description": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/data/AppData.kt:32:47",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }]
    }, {
      "name": "UseDataClass",
      "description": "Classes that do nothing but hold data should be replaced with a data class.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/AppListAdapter.kt:58:5",
        "message": "The class ViewHolder defines nofunctionality and only holds data. Consider converting it to a data class."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/FileItemAdapter.kt:59:5",
        "message": "The class ViewHolder defines nofunctionality and only holds data. Consider converting it to a data class."
      }]
    }, {
      "name": "UnusedImports",
      "description": "Unused Imports are dead code and should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/impalex-knockonports/app/src/main/java/me/impa/knockonports/viewadapter/PortAdapter.kt:33:1",
        "message": "The import 'me.impa.knockonports.database.entity.Sequence' is unused."
      }]
    }]
  }]
}