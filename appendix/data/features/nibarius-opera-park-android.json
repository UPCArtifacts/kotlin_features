{
  "complexity_metrics": {
    "loc": 5272,
    "sloc": 3934,
    "lloc": 2858,
    "cloc": 607,
    "mcc": 699,
    "n_smell": 297,
    "comment_ratio": 15,
    "mcc_per_thlines": 244
  },
  "metrics": {
    "number_of_string": 434,
    "number_of_string_template": 20,
    "number_of_inline_func": 1,
    "number_of_inferred_fun": 132,
    "number_of_inferred_var": 383,
    "number_of_objects_declarations": 26,
    "number_of_companion_objects": 12,
    "number_of_singletons": 10,
    "number_of_declaration": 503,
    "number_of_var_declaration": 505,
    "number_of_func_call": 2051,
    "number_of_arguments": 1894,
    "number_of_parameters": 472,
    "number_of_qualified_expressions": 2719,
    "number_of_inheritances": 50,
    "number_of_unsafe_calls": 8,
    "number_of_safe_calls": 40,
    "number_of_destructuring_declarations": 2,
    "number_of_when_expressions": 21,
    "number_of_functions_with_default_value": 14,
    "number_of_function_call_with_named_value": 7,
    "number_of_named_argument": 7,
    "number_of_argument_with_default_value": 19,
    "number_of_overloaded_op": 0,
    "number_of_extension_function": 3,
    "number_of_properties_delegation": 26,
    "number_of_super_delegation": 0,
    "number_of_ranges": 6,
    "number_of_lambdas": 96,
    "number_of_possible_smart_casts": 14,
    "number_of_data_class": 4,
    "number_of_properties": 501,
    "number_of_functions": 468,
    "number_of_interfaces": 9,
    "number_of_classes": 107,
    "number_of_packages": 10,
    "number_of_kts_files": 0,
    "number_of_kt_files": 73
  },
  "findings": [{
    "group": "complexity",
    "smells": [{
      "name": "LongMethod",
      "description": "One method should have one responsibility. Long methods tend to handle many things at once. Prefer smaller methods to make them easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ParkActivityTest.kt:350:5",
        "message": "The function parkCarsTest is too long. The maximum length is 20."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ParkActivityTest.kt:468:5",
        "message": "The function parkCarsEmptyTest is too long. The maximum length is 20."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ParkActivityTest.kt:509:5",
        "message": "The function updateOwnCarsListOnServerStateChangeTest is too long. The maximum length is 20."
      }]
    }, {
      "name": "LargeClass",
      "description": "One class should have one responsibility. Large classes tend to handle many things at once. Split up large classes into smaller classes that are easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ParkActivityTest.kt:30:1",
        "message": "Class ParkActivityTest is too large. Consider splitting it into smaller pieces."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkActivity.kt:38:1",
        "message": "Class ParkActivity is too large. Consider splitting it into smaller pieces."
      }]
    }, {
      "name": "ComplexMethod",
      "description": "Prefer splitting up complex methods into smaller, easier to understand methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkActivity.kt:313:5",
        "message": "The function updateParkingState appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/OwnCarListEntry.kt:32:5",
        "message": "The function showItem appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/network/NetworkManager.kt:117:5",
        "message": "The function doAction appears to be too complex."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/fcm/ParkFirebaseMessagingService.kt:16:5",
        "message": "The function onMessageReceived appears to be too complex."
      }]
    }, {
      "name": "TooManyFunctions",
      "description": "Too many functions inside a/an file/class/object/interface always indicate a violation of the single responsibility principle. Maybe the file/class/object/interface wants to manage to many things at once. Extract functionality which clearly belongs together.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkActivity.kt:38:1",
        "message": "Class 'ParkActivity' with '32' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/datatypes/CarCollection.kt:6:1",
        "message": "Class 'CarCollection' with '19' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/ManageCarsActivity.kt:24:1",
        "message": "Class 'ManageCarsActivity' with '23' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/SharedPrefs.kt:12:1",
        "message": "Class 'SharedPrefs' with '20' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/StorageManager.kt:8:1",
        "message": "Class 'StorageManager' with '17' functions detected. Defined threshold inside classes is set to '11'"
      }]
    }, {
      "name": "StringLiteralDuplication",
      "description": "Multiple occurrences of the same string literal within a single file detected.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/network/NetworkManager.kt:163:37",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/network/NetworkManager.kt:73:31",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/network/NetworkManager.kt:152:43",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }]
    }, {
      "name": "ComplexCondition",
      "description": "Complex conditions should be simplified and extracted into well-named methods if necessary.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/global.kt:29:9",
        "message": "This condition is too complex."
      }]
    }]
  }, {
    "group": "empty-blocks",
    "smells": [{
      "name": "EmptyDefaultConstructor",
      "description": "Empty block of code detected. As they serve no purpose they should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/network/Result.kt:12:26",
        "message": "An empty default constructor can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/network/Result.kt:13:30",
        "message": "An empty default constructor can be removed."
      }]
    }]
  }, {
    "group": "exceptions",
    "smells": [{
      "name": "TooGenericExceptionThrown",
      "description": "Thrown exception is too generic. Prefer throwing project specific exceptions to handle error cases.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkActivity.kt:306:17",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkActivity.kt:329:13",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/datatypes/Garage.kt:58:13",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/datatypes/User.kt:162:17",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/datatypes/CarCollection.kt:114:9",
        "message": "RuntimeException is a too generic Exception. Prefer throwing specific exceptions that indicate a specific error case."
      }]
    }, {
      "name": "TooGenericExceptionCaught",
      "description": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/network/NetworkManager.kt:95:38",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/network/NetworkManager.kt:155:38",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }]
    }, {
      "name": "NotImplementedDeclaration",
      "description": "The NotImplementedDeclaration should only be used when a method stub is necessary. This defers the development of the functionality of this function. Hence, the NotImplementedDeclaration should only serve as a temporary declaration. Before releasing, this type of declaration should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/ParkDbHelper.kt:17:13",
        "message": "The NotImplementedDeclaration should only be used when a method stub is necessary. This defers the development of the functionality of this function. Hence, the NotImplementedDeclaration should only serve as a temporary declaration. Before releasing, this type of declaration should be removed."
      }]
    }]
  }, {
    "group": "naming",
    "smells": [{
      "name": "FunctionMaxLength",
      "description": "Function names should not be longer than the maximum set in the project configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/prod/java/se/barsk/park/Injection.kt:13:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/mock/java/se/barsk/park/Injection.kt:13:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkActivity.kt:228:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkActivity.kt:240:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkActivity.kt:259:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/ManageCarsActivity.kt:150:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/ManageCarsActivity.kt:182:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/RecyclerTouchListener.kt:43:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/SharedPrefs.kt:110:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/SharedPrefs.kt:123:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/StorageManager.kt:30:5",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/StorageManager.kt:31:5",
        "message": "Function names should be at most 30 characters long."
      }]
    }, {
      "name": "ObjectPropertyNaming",
      "description": "Property names inside objects should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/utils/TimeUtils.kt:9:5",
        "message": "Private object property names should match the pattern: (_)?[A-Za-z][A-Za-z0-9]*"
      }]
    }]
  }, {
    "group": "potential-bugs",
    "smells": [{
      "name": "UnsafeCast",
      "description": "Cast operator throws an exception if the cast is not possible.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ParkActivityTest.kt:93:10",
        "message": "ParkApp.carCollection cannot be safely cast to MockCarCollection."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ParkActivityTest.kt:157:10",
        "message": "ParkApp.networkManager cannot be safely cast to MockNetworkManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ParkActivityTest.kt:165:10",
        "message": "ParkApp.networkManager cannot be safely cast to MockNetworkManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ParkActivityTest.kt:199:10",
        "message": "ParkApp.networkManager cannot be safely cast to MockNetworkManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ParkActivityTest.kt:207:10",
        "message": "ParkApp.networkManager cannot be safely cast to MockNetworkManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ParkActivityTest.kt:277:9",
        "message": "dialog cannot be safely cast to SpecifyServerDialog."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ParkActivityTest.kt:279:10",
        "message": "dialog.dialog cannot be safely cast to AlertDialog."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ParkActivityTest.kt:320:9",
        "message": "dialog cannot be safely cast to SpecifyServerDialog."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ParkActivityTest.kt:322:10",
        "message": "dialog.dialog cannot be safely cast to AlertDialog."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ParkActivityTest.kt:363:9",
        "message": "car1 cannot be safely cast to OwnCarListEntry."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ParkActivityTest.kt:364:9",
        "message": "car2 cannot be safely cast to OwnCarListEntry."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ParkActivityTest.kt:408:9",
        "message": "car cannot be safely cast to OwnCarListEntry."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ParkActivityTest.kt:443:9",
        "message": "car cannot be safely cast to OwnCarListEntry."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ParkActivityTest.kt:476:9",
        "message": "car1 cannot be safely cast to OwnCarListEntry."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ParkActivityTest.kt:477:9",
        "message": "car2 cannot be safely cast to OwnCarListEntry."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ParkActivityTest.kt:523:9",
        "message": "car cannot be safely cast to OwnCarListEntry."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ParkActivityTest.kt:530:33",
        "message": "Shadows.shadowOf(activity.parked_cars_pull_to_refresh) cannot be safely cast to ShadowSwipeRefreshLayout."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ManageCarsActivityTest.kt:59:10",
        "message": "ParkApp.carCollection cannot be safely cast to MockCarCollection."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ManageCarsActivityTest.kt:69:10",
        "message": "ParkApp.carCollection cannot be safely cast to MockCarCollection."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ManageCarsActivityTest.kt:104:9",
        "message": "dialog cannot be safely cast to AddCarDialog."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ManageCarsActivityTest.kt:105:10",
        "message": "dialog.dialog cannot be safely cast to AlertDialog."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ManageCarsActivityTest.kt:115:9",
        "message": "dialog cannot be safely cast to AddCarDialog."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ManageCarsActivityTest.kt:116:23",
        "message": "dialog.dialog cannot be safely cast to AlertDialog."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ManageCarsActivityTest.kt:139:23",
        "message": "activity.findViewById<RecyclerView>(R.id.manage_cars_recyclerview)\n                .adapter cannot be safely cast to SelectableCarsAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ManageCarsActivityTest.kt:151:23",
        "message": "activity.findViewById<RecyclerView>(R.id.manage_cars_recyclerview)\n                .adapter cannot be safely cast to SelectableCarsAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ManageCarsActivityTest.kt:177:9",
        "message": "adapter cannot be safely cast to SelectableCarsAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ManageCarsActivityTest.kt:188:9",
        "message": "dialog cannot be safely cast to EditCarDialog."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ManageCarsActivityTest.kt:198:9",
        "message": "adapter cannot be safely cast to SelectableCarsAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ManageCarsActivityTest.kt:209:9",
        "message": "adapter cannot be safely cast to SelectableCarsAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/settings/SettingsActivity.kt:93:21",
        "message": "pref cannot be safely cast to ListPreference."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/settings/SettingsActivity.kt:97:21",
        "message": "pref cannot be safely cast to EditTextPreference."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/SpecifyServerDialog.kt:32:9",
        "message": "requireActivity().layoutInflater.inflate(R.layout.specify_server_dialog, null) cannot be safely cast to View."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/SpecifyServerDialog.kt:40:13",
        "message": "activity cannot be safely cast to SpecifyServerDialogListener."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/SpecifyServerDialog.kt:77:10",
        "message": "dialog cannot be safely cast to AlertDialog."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkActivity.kt:373:9",
        "message": "car cannot be safely cast to OwnCar."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkActivity.kt:399:23",
        "message": "parkedCarsRecyclerView.adapter cannot be safely cast to CarsAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkActivity.kt:413:23",
        "message": "ownCarsRecyclerView.adapter cannot be safely cast to OwnCarsAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/OwnCarsAdapter.kt:14:14",
        "message": "holder.itemView cannot be safely cast to OwnCarListEntry."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/PrivacyPolicyOnBoardingDialog.kt:40:10",
        "message": "dialog.findViewById(android.R.id.message) cannot be safely cast to TextView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/CarsAdapter.kt:48:14",
        "message": "holder.itemView cannot be safely cast to CarListEntry."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/OwnCarListEntry.kt:33:9",
        "message": "car cannot be safely cast to OwnCar."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkedCarListEntry.kt:29:9",
        "message": "car cannot be safely cast to ParkedCar."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/MustSignInDialog.kt:29:13",
        "message": "activity cannot be safely cast to MustSignInDialogListener."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/network/NetworkManager.kt:86:56",
        "message": "result.getAs<Json>()?.obj() cannot be safely cast to JSONObject."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/network/NetworkManager.kt:143:56",
        "message": "result.getAs<Json>()?.obj() cannot be safely cast to JSONObject."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/SelectableCarsAdapter.kt:16:14",
        "message": "holder.itemView cannot be safely cast to ManageCarsListEntry."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/SelectableCarsAdapter.kt:57:13",
        "message": "entry cannot be safely cast to ManageCarsListEntry."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/ManageCarsActivity.kt:161:23",
        "message": "this cannot be safely cast to AppCompatActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/ManageCarsListEntry.kt:35:9",
        "message": "car cannot be safely cast to OwnCar."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/ManageCarDialog.kt:29:44",
        "message": "requireActivity().layoutInflater.inflate(R.layout.manage_car_dialog, null) cannot be safely cast to View."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/ManageCarDialog.kt:39:13",
        "message": "activity cannot be safely cast to ManageCarDialogListener."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/ManageCarDialog.kt:89:10",
        "message": "dialog cannot be safely cast to AlertDialog."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/fcm/SpaceAvailableNotificationChannel.kt:25:35",
        "message": "context.getSystemService(Context.NOTIFICATION_SERVICE) cannot be safely cast to NotificationManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/fcm/Notification.kt:48:36",
        "message": "context.getSystemService(Context.NOTIFICATION_SERVICE) cannot be safely cast to NotificationManager."
      }]
    }, {
      "name": "UnsafeCallOnNullableType",
      "description": "It will throw a NullPointerException at runtime if your nullable value is null.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/SharedPreferencesTest.kt:110:29",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/SharedPreferencesTest.kt:111:29",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/SignInHandler.kt:122:41",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/CarListEntry.kt:22:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/EditCarDialog.kt:17:71",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/SharedPrefs.kt:23:42",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/SharedPrefs.kt:26:37",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/SharedPrefs.kt:28:44",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }]
    }, {
      "name": "LateinitUsage",
      "description": "Usage of lateinit detected. Using lateinit for property initialization is error prone, try using constructor injection or delegation.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/settings/SettingsActivity.kt:46:9",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/SpecifyServerDialog.kt:30:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkActivity.kt:111:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/ManageCarsActivity.kt:56:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/ParkApp.kt:21:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/ParkApp.kt:22:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/ParkApp.kt:23:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/ParkApp.kt:24:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/ParkApp.kt:25:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/ParkApp.kt:26:5",
        "message": "Usages of latinit should be avoided."
      }]
    }]
  }, {
    "group": "style",
    "smells": [{
      "name": "NewLineAtEndOfFile",
      "description": "Checks whether files end with a line separator.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/mock/java/se/barsk/park/datatypes/MockCarCollection.kt:27:1",
        "message": "The file MockCarCollection.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/mock/java/se/barsk/park/network/MockNetworkManager.kt:97:1",
        "message": "The file MockNetworkManager.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/mock/java/se/barsk/park/storage/MockStorageManager.kt:28:1",
        "message": "The file MockStorageManager.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/GarageTest.kt:73:1",
        "message": "The file GarageTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/DatabaseTest.kt:88:1",
        "message": "The file DatabaseTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/DeepLinkTest.kt:75:1",
        "message": "The file DeepLinkTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/GetParkedCarsTest.kt:91:1",
        "message": "The file GetParkedCarsTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ManageCarsActivityTest.kt:223:1",
        "message": "The file ManageCarsActivityTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/UtilsTest.kt:27:1",
        "message": "The file UtilsTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/RobolectricTest.kt:21:1",
        "message": "The file RobolectricTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/CarCollectionTest.kt:147:1",
        "message": "The file CarCollectionTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/SharedPreferencesTest.kt:114:1",
        "message": "The file SharedPreferencesTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/settings/SettingsActivity.kt:113:1",
        "message": "The file SettingsActivity.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/SignInHandler.kt:161:1",
        "message": "The file SignInHandler.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/RepeatableTask.kt:26:1",
        "message": "The file RepeatableTask.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/SpecifyServerDialog.kt:85:1",
        "message": "The file SpecifyServerDialog.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/OwnCarsAdapter.kt:15:1",
        "message": "The file OwnCarsAdapter.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/PrivacyPolicyOnBoardingDialog.kt:69:1",
        "message": "The file PrivacyPolicyOnBoardingDialog.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/CarsAdapter.kt:55:1",
        "message": "The file CarsAdapter.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/OwnCarListEntry.kt:77:1",
        "message": "The file OwnCarListEntry.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/CarListEntry.kt:41:1",
        "message": "The file CarListEntry.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkedCarListEntry.kt:45:1",
        "message": "The file ParkedCarListEntry.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/MustSignInDialog.kt:45:1",
        "message": "The file MustSignInDialog.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/Utils.kt:32:1",
        "message": "The file Utils.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/datatypes/Car.kt:9:1",
        "message": "The file Car.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/datatypes/CarCollectionStatusChangedListener.kt:5:1",
        "message": "The file CarCollectionStatusChangedListener.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/datatypes/Garage.kt:61:1",
        "message": "The file Garage.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/datatypes/GarageStatusChangedListener.kt:9:1",
        "message": "The file GarageStatusChangedListener.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/datatypes/OwnCar.kt:16:1",
        "message": "The file OwnCar.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/datatypes/User.kt:166:1",
        "message": "The file User.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/datatypes/CarCollection.kt:137:1",
        "message": "The file CarCollection.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/datatypes/ParkedCar.kt:6:107",
        "message": "The file ParkedCar.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/network/NetworkManager.kt:238:1",
        "message": "The file NetworkManager.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/network/Result.kt:14:1",
        "message": "The file Result.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/network/Backend.kt:9:1",
        "message": "The file Backend.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/SelectableCarsAdapter.kt:70:1",
        "message": "The file SelectableCarsAdapter.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/EditCarDialog.kt:29:1",
        "message": "The file EditCarDialog.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/AddCarDialog.kt:19:1",
        "message": "The file AddCarDialog.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/RecyclerTouchListener.kt:44:1",
        "message": "The file RecyclerTouchListener.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/ManageCarsListEntry.kt:116:1",
        "message": "The file ManageCarsListEntry.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/ManageCarDialog.kt:101:1",
        "message": "The file ManageCarDialog.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/utils/TimeUtils.kt:14:1",
        "message": "The file TimeUtils.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/SharedPrefs.kt:158:1",
        "message": "The file SharedPrefs.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/ParkContract.kt:26:1",
        "message": "The file ParkContract.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/ParkDbHelper.kt:18:1",
        "message": "The file ParkDbHelper.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/StorageManager.kt:43:1",
        "message": "The file StorageManager.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/Database.kt:118:1",
        "message": "The file Database.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/global.kt:32:1",
        "message": "The file global.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/fcm/SpaceAvailableNotification.kt:64:1",
        "message": "The file SpaceAvailableNotification.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/fcm/ParkFirebaseMessagingService.kt:48:1",
        "message": "The file ParkFirebaseMessagingService.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/fcm/ParkFirebaseInstanceIDService.kt:16:1",
        "message": "The file ParkFirebaseInstanceIDService.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/fcm/NotificationsManager.kt:29:1",
        "message": "The file NotificationsManager.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/fcm/SpaceAvailableNotificationChannel.kt:34:1",
        "message": "The file SpaceAvailableNotificationChannel.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/fcm/Notification.kt:55:1",
        "message": "The file Notification.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/SplashActivity.kt:21:1",
        "message": "The file SplashActivity.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/DeepLink.kt:81:1",
        "message": "The file DeepLink.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/analytics/ParkActionEvent.kt:18:1",
        "message": "The file ParkActionEvent.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/analytics/ExceptionEvent.kt:16:1",
        "message": "The file ExceptionEvent.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/analytics/Analytics.kt:18:1",
        "message": "The file Analytics.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/analytics/AnalyticsEvent.kt:20:1",
        "message": "The file AnalyticsEvent.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/analytics/DynamicLinkFailedEvent.kt:13:1",
        "message": "The file DynamicLinkFailedEvent.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/analytics/UserProperties.kt:7:1",
        "message": "The file UserProperties.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/analytics/CrashReporting.kt:23:1",
        "message": "The file CrashReporting.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/analytics/ShareCarEvent.kt:15:1",
        "message": "The file ShareCarEvent.kt is not ending with a new line."
      }]
    }, {
      "name": "MaxLineLength",
      "description": "Line detected that is longer than the defined maximum line length in the code style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/mock/java/se/barsk/park/network/MockNetworkManager.kt:66:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/settings/SettingsActivity.kt:25:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/settings/SettingsActivity.kt:85:149",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/settings/SettingsActivity.kt:86:131",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/SignInHandler.kt:1:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/SpecifyServerDialog.kt:70:132",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/CarsAdapter.kt:10:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/OwnCarListEntry.kt:17:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkedCarListEntry.kt:38:132",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkedCarListEntry.kt:39:133",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/MustSignInDialog.kt:42:140",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/datatypes/OwnCar.kt:5:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/network/NetworkManager.kt:82:128",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/ManageCarsActivity.kt:24:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/RecyclerTouchListener.kt:10:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/ManageCarDialog.kt:29:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/ManageCarDialog.kt:30:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/ManageCarDialog.kt:82:132",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/utils/TimeUtils.kt:10:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/SharedPrefs.kt:41:5",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/Database.kt:40:122",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }]
    }, {
      "name": "MagicNumber",
      "description": "Report magic numbers. Magic number is a numeric literal that is not defined as a constant and hence it's unclear what the purpose of this number is. It's better to declare such numbers as constants and give them a proper name. By default, -1, 0, 1, and 2 are not considered to be magic numbers.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/mock/java/se/barsk/park/network/MockNetworkManager.kt:26:38",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/OwnCarListEntry.kt:45:44",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkedCarListEntry.kt:32:53",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkedCarListEntry.kt:33:37",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkedCarListEntry.kt:33:41",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/ManageCarsListEntry.kt:28:43",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/ManageCarsListEntry.kt:66:100",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/ManageCarsListEntry.kt:92:91",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/utils/TimeUtils.kt:9:52",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/ErrorHandler.kt:35:29",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/SharedPrefs.kt:80:24",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/SharedPrefs.kt:80:40",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/fcm/SpaceAvailableNotification.kt:21:34",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/fcm/SpaceAvailableNotification.kt:21:38",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/fcm/SpaceAvailableNotification.kt:21:43",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/fcm/SpaceAvailableNotification.kt:21:48",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/analytics/ExceptionEvent.kt:13:50",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/analytics/DynamicLinkFailedEvent.kt:11:46",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }]
    }, {
      "name": "FunctionOnlyReturningConstant",
      "description": "A function that only returns a constant is misleading. Consider declaring a constant instead",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/mock/java/se/barsk/park/Injection.kt:13:5",
        "message": "provideSharedPreferencesFileName is returning a constant. Prefer declaring a constant instead."
      }]
    }, {
      "name": "SpacingBetweenPackageAndImports",
      "description": "Violation of the package declaration style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ParkActivityTest.kt:27:37",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of ParkActivityTest."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/DatabaseTest.kt:8:38",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of DatabaseTest."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/DeepLinkTest.kt:10:38",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of DeepLinkTest."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ManageCarsActivityTest.kt:22:54",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of ManageCarsActivityTest."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/UtilsTest.kt:4:22",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of UtilsTest."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/SharedPreferencesTest.kt:8:34",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of SharedPreferencesTest."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/settings/SettingsActivity.kt:13:37",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of SettingsActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/SpecifyServerDialog.kt:17:27",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of SpecifyServerDialog."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkActivity.kt:35:37",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of ParkActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/PrivacyPolicyOnBoardingDialog.kt:15:37",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of PrivacyPolicyOnBoardingDialog."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/CarsAdapter.kt:7:52",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of CarsAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/OwnCarListEntry.kt:14:38",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of OwnCarListEntry."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/CarListEntry.kt:9:35",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of CarListEntry."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/EditCarDialog.kt:6:38",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of EditCarDialog."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/ManageCarsActivity.kt:21:38",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of ManageCarsActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/RecyclerTouchListener.kt:7:25",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of RecyclerTouchListener."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/ManageCarsListEntry.kt:15:41",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of ManageCarsListEntry."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/utils/TimeUtils.kt:5:29",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of TimeUtils."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/StorageManager.kt:5:38",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of StorageManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/fcm/ParkFirebaseMessagingService.kt:9:34",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of ParkFirebaseMessagingService."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/fcm/ParkFirebaseInstanceIDService.kt:3:57",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of ParkFirebaseInstanceIDService."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/fcm/NotificationsManager.kt:5:50",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of NotificationsManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/fcm/SpaceAvailableNotificationChannel.kt:9:23",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of SpaceAvailableNotificationChannel."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/ParkApp.kt:11:44",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of ParkApp."
      }]
    }, {
      "name": "UnusedPrivateMember",
      "description": "Private member is unused.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/ParkActivityTest.kt:600:5",
        "message": "Private function carIsNotParkable is unused."
      }]
    }, {
      "name": "ForbiddenComment",
      "description": "Flags a forbidden comment. Defaults values are TODO:, FIXME: or STOPSHIP:",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/GetParkedCarsTest.kt:80:51",
        "message": "This comment contains text that has been defined as forbidden in detekt."
      }]
    }, {
      "name": "UnnecessaryAbstractClass",
      "description": "An abstract class is unnecessary and can be refactored. An abstract class should have both abstract and concrete properties or functions. An abstract class without a concrete member can be refactored to an interface. An abstract class without an abstract member can be refactored to a concrete class.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/testMock/java/se/barsk/park/RobolectricTest.kt:11:1",
        "message": "An abstract class without an abstract member can be refactored to a concrete class."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/datatypes/Car.kt:3:1",
        "message": "An abstract class without a concrete member can be refactored to an interface."
      }]
    }, {
      "name": "WildcardImport",
      "description": "Wildcard imports should be replaced with imports using fully qualified class names. Wildcard imports can lead to naming conflicts. A library update can introduce naming clashes with your classes which results in compilation errors.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/settings/SettingsActivity.kt:7:1",
        "message": "android.preference.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkActivity.kt:21:1",
        "message": "android.widget.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkActivity.kt:27:1",
        "message": "se.barsk.park.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkActivity.kt:30:1",
        "message": "se.barsk.park.datatypes.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/datatypes/User.kt:6:1",
        "message": "se.barsk.park.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/ManageCarsActivity.kt:17:1",
        "message": "se.barsk.park.* is a wildcard import. Replace it with fully qualified imports."
      }]
    }, {
      "name": "UnnecessaryParentheses",
      "description": "Unnecessary parentheses don't add any value to the code and should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/settings/SettingsActivity.kt:29:44",
        "message": "Parentheses around the lambda ({ showThirdPartyList() }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/SpecifyServerDialog.kt:65:43",
        "message": "Parentheses around the lambda ({ _, _, _ ->\n            dialog.getButton(DialogInterface.BUTTON_POSITIVE).performClick()\n            false\n        }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkActivity.kt:237:23",
        "message": "Parentheses around the lambda ({ showParkedCarsPlaceholderIfNeededAfterAnimations() }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/ManageCarsActivity.kt:179:23",
        "message": "Parentheses around the lambda ({ showCarsPlaceholderIfNeededAfterAnimation() }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/ManageCarDialog.kt:78:44",
        "message": "Parentheses around the lambda ({ _, _, _ ->\n            dialog.getButton(DialogInterface.BUTTON_POSITIVE).performClick()\n            false\n        }) are unnecessary and can be removed."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/global.kt:29:9",
        "message": "Parentheses in (empty && listShown) are unnecessary and can be replaced with: empty && listShown"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/global.kt:29:33",
        "message": "Parentheses in (!empty && placeholderShown) are unnecessary and can be replaced with: !empty && placeholderShown"
      }]
    }, {
      "name": "OptionalWhenBraces",
      "description": "Optional braces in when expression",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/settings/SettingsActivity.kt:107:17",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkActivity.kt:305:13",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/CarsAdapter.kt:30:13",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/CarsAdapter.kt:33:13",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/CarsAdapter.kt:36:13",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/datatypes/Garage.kt:51:9",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/datatypes/Garage.kt:54:9",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/datatypes/Garage.kt:57:9",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/datatypes/User.kt:152:13",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/datatypes/User.kt:155:13",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/datatypes/User.kt:158:13",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/datatypes/User.kt:161:13",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/network/NetworkManager.kt:84:25",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/network/NetworkManager.kt:141:25",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/network/NetworkManager.kt:201:25",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/network/NetworkManager.kt:226:25",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/managecars/ManageCarsActivity.kt:39:13",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/fcm/ParkFirebaseMessagingService.kt:34:21",
        "message": "Optional braces in when expression"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/fcm/ParkFirebaseMessagingService.kt:37:21",
        "message": "Optional braces in when expression"
      }]
    }, {
      "name": "MandatoryBracesIfStatements",
      "description": "Multi-line if statement was found that does not have braces. These should be added to improve readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/settings/SettingsActivity.kt:98:36",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/settings/SettingsActivity.kt:98:36",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkActivity.kt:126:17",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/mainui/ParkActivity.kt:126:17",
        "message": "Multi-line else statement was found that does not have braces.These should be added to improve readability"
      }]
    }, {
      "name": "DataClassContainsFunctions",
      "description": "Data classes should mainly be used to store data and should not have any extra functions. (Compiler will automatically generate equals, toString and hashCode functions)",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/datatypes/OwnCar.kt:11:5",
        "message": "The data class OwnCar contains functions which are not registered conversion functions. The offending method is called isSameCar"
      }]
    }, {
      "name": "PreferToOverPairSyntax",
      "description": "Pair was created using the Pair constructor, using the to syntax is preferred.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/network/NetworkManager.kt:125:24",
        "message": "Pair is created by using the pair constructor. This can replaced by `\"regno\" to ownCar.regNo`"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/network/NetworkManager.kt:130:32",
        "message": "Pair is created by using the pair constructor. This can replaced by `\"user\" to ownCar.owner`"
      }]
    }, {
      "name": "MayBeConst",
      "description": "Reports vals that can be const val instead.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/utils/TimeUtils.kt:9:5",
        "message": "RESET_POINT_HOURS_AFTER_MIDNIGHT can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/ParkContract.kt:17:13",
        "message": "TABLE_NAME can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/ParkContract.kt:18:13",
        "message": "COLUMN_NAME_UUID can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/ParkContract.kt:19:13",
        "message": "COLUMN_NAME_POSITION can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/ParkContract.kt:20:13",
        "message": "COLUMN_NAME_REGNO can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/ParkContract.kt:21:13",
        "message": "COLUMN_NAME_OWNER can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/ParkContract.kt:22:13",
        "message": "COLUMN_NAME_NICKNAME can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/ParkDbHelper.kt:9:9",
        "message": "DATABASE_VERSION can be a `const val`."
      }]
    }, {
      "name": "OptionalUnit",
      "description": "Return type of 'Unit' is unnecessary and can be safely removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/storage/ParkDbHelper.kt:16:68",
        "message": "The function onUpgrade defines a return type of Unit. This is unnecessary and can safely be removed."
      }]
    }, {
      "name": "UnusedImports",
      "description": "Unused Imports are dead code and should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/global.kt:3:1",
        "message": "The import 'android.util.Log' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/fcm/ParkFirebaseMessagingService.kt:4:1",
        "message": "The import 'android.util.Log' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/analytics/CrashReporting.kt:8:1",
        "message": "The import 'se.barsk.park.storage.StorageManager' is unused."
      }]
    }, {
      "name": "UseDataClass",
      "description": "Classes that do nothing but hold data should be replaced with a data class.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/nibarius-opera-park-android/app/src/main/java/se/barsk/park/DeepLink.kt:9:1",
        "message": "The class DeepLink defines nofunctionality and only holds data. Consider converting it to a data class."
      }]
    }]
  }]
}