{
  "complexity_metrics": {
    "loc": 1944,
    "sloc": 1570,
    "lloc": 1124,
    "cloc": 77,
    "mcc": 263,
    "n_smell": 249,
    "comment_ratio": 4,
    "mcc_per_thlines": 233
  },
  "metrics": {
    "number_of_type_alias": 0,
    "number_of_tailrec_func": 0,
    "number_of_infix_func": 0,
    "number_of_sealed_class": 0,
    "number_of_coroutines": 0,
    "number_of_contract": 0,
    "number_of_inline_klass": 0,
    "number_of_string": 123,
    "number_of_string_template": 2,
    "number_of_inline_func": 0,
    "number_of_inferred_fun": 0,
    "number_of_inferred_var": 149,
    "number_of_objects_declarations": 7,
    "number_of_companion_objects": 1,
    "number_of_singletons": 0,
    "number_of_declaration": 194,
    "number_of_var_declaration": 194,
    "number_of_func_call": 634,
    "number_of_arguments": 685,
    "number_of_parameters": 115,
    "number_of_qualified_expressions": 932,
    "number_of_inheritances": 11,
    "number_of_unsafe_calls": 157,
    "number_of_safe_calls": 3,
    "number_of_destructuring_declarations": 0,
    "number_of_when_expressions": 5,
    "number_of_functions_with_default_value": 1,
    "number_of_function_call_with_named_value": 0,
    "number_of_named_argument": 0,
    "number_of_argument_with_default_value": 1,
    "number_of_overloaded_op": 0,
    "number_of_extension_function": 0,
    "number_of_properties_delegation": 0,
    "number_of_super_delegation": 0,
    "number_of_ranges": 8,
    "number_of_lambdas": 33,
    "number_of_possible_smart_casts": 0,
    "number_of_data_class": 0,
    "number_of_constructors": 4,
    "number_of_properties": 194,
    "number_of_functions": 95,
    "number_of_interfaces": 0,
    "number_of_classes": 13,
    "number_of_packages": 4,
    "number_of_kts_files": 0,
    "number_of_kt_files": 11
  },
  "file_metrics": {
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/SettingsFragment.kt": {
      "sloc": 68,
      "number_of_properties": 1,
      "number_of_functions": 1,
      "complexity": 7,
      "class": "com.systemallica.valenbisi.fragments.SettingsFragment"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt": {
      "sloc": 843,
      "number_of_properties": 14,
      "number_of_functions": 56,
      "complexity": 174,
      "class": "com.systemallica.valenbisi.fragments.MapsFragment"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/AboutFragment.kt": {
      "sloc": 170,
      "number_of_properties": 0,
      "number_of_functions": 2,
      "complexity": 2,
      "class": "com.systemallica.valenbisi.fragments.AboutFragment"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/Application.kt": {
      "sloc": 11,
      "number_of_properties": 0,
      "number_of_functions": 1,
      "complexity": 2,
      "class": "com.systemallica.valenbisi.Application"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/clustering/IconRenderer.kt": {
      "sloc": 19,
      "number_of_properties": 0,
      "number_of_functions": 1,
      "complexity": 1,
      "class": "com.systemallica.valenbisi.clustering.IconRenderer"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/clustering/ClusterPoint.kt": {
      "sloc": 30,
      "number_of_properties": 6,
      "number_of_functions": 3,
      "complexity": 3,
      "class": "com.systemallica.valenbisi.clustering.ClusterPoint"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/ContextWrapper.kt": {
      "sloc": 52,
      "number_of_properties": 0,
      "number_of_functions": 5,
      "complexity": 12,
      "class": "com.systemallica.valenbisi.ContextWrapper"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/BikeStation.kt": {
      "sloc": 39,
      "number_of_properties": 15,
      "number_of_functions": 0,
      "complexity": 2,
      "class": "com.systemallica.valenbisi.BikeStation"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/activities/MainActivity.kt": {
      "sloc": 241,
      "number_of_properties": 0,
      "number_of_functions": 15,
      "complexity": 41,
      "class": "com.systemallica.valenbisi.activities.MainActivity"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/activities/DonateActivity.kt": {
      "sloc": 85,
      "number_of_properties": 0,
      "number_of_functions": 10,
      "complexity": 18,
      "class": "com.systemallica.valenbisi.activities.DonateActivity"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/activities/SplashActivity.kt": {
      "sloc": 12,
      "number_of_properties": 0,
      "number_of_functions": 1,
      "complexity": 1,
      "class": "com.systemallica.valenbisi.activities.SplashActivity"
    }
  },
  "findings": [{
    "group": "complexity",
    "smells": [{
      "name": "LargeClass",
      "description": "One class should have one responsibility. Large classes tend to handle many things at once. Split up large classes into smaller classes that are easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:67:1",
        "message": "Class MapsFragment is too large. Consider splitting it into smaller pieces."
      }]
    }, {
      "name": "ComplexMethod",
      "description": "Prefer splitting up complex methods into smaller, easier to understand methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:489:5",
        "message": "The function getMarkerIcon appears to be too complex."
      }]
    }, {
      "name": "StringLiteralDuplication",
      "description": "Multiple occurrences of the same string literal within a single file detected.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:297:28",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:382:66",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:359:55",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:273:56",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:329:63",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:436:46",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:278:63",
        "message": "Multiple occurrences of the same string literal within a single file detected."
      }]
    }, {
      "name": "NestedBlockDepth",
      "description": "Excessive nesting leads to hidden complexity. Prefer extracting code to make it easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:967:9",
        "message": "Function doInBackground is nested too deeply."
      }]
    }, {
      "name": "TooManyFunctions",
      "description": "Too many functions inside a/an file/class/object/interface always indicate a violation of the single responsibility principle. Maybe the file/class/object/interface wants to manage to many things at once. Extract functionality which clearly belongs together.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:67:1",
        "message": "Class 'MapsFragment' with '43' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/activities/MainActivity.kt:44:1",
        "message": "Class 'MainActivity' with '13' functions detected. Defined threshold inside classes is set to '11'"
      }]
    }, {
      "name": "LabeledExpression",
      "description": "Expression with labels increase complexity and affect maintainability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/activities/MainActivity.kt:266:55",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/activities/MainActivity.kt:291:51",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/activities/DonateActivity.kt:51:54",
        "message": "Expression with labels increase complexity and affect maintainability."
      }]
    }]
  }, {
    "group": "exceptions",
    "smells": [{
      "name": "TooGenericExceptionCaught",
      "description": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/activities/MainActivity.kt:146:26",
        "message": "Caught exception is too generic. Prefer catching specific exceptions to the case that is currently handled."
      }]
    }]
  }, {
    "group": "potential-bugs",
    "smells": [{
      "name": "UnsafeCallOnNullableType",
      "description": "It will throw a NullPointerException at runtime if your nullable value is null.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/SettingsFragment.kt:26:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/SettingsFragment.kt:35:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/SettingsFragment.kt:36:52",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/SettingsFragment.kt:38:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/SettingsFragment.kt:39:52",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/SettingsFragment.kt:72:36",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/SettingsFragment.kt:78:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/SettingsFragment.kt:78:77",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/SettingsFragment.kt:82:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:160:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:162:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:163:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:164:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:169:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:170:26",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:175:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:176:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:177:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:179:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:179:37",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:181:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:191:39",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:199:27",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:201:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:203:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:220:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:231:79",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:258:27",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:261:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:263:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:268:41",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:273:34",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:278:41",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:318:39",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:329:37",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:332:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:333:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:335:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:351:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:359:33",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:360:37",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:368:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:368:48",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:371:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:371:48",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:382:40",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:397:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:403:40",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:421:45",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:421:60",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:430:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:435:41",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:436:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:438:31",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:483:28",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:484:32",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:522:16",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:527:39",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:596:52",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:598:39",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:599:46",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:600:46",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:601:53",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:602:54",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:603:51",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:604:52",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:606:33",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:608:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:615:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:623:34",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:625:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:632:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:640:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:642:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:649:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:657:35",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:659:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:666:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:676:53",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:677:54",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:678:51",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:679:52",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:681:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:682:18",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:683:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:691:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:697:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:699:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:704:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:705:18",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:706:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:714:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:720:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:722:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:729:56",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:730:56",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:731:62",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:733:39",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:734:37",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:737:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:738:37",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:741:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:747:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:750:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:756:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:761:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:762:28",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:765:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:766:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:774:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:775:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:786:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:791:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:792:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:794:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:810:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:822:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:823:39",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:824:33",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:831:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:834:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:841:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:853:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:854:47",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:855:41",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:863:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:867:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:870:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:878:58",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:879:57",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:882:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:890:57",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:899:35",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:925:33",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:928:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:939:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:957:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:958:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:968:33",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:976:37",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:985:51",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:1007:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:1011:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:1012:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/clustering/IconRenderer.kt:17:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/clustering/IconRenderer.kt:17:30",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/clustering/IconRenderer.kt:20:29",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/clustering/IconRenderer.kt:21:31",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/clustering/ClusterPoint.kt:18:32",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/clustering/ClusterPoint.kt:18:47",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/activities/MainActivity.kt:110:66",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/activities/MainActivity.kt:238:40",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/activities/DonateActivity.kt:21:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/activities/DonateActivity.kt:22:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/activities/DonateActivity.kt:58:31",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/activities/DonateActivity.kt:74:27",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/activities/DonateActivity.kt:77:27",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }]
    }, {
      "name": "UnsafeCast",
      "description": "Cast operator throws an exception if the cast is not possible.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/SettingsFragment.kt:29:26",
        "message": "findPreference(\"navBar\") cannot be safely cast to CheckBoxPreference."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/SettingsFragment.kt:67:28",
        "message": "findPreference(\"language\") cannot be safely cast to ListPreference."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/SettingsFragment.kt:70:45",
        "message": "newValue cannot be safely cast to String."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/activities/MainActivity.kt:67:13",
        "message": "applicationContext.getSystemService(Context.CONNECTIVITY_SERVICE) cannot be safely cast to ConnectivityManager."
      }]
    }, {
      "name": "LateinitUsage",
      "description": "Usage of lateinit detected. Using lateinit for property initialization is error prone, try using constructor injection or delegation.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:76:5",
        "message": "Usages of latinit should be avoided."
      }]
    }]
  }, {
    "group": "style",
    "smells": [{
      "name": "SpacingBetweenPackageAndImports",
      "description": "Violation of the package declaration style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/SettingsFragment.kt:15:36",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of SettingsFragment."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/AboutFragment.kt:18:60",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of AboutFragment."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/Application.kt:1:35",
        "message": "There should be exactly one empty line in between the package declaration and the list of imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/clustering/IconRenderer.kt:8:70",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of IconRenderer."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/clustering/ClusterPoint.kt:6:46",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of ClusterPoint."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/activities/MainActivity.kt:39:53",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of the class or object."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/activities/DonateActivity.kt:10:56",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of DonateActivity."
      }]
    }, {
      "name": "CollapsibleIfStatements",
      "description": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:993:25",
        "message": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability."
      }]
    }, {
      "name": "MaxLineLength",
      "description": "Line detected that is longer than the defined maximum line length in the code style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:82:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }]
    }, {
      "name": "UnnecessaryParentheses",
      "description": "Unnecessary parentheses don't add any value to the code and should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:227:16",
        "message": "Parentheses in (location.latitude in 39.420..39.515) are unnecessary and can be replaced with: location.latitude in 39.420..39.515"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:227:57",
        "message": "Parentheses in (location.longitude in -0.572..-0.272) are unnecessary and can be replaced with: location.longitude in -0.572..-0.272"
      }]
    }, {
      "name": "MagicNumber",
      "description": "Report magic numbers. Magic number is a numeric literal that is not defined as a constant and hence it's unclear what the purpose of this number is. It's better to declare such numbers as constants and give them a proper name. By default, -1, 0, 1, and 2 are not considered to be magic numbers.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:82:20",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:86:42",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:181:37",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:227:38",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:227:46",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:227:81",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:227:89",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:257:75",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:257:84",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:261:82",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:263:82",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:289:38",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:499:23",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:500:20",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:500:23",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:506:23",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:507:20",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:507:23",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:541:48",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:586:21",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:796:17",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:827:39",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:858:38",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:859:40",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:927:41",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:970:56",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:970:60",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:982:44",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/AboutFragment.kt:39:33",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/AboutFragment.kt:50:33",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/AboutFragment.kt:62:37",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/AboutFragment.kt:80:33",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/AboutFragment.kt:100:37",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/AboutFragment.kt:116:33",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/AboutFragment.kt:128:33",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/AboutFragment.kt:150:33",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/AboutFragment.kt:160:33",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/AboutFragment.kt:172:33",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }]
    }, {
      "name": "ExpressionBodySyntax",
      "description": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:103:14",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:226:59",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/AboutFragment.kt:187:34",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/clustering/ClusterPoint.kt:26:40",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/clustering/ClusterPoint.kt:30:38",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/clustering/ClusterPoint.kt:34:40",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/ContextWrapper.kt:42:66",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/ContextWrapper.kt:47:60",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }]
    }, {
      "name": "MandatoryBracesIfStatements",
      "description": "Multi-line if statement was found that does not have braces. These should be added to improve readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:341:9",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/activities/MainActivity.kt:239:21",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }]
    }, {
      "name": "ForbiddenVoid",
      "description": "`Unit` should be used instead of `Void`.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:916:46",
        "message": "'Void' should be replaced with 'Unit'."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:916:52",
        "message": "'Void' should be replaced with 'Unit'."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:922:52",
        "message": "'Void' should be replaced with 'Unit'."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:962:48",
        "message": "'Void' should be replaced with 'Unit'."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:962:54",
        "message": "'Void' should be replaced with 'Unit'."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/fragments/MapsFragment.kt:967:52",
        "message": "'Void' should be replaced with 'Unit'."
      }]
    }, {
      "name": "NewLineAtEndOfFile",
      "description": "Checks whether files end with a line separator.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/clustering/IconRenderer.kt:24:1",
        "message": "The file IconRenderer.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/ContextWrapper.kt:60:1",
        "message": "The file ContextWrapper.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/activities/SplashActivity.kt:15:1",
        "message": "The file SplashActivity.kt is not ending with a new line."
      }]
    }, {
      "name": "UseDataClass",
      "description": "Classes that do nothing but hold data should be replaced with a data class.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/BikeStation.kt:10:1",
        "message": "The class BikeStation defines nofunctionality and only holds data. Consider converting it to a data class."
      }]
    }, {
      "name": "OptionalWhenBraces",
      "description": "Optional braces in when expression",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/activities/MainActivity.kt:140:13",
        "message": "Optional braces in when expression"
      }]
    }, {
      "name": "WildcardImport",
      "description": "Wildcard imports should be replaced with imports using fully qualified class names. Wildcard imports can lead to naming conflicts. A library update can introduce naming clashes with your classes which results in compilation errors.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-systemallica-valenbisi/app/src/main/kotlin/com/systemallica/valenbisi/activities/DonateActivity.kt:8:1",
        "message": "com.android.billingclient.api.* is a wildcard import. Replace it with fully qualified imports."
      }]
    }]
  }]
}