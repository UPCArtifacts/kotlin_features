{
  "complexity_metrics": {
    "loc": 3146,
    "sloc": 2505,
    "lloc": 1833,
    "cloc": 101,
    "mcc": 373,
    "n_smell": 108,
    "comment_ratio": 4,
    "mcc_per_thlines": 203
  },
  "metrics": {
    "number_of_string": 610,
    "number_of_string_template": 9,
    "number_of_inline_func": 0,
    "number_of_inferred_fun": 11,
    "number_of_inferred_var": 169,
    "number_of_objects_declarations": 0,
    "number_of_companion_objects": 0,
    "number_of_singletons": 0,
    "number_of_declaration": 263,
    "number_of_var_declaration": 263,
    "number_of_func_call": 2037,
    "number_of_arguments": 2396,
    "number_of_parameters": 136,
    "number_of_qualified_expressions": 1072,
    "number_of_inheritances": 2,
    "number_of_unsafe_calls": 61,
    "number_of_safe_calls": 10,
    "number_of_destructuring_declarations": 0,
    "number_of_when_expressions": 0,
    "number_of_functions_with_default_value": 0,
    "number_of_function_call_with_named_value": 0,
    "number_of_named_argument": 0,
    "number_of_argument_with_default_value": 0,
    "number_of_overloaded_op": 0,
    "number_of_extension_function": 1,
    "number_of_properties_delegation": 0,
    "number_of_super_delegation": 0,
    "number_of_ranges": 4,
    "number_of_lambdas": 119,
    "number_of_possible_smart_casts": 2,
    "number_of_data_class": 0,
    "number_of_properties": 263,
    "number_of_functions": 287,
    "number_of_interfaces": 0,
    "number_of_classes": 27,
    "number_of_packages": 11,
    "number_of_kts_files": 0,
    "number_of_kt_files": 26
  },
  "findings": [{
    "group": "complexity",
    "smells": [{
      "name": "LargeClass",
      "description": "One class should have one responsibility. Large classes tend to handle many things at once. Split up large classes into smaller classes that are easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/contributions/ContributionDaoTest.kt:25:1",
        "message": "Class ContributionDaoTest is too large. Consider splitting it into smaller pieces."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/mwapi/ApacheHttpClientMediaWikiApiTest.kt:29:1",
        "message": "Class ApacheHttpClientMediaWikiApiTest is too large. Consider splitting it into smaller pieces."
      }]
    }]
  }, {
    "group": "potential-bugs",
    "smells": [{
      "name": "UnsafeCallOnNullableType",
      "description": "It will throw a NullPointerException at runtime if your nullable value is null.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadControllerTest.kt:35:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadControllerTest.kt:40:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadControllerTest.kt:45:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadControllerTest.kt:51:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:58:16",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:60:16",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:62:16",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:64:16",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:66:16",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:68:16",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:83:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:84:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:90:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:92:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:98:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:100:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:106:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:108:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:116:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:117:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:125:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:126:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:134:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:135:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:141:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:143:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:149:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:151:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:159:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:160:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:168:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:169:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:175:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:177:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:183:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:185:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:193:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:194:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:202:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:203:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:209:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:211:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:219:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:220:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:226:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:228:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:236:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:237:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:238:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:239:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:247:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:248:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:249:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:250:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:251:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:252:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:260:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:261:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadPresenterTest.kt:35:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadPresenterTest.kt:41:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadPresenterTest.kt:47:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }]
    }]
  }, {
    "group": "style",
    "smells": [{
      "name": "NewLineAtEndOfFile",
      "description": "Checks whether files end with a line separator.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/TestCommonsApplication.kt:82:1",
        "message": "The file TestCommonsApplication.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/category/CategoryDaoTest.kt:271:1",
        "message": "The file CategoryDaoTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/contributions/ContributionDaoTest.kt:346:1",
        "message": "The file ContributionDaoTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/utils/StringSortingUtilsTest.kt:41:1",
        "message": "The file StringSortingUtilsTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/modifications/ModifierSequenceDaoTest.kt:156:1",
        "message": "The file ModifierSequenceDaoTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/explore/recentsearches/RecentSearchesDaoTest.kt:307:1",
        "message": "The file RecentSearchesDaoTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/bookmarks/pictures/BookmarkPictureDaoTest.kt:217:1",
        "message": "The file BookmarkPictureDaoTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/mwapi/model/ApiResponseTest.kt:28:1",
        "message": "The file ApiResponseTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/mwapi/model/PageTest.kt:12:1",
        "message": "The file PageTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/mwapi/model/PageCategoryTest.kt:20:1",
        "message": "The file PageCategoryTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/mwapi/CategoryApiTest.kt:178:1",
        "message": "The file CategoryApiTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadControllerTest.kt:53:1",
        "message": "The file UploadControllerTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/GpsCategoryModelTest.kt:77:1",
        "message": "The file GpsCategoryModelTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:267:1",
        "message": "The file UploadModelTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/FileProcessorTest.kt:41:1",
        "message": "The file FileProcessorTest.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadPresenterTest.kt:50:1",
        "message": "The file UploadPresenterTest.kt is not ending with a new line."
      }]
    }, {
      "name": "UnusedPrivateMember",
      "description": "Private member is unused.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/category/CategoryDaoTest.kt:266:14",
        "message": "Private property i is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/explore/recentsearches/RecentSearchesDaoTest.kt:302:14",
        "message": "Private property i is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/bookmarks/pictures/BookmarkPictureDaoTest.kt:213:14",
        "message": "Private property i is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/bookmarks/locations/BookMarkLocationDaoTest.kt:256:14",
        "message": "Private property i is unused."
      }]
    }, {
      "name": "UnnecessaryParentheses",
      "description": "Unnecessary parentheses don't add any value to the code and should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/bookmarks/pictures/BookmarkPictureDaoTest.kt:72:25",
        "message": "Parentheses in (result.size) are unnecessary and can be replaced with: result.size"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/bookmarks/locations/BookMarkLocationDaoTest.kt:107:25",
        "message": "Parentheses in (result.size) are unnecessary and can be replaced with: result.size"
      }]
    }, {
      "name": "VarCouldBeVal",
      "description": "Var declaration could be val.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/bookmarks/pictures/BookmarkPictureDaoTest.kt:70:9",
        "message": "Variable 'result' could be val."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/bookmarks/locations/BookMarkLocationDaoTest.kt:105:9",
        "message": "Variable 'result' could be val."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:82:9",
        "message": "Variable 'uriList' could be val."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:115:9",
        "message": "Variable 'uriList' could be val."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:124:9",
        "message": "Variable 'uriList' could be val."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:133:9",
        "message": "Variable 'uriList' could be val."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:158:9",
        "message": "Variable 'uriList' could be val."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:167:9",
        "message": "Variable 'uriList' could be val."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:192:9",
        "message": "Variable 'uriList' could be val."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:201:9",
        "message": "Variable 'uriList' could be val."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:218:9",
        "message": "Variable 'uriList' could be val."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:235:9",
        "message": "Variable 'uriList' could be val."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:246:9",
        "message": "Variable 'uriList' could be val."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:259:9",
        "message": "Variable 'uriList' could be val."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadPresenterTest.kt:34:9",
        "message": "Variable 'uriList' could be val."
      }]
    }, {
      "name": "UnusedImports",
      "description": "Unused Imports are dead code and should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/mwapi/ApacheHttpClientMediaWikiApiTest.kt:4:1",
        "message": "The import 'android.net.Uri' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/mwapi/ApacheHttpClientMediaWikiApiTest.kt:19:1",
        "message": "The import 'org.mockito.Mockito.mock' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/mwapi/ApacheHttpClientMediaWikiApiTest.kt:23:1",
        "message": "The import 'timber.log.Timber' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/mwapi/ApacheHttpClientMediaWikiApiTest.kt:24:1",
        "message": "The import 'java.io.InputStream' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/FileProcessorTest.kt:3:1",
        "message": "The import 'android.content.ContentResolver' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/FileProcessorTest.kt:11:1",
        "message": "The import 'org.mockito.Mockito.anyString' is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/FileProcessorTest.kt:12:1",
        "message": "The import 'org.mockito.Mockito.mock' is unused."
      }]
    }, {
      "name": "SpacingBetweenPackageAndImports",
      "description": "Violation of the package declaration style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/commons-app-apps-android-commons/app/src/test/kotlin/fr/free/nrw/commons/upload/UploadModelTest.kt:25:26",
        "message": "There should be exactly one empty line in between the list of imports and the declaration of UploadModelTest."
      }]
    }]
  }]
}