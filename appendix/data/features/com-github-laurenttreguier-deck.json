{
  "complexity_metrics": {
    "loc": 744,
    "sloc": 620,
    "lloc": 436,
    "cloc": 0,
    "mcc": 128,
    "n_smell": 44,
    "comment_ratio": 0,
    "mcc_per_thlines": 293
  },
  "metrics": {
    "number_of_type_alias": 0,
    "number_of_tailrec_func": 0,
    "number_of_infix_func": 0,
    "number_of_sealed_class": 0,
    "number_of_coroutines": 0,
    "number_of_contract": 0,
    "number_of_inline_klass": 0,
    "number_of_string": 10,
    "number_of_string_template": 0,
    "number_of_inline_func": 0,
    "number_of_inferred_fun": 5,
    "number_of_inferred_var": 41,
    "number_of_objects_declarations": 10,
    "number_of_companion_objects": 4,
    "number_of_singletons": 0,
    "number_of_declaration": 64,
    "number_of_var_declaration": 64,
    "number_of_func_call": 314,
    "number_of_arguments": 231,
    "number_of_parameters": 78,
    "number_of_qualified_expressions": 501,
    "number_of_inheritances": 9,
    "number_of_unsafe_calls": 13,
    "number_of_safe_calls": 77,
    "number_of_destructuring_declarations": 0,
    "number_of_when_expressions": 4,
    "number_of_functions_with_default_value": 4,
    "number_of_function_call_with_named_value": 0,
    "number_of_named_argument": 0,
    "number_of_argument_with_default_value": 7,
    "number_of_overloaded_op": 0,
    "number_of_extension_function": 0,
    "number_of_properties_delegation": 0,
    "number_of_super_delegation": 0,
    "number_of_ranges": 0,
    "number_of_lambdas": 38,
    "number_of_possible_smart_casts": 0,
    "number_of_data_class": 0,
    "number_of_constructors": 7,
    "number_of_properties": 64,
    "number_of_functions": 47,
    "number_of_interfaces": 1,
    "number_of_classes": 10,
    "number_of_packages": 2,
    "number_of_kts_files": 0,
    "number_of_kt_files": 8
  },
  "file_metrics": {
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/MainActivity.kt": {
      "sloc": 352,
      "number_of_properties": 10,
      "number_of_functions": 26,
      "complexity": 71,
      "class": "com.github.laurenttreguier.deck.MainActivity"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/ShareActivity.kt": {
      "sloc": 43,
      "number_of_properties": 1,
      "number_of_functions": 2,
      "complexity": 3,
      "class": "com.github.laurenttreguier.deck.ShareActivity"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/model/Card.kt": {
      "sloc": 26,
      "number_of_properties": 1,
      "number_of_functions": 2,
      "complexity": 10,
      "class": "com.github.laurenttreguier.deck.model.Card"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/model/CardFolder.kt": {
      "sloc": 4,
      "number_of_properties": 0,
      "number_of_functions": 0,
      "complexity": 0,
      "class": "com.github.laurenttreguier.deck.model.CardFolder"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/model/Folder.kt": {
      "sloc": 12,
      "number_of_properties": 0,
      "number_of_functions": 1,
      "complexity": 5,
      "class": "com.github.laurenttreguier.deck.model.Folder"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/model/NamedRecord.kt": {
      "sloc": 7,
      "number_of_properties": 0,
      "number_of_functions": 0,
      "complexity": 0,
      "class": "com.github.laurenttreguier.deck.model.NamedRecord"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/CardAdapter.kt": {
      "sloc": 170,
      "number_of_properties": 4,
      "number_of_functions": 16,
      "complexity": 39,
      "class": "com.github.laurenttreguier.deck.CardAdapter"
    },
    "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/Constants.kt": {
      "sloc": 6,
      "number_of_properties": 0,
      "number_of_functions": 0,
      "complexity": 0,
      "class": "com.github.laurenttreguier.deck.Constants"
    }
  },
  "findings": [{
    "group": "complexity",
    "smells": [{
      "name": "LargeClass",
      "description": "One class should have one responsibility. Large classes tend to handle many things at once. Split up large classes into smaller classes that are easier to understand.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/MainActivity.kt:39:1",
        "message": "Class MainActivity is too large. Consider splitting it into smaller pieces."
      }]
    }, {
      "name": "TooManyFunctions",
      "description": "Too many functions inside a/an file/class/object/interface always indicate a violation of the single responsibility principle. Maybe the file/class/object/interface wants to manage to many things at once. Extract functionality which clearly belongs together.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/MainActivity.kt:39:1",
        "message": "Class 'MainActivity' with '17' functions detected. Defined threshold inside classes is set to '11'"
      }]
    }, {
      "name": "LabeledExpression",
      "description": "Expression with labels increase complexity and affect maintainability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/MainActivity.kt:208:13",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/model/Card.kt:11:13",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/model/Card.kt:17:13",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/CardAdapter.kt:144:17",
        "message": "Expression with labels increase complexity and affect maintainability."
      }]
    }, {
      "name": "ComplexMethod",
      "description": "Prefer splitting up complex methods into smaller, easier to understand methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/CardAdapter.kt:45:5",
        "message": "The function onBindViewHolder appears to be too complex."
      }]
    }]
  }, {
    "group": "empty-blocks",
    "smells": [{
      "name": "EmptyClassBlock",
      "description": "Empty block of code detected. As they serve no purpose they should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/model/CardFolder.kt:5:1",
        "message": "The class or object  CardFolder is empty."
      }]
    }]
  }, {
    "group": "naming",
    "smells": [{
      "name": "ObjectPropertyNaming",
      "description": "Property names inside objects should follow the naming convention set in the projects configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/CardAdapter.kt:32:9",
        "message": "Private object property names should match the pattern: (_)?[A-Za-z][A-Za-z0-9]*"
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/CardAdapter.kt:33:9",
        "message": "Private object property names should match the pattern: (_)?[A-Za-z][A-Za-z0-9]*"
      }]
    }]
  }, {
    "group": "potential-bugs",
    "smells": [{
      "name": "UnsafeCallOnNullableType",
      "description": "It will throw a NullPointerException at runtime if your nullable value is null.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/MainActivity.kt:66:35",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/MainActivity.kt:154:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/MainActivity.kt:154:59",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/MainActivity.kt:180:55",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/MainActivity.kt:215:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/MainActivity.kt:295:23",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/MainActivity.kt:343:23",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/MainActivity.kt:344:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/MainActivity.kt:369:33",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/MainActivity.kt:372:71",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/MainActivity.kt:400:33",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/MainActivity.kt:403:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/CardAdapter.kt:59:43",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }]
    }, {
      "name": "UnsafeCast",
      "description": "Cast operator throws an exception if the cast is not possible.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/MainActivity.kt:109:33",
        "message": "getSystemService(SEARCH_SERVICE) cannot be safely cast to SearchManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/MainActivity.kt:111:30",
        "message": "searchItem?.actionView cannot be safely cast to SearchView."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/MainActivity.kt:232:48",
        "message": "adapter cannot be safely cast to CardAdapter."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/MainActivity.kt:347:34",
        "message": "recycler cannot be safely cast to RecyclerView."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/ShareActivity.kt:32:32",
        "message": "getSystemService(Context.INPUT_METHOD_SERVICE) cannot be safely cast to InputMethodManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/CardAdapter.kt:205:28",
        "message": "this cannot be safely cast to CardAdapter."
      }]
    }]
  }, {
    "group": "style",
    "smells": [{
      "name": "CollapsibleIfStatements",
      "description": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/MainActivity.kt:85:9",
        "message": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability."
      }]
    }, {
      "name": "MaxLineLength",
      "description": "Line detected that is longer than the defined maximum line length in the code style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/MainActivity.kt:86:140",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/ShareActivity.kt:41:21",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/model/Card.kt:6:1",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }]
    }, {
      "name": "ForbiddenVoid",
      "description": "`Unit` should be used instead of `Void`.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/MainActivity.kt:367:73",
        "message": "'Void' should be replaced with 'Unit'."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/MainActivity.kt:367:79",
        "message": "'Void' should be replaced with 'Unit'."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/MainActivity.kt:368:48",
        "message": "'Void' should be replaced with 'Unit'."
      }]
    }, {
      "name": "ExpressionBodySyntax",
      "description": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/model/Card.kt:25:46",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }]
    }, {
      "name": "NewLineAtEndOfFile",
      "description": "Checks whether files end with a line separator.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/model/CardFolder.kt:6:1",
        "message": "The file CardFolder.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/model/NamedRecord.kt:9:1",
        "message": "The file NamedRecord.kt is not ending with a new line."
      }]
    }, {
      "name": "UnnecessaryParentheses",
      "description": "Unnecessary parentheses don't add any value to the code and should be removed.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/CardAdapter.kt:136:52",
        "message": "Parentheses in (if (card.postId.isNotEmpty()) card.postId else card.id) are unnecessary and can be replaced with: if (card.postId.isNotEmpty()) card.postId else card.id"
      }]
    }, {
      "name": "MayBeConst",
      "description": "Reports vals that can be const val instead.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/CardAdapter.kt:32:9",
        "message": "UNSELECTED_SCALE can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/CardAdapter.kt:33:9",
        "message": "SELECTED_SCALE can be a `const val`."
      }, {
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/Constants.kt:5:9",
        "message": "POST_URL can be a `const val`."
      }]
    }, {
      "name": "UtilityClassWithPublicConstructor",
      "description": "The class declaration is unnecessary because it only contains utility functions. An object declaration should be used instead.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/FAMAZOA_v3/com-github-laurenttreguier-deck/app/src/main/java/com/github/laurenttreguier/deck/Constants.kt:3:1",
        "message": "The class Constants only contains utility functions. Consider defining it as an object."
      }]
    }]
  }]
}