{
  "complexity_metrics": {
    "loc": 4154,
    "sloc": 2512,
    "lloc": 1644,
    "cloc": 962,
    "mcc": 421,
    "n_smell": 149,
    "comment_ratio": 38,
    "mcc_per_thlines": 256
  },
  "metrics": {
    "number_of_string": 115,
    "number_of_string_template": 6,
    "number_of_inline_func": 4,
    "number_of_inferred_fun": 102,
    "number_of_inferred_var": 214,
    "number_of_objects_declarations": 27,
    "number_of_companion_objects": 27,
    "number_of_singletons": 0,
    "number_of_declaration": 305,
    "number_of_var_declaration": 305,
    "number_of_func_call": 1093,
    "number_of_arguments": 769,
    "number_of_parameters": 278,
    "number_of_qualified_expressions": 1210,
    "number_of_inheritances": 27,
    "number_of_unsafe_calls": 55,
    "number_of_safe_calls": 19,
    "number_of_destructuring_declarations": 0,
    "number_of_when_expressions": 8,
    "number_of_functions_with_default_value": 6,
    "number_of_function_call_with_named_value": 8,
    "number_of_named_argument": 13,
    "number_of_argument_with_default_value": 11,
    "number_of_overloaded_op": 3,
    "number_of_extension_function": 42,
    "number_of_properties_delegation": 2,
    "number_of_super_delegation": 0,
    "number_of_ranges": 1,
    "number_of_lambdas": 147,
    "number_of_possible_smart_casts": 1,
    "number_of_data_class": 2,
    "number_of_properties": 305,
    "number_of_functions": 284,
    "number_of_interfaces": 1,
    "number_of_classes": 56,
    "number_of_packages": 12,
    "number_of_kts_files": 0,
    "number_of_kt_files": 52
  },
  "findings": [{
    "group": "complexity",
    "smells": [{
      "name": "TooManyFunctions",
      "description": "Too many functions inside a/an file/class/object/interface always indicate a violation of the single responsibility principle. Maybe the file/class/object/interface wants to manage to many things at once. Extract functionality which clearly belongs together.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/SeekContactFragment.kt:48:1",
        "message": "Class 'SeekContactFragment' with '14' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/ContactsFragment.kt:48:1",
        "message": "Class 'ContactsFragment' with '12' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/Contacts.kt:36:1",
        "message": "Class 'Contacts' with '11' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationFragment.kt:52:1",
        "message": "Class 'NavigationFragment' with '23' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationViewHolder.kt:49:1",
        "message": "Class 'NavigationViewHolder' with '16' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/profile/LoginActivity.kt:54:1",
        "message": "Class 'LoginActivity' with '17' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/data/fb/FbReader.kt:36:1",
        "message": "Class 'FbReader' with '13' functions detected. Defined threshold inside classes is set to '11'"
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/data/fb/FbWriter.kt:33:1",
        "message": "Class 'FbWriter' with '12' functions detected. Defined threshold inside classes is set to '11'"
      }]
    }, {
      "name": "ComplexMethod",
      "description": "Prefer splitting up complex methods into smaller, easier to understand methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationFragment.kt:160:5",
        "message": "The function onOptionsItemSelected appears to be too complex."
      }]
    }, {
      "name": "LabeledExpression",
      "description": "Expression with labels increase complexity and affect maintainability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationFragment.kt:78:39",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationFragment.kt:79:44",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationViewHolder.kt:166:9",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationViewHolder.kt:172:22",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationViewHolder.kt:199:57",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationViewHolder.kt:200:51",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationViewHolder.kt:202:52",
        "message": "Expression with labels increase complexity and affect maintainability."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/main/NavigatorApplication.kt:31:56",
        "message": "Expression with labels increase complexity and affect maintainability."
      }]
    }]
  }, {
    "group": "naming",
    "smells": [{
      "name": "MemberNameEqualsClassName",
      "description": "A member should not given the same name as its parent class or object.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/Contacts.kt:38:5",
        "message": "A member is named after the class. This might result in confusion. Either rename the member or change it to a constructor."
      }]
    }, {
      "name": "FunctionMaxLength",
      "description": "Function names should not be longer than the maximum set in the project configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/PeerRequestedFriendship.kt:33:1",
        "message": "Function names should be at most 30 characters long."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/MyLocationSource.kt:65:5",
        "message": "Function names should be at most 30 characters long."
      }]
    }, {
      "name": "FunctionMinLength",
      "description": "Function names should not be shorter than the minimum defined in the configuration.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/PeerRequestedFriendship.kt:42:9",
        "message": "Function names should be at least 3 characters long."
      }]
    }]
  }, {
    "group": "potential-bugs",
    "smells": [{
      "name": "UnsafeCast",
      "description": "Cast operator throws an exception if the cast is not possible.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/ui/NotificationChannels.kt:36:18",
        "message": "context.getSystemService(Context.NOTIFICATION_SERVICE) cannot be safely cast to NotificationManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/ui/ContactsDividerItemDecoration.kt:49:26",
        "message": "child.layoutParams cannot be safely cast to RecyclerView.LayoutParams."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/settings/SettingsFragment.kt:51:32",
        "message": "preference cannot be safely cast to CheckBoxPreference."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/SeekContactFragment.kt:53:39",
        "message": "context!!.getSystemService(Context.SEARCH_SERVICE) cannot be safely cast to SearchManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/SeekContactFragment.kt:106:54",
        "message": "actionView cannot be safely cast to SearchView."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/FriendshipListener.kt:43:28",
        "message": "context().getSystemService(Context.NOTIFICATION_SERVICE) cannot be safely cast to NotificationManager."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationFragment.kt:119:27",
        "message": "childFragmentManager.findFragmentById(R.id.map) cannot be safely cast to SupportMapFragment."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationFragment.kt:225:17",
        "message": "activity!! cannot be safely cast to AppCompatActivity."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationFragment.kt:238:14",
        "message": "activity!!.application cannot be safely cast to NavigatorApplication."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/profile/LoginActivity.kt:119:10",
        "message": "application cannot be safely cast to NavigatorApplication."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/profile/LoginActivity.kt:126:10",
        "message": "application cannot be safely cast to NavigatorApplication."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/main/NavigatorActivity.kt:71:10",
        "message": "application cannot be safely cast to NavigatorApplication."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/data/fb/FbReader.kt:44:24",
        "message": "it cannot be safely cast to String."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/data/fb/FbReader.kt:52:24",
        "message": "it cannot be safely cast to String."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/data/fb/FbReader.kt:106:41",
        "message": "child(DISPLAY_NAME).value cannot be safely cast to String."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/credits/CreditsFragment.kt:51:29",
        "message": "activity!!.getSystemService(Context.CLIPBOARD_SERVICE) cannot be safely cast to ClipboardManager."
      }]
    }, {
      "name": "UnsafeCallOnNullableType",
      "description": "It will throw a NullPointerException at runtime if your nullable value is null.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/ui/ContactsDividerItemDecoration.kt:37:19",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/settings/SettingsFragment.kt:41:43",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/SeekContactFragment.kt:53:39",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/SeekContactFragment.kt:67:48",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/SeekContactFragment.kt:108:59",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/SeekContactFragment.kt:128:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/SeekContactFragment.kt:142:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/SeekContactFragment.kt:169:44",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/Contact.kt:44:16",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/Contact.kt:45:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/ContactsFragment.kt:68:70",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/ContactsFragment.kt:72:48",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/ContactsFragment.kt:116:29",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/ContactsFragment.kt:125:29",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/ContactsFragment.kt:148:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationFragment.kt:75:48",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationFragment.kt:117:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationFragment.kt:143:21",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationFragment.kt:163:33",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationFragment.kt:168:48",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationFragment.kt:218:44",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationFragment.kt:225:17",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationFragment.kt:235:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationFragment.kt:238:14",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationFragment.kt:271:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationFragment.kt:277:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationFragment.kt:285:29",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationViewHolder.kt:74:34",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationViewHolder.kt:76:66",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationViewHolder.kt:175:34",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationViewHolder.kt:193:28",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/profile/LoggedInUser.kt:40:41",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/profile/LoggedInUser.kt:40:50",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/profile/LoginActivity.kt:162:31",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/profile/LoginActivity.kt:175:48",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/profile/LoginActivity.kt:206:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/profile/LoginActivity.kt:207:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/profile/LoginActivity.kt:209:9",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/profile/LoginActivity.kt:213:39",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/profile/LoginActivity.kt:214:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/profile/DeleteProfileFragment.kt:42:48",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/main/ActivityRecognitionSource.kt:63:13",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/main/NavigatorActivity.kt:76:20",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/data/fb/FbReader.kt:43:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/data/fb/FbReader.kt:51:24",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/data/fb/FbReader.kt:79:45",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/data/fb/FbReader.kt:106:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/data/fb/Fb.kt:35:44",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/data/fb/Fb.kt:39:25",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/data/fb/FbWriter.kt:35:28",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/data/fb/FbWriter.kt:38:31",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/data/fb/FbWriter.kt:38:45",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/data/fb/FbWriter.kt:47:62",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/data/fb/FbWriter.kt:80:46",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/credits/CreditsFragment.kt:51:29",
        "message": "Calling !! on a nullable type will throw a NullPointerException at runtime in case the value is null. It should be avoided."
      }]
    }, {
      "name": "LateinitUsage",
      "description": "Usage of lateinit detected. Using lateinit for property initialization is error prone, try using constructor injection or delegation.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/SeekContactFragment.kt:55:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/room/ContactEntity.kt:29:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/room/ContactEntity.kt:31:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/ContactsFragment.kt:57:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/FriendshipAddDialogBuilder.kt:30:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/FriendshipAddDialogBuilder.kt:31:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/FriendshipAddDialogBuilder.kt:32:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/PeerRequestedFriendship.kt:38:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/PeerRequestedFriendship.kt:39:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationFragment.kt:59:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationFragment.kt:63:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationViewHolder.kt:56:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationViewHolder.kt:61:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationViewHolder.kt:62:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationViewHolder.kt:63:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationViewHolder.kt:81:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationViewHolder.kt:90:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/MyLocationSource.kt:58:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/profile/LoginActivity.kt:60:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/profile/LoginActivity.kt:61:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/profile/LoginActivity.kt:63:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/profile/DeleteProfileFragment.kt:35:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/main/Rx.kt:37:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/main/ActivityRecognitionSource.kt:47:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/main/KodeinModuleBuilder.kt:58:5",
        "message": "Usages of latinit should be avoided."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/main/NavigatorActivity.kt:43:5",
        "message": "Usages of latinit should be avoided."
      }]
    }]
  }, {
    "group": "style",
    "smells": [{
      "name": "CollapsibleIfStatements",
      "description": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/ui/OnHudSwipeListener.kt:64:13",
        "message": "Two if statements which could be collapsed were detected. These statements can be merged to improve readability."
      }]
    }, {
      "name": "MagicNumber",
      "description": "Report magic numbers. Magic number is a numeric literal that is not defined as a constant and hence it's unclear what the purpose of this number is. It's better to declare such numbers as constants and give them a proper name. By default, -1, 0, 1, and 2 are not considered to be magic numbers.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/ui/OnHudSwipeListener.kt:53:33",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/MyLocationSource.kt:137:63",
        "message": "This expression contains a magic number. Consider defining it to a well named constant."
      }]
    }, {
      "name": "ExpressionBodySyntax",
      "description": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/settings/SettingsFragmentContainer.kt:31:116",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/SeekContactFragment.kt:62:116",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/ContactsFragment.kt:59:116",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationFragment.kt:70:116",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/profile/DeleteProfileFragment.kt:37:116",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/credits/CreditsFragment.kt:39:116",
        "message": "Functions with exact one statement, the return statement, can be rewritten with ExpressionBodySyntax."
      }]
    }, {
      "name": "WildcardImport",
      "description": "Wildcard imports should be replaced with imports using fully qualified class names. Wildcard imports can lead to naming conflicts. A library update can introduce naming clashes with your classes which results in compilation errors.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/SeekContactFragment.kt:32:1",
        "message": "android.view.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationFragment.kt:31:1",
        "message": "android.view.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationFragment.kt:46:1",
        "message": "pl.org.seva.navigator.contact.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationFragment.kt:49:1",
        "message": "pl.org.seva.navigator.main.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationFragment.kt:50:1",
        "message": "pl.org.seva.navigator.profile.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationViewHolder.kt:39:1",
        "message": "pl.org.seva.navigator.contact.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/MyLocationSource.kt:27:1",
        "message": "com.google.android.gms.location.* is a wildcard import. Replace it with fully qualified imports."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/main/Bootstrap.kt:27:1",
        "message": "pl.org.seva.navigator.contact.* is a wildcard import. Replace it with fully qualified imports."
      }]
    }, {
      "name": "MaxLineLength",
      "description": "Line detected that is longer than the defined maximum line length in the code style.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/PeerRequestedFriendship.kt:55:126",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/contact/PeerRequestedFriendship.kt:60:122",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/data/room/migration/AddedColorMigration.kt:55:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/data/room/migration/AddedDebugMigration.kt:52:9",
        "message": "Line detected that is longer than the defined maximum line length in the code style."
      }]
    }, {
      "name": "MandatoryBracesIfStatements",
      "description": "Multi-line if statement was found that does not have braces. These should be added to improve readability.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/NavigationViewHolder.kt:184:64",
        "message": "Multi-line if statement was found that does not have braces. These should be added to improve readability."
      }]
    }, {
      "name": "ReturnCount",
      "description": "Restrict the number of return statements in methods.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/navigation/MyLocationSource.kt:116:9",
        "message": "Function isBetterLocation has 6 return statements which exceeds the limit of 2."
      }]
    }, {
      "name": "OptionalWhenBraces",
      "description": "Optional braces in when expression",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/profile/LoginActivity.kt:104:13",
        "message": "Optional braces in when expression"
      }]
    }, {
      "name": "UseDataClass",
      "description": "Classes that do nothing but hold data should be replaced with a data class.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/main/Permissions.kt:82:5",
        "message": "The class PermissionRequest defines nofunctionality and only holds data. Consider converting it to a data class."
      }]
    }, {
      "name": "UnusedPrivateMember",
      "description": "Private member is unused.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/main/Rx.kt:39:5",
        "message": "Private function onStart is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/main/Rx.kt:41:5",
        "message": "Private function onStop is unused."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/debug/Debug.kt:60:13",
        "message": "Function parameter peer is unused."
      }]
    }, {
      "name": "NewLineAtEndOfFile",
      "description": "Checks whether files end with a line separator.",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/data/ParcelableInt.kt:28:48",
        "message": "The file ParcelableInt.kt is not ending with a new line."
      }, {
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/data/room/migration/AddedDebugMigration.kt:60:1",
        "message": "The file AddedDebugMigration.kt is not ending with a new line."
      }]
    }, {
      "name": "FunctionOnlyReturningConstant",
      "description": "A function that only returns a constant is misleading. Consider declaring a constant instead",
      "instances": [{
        "location": "/Users/brunomateus/Doutorado/Experimento2/repos_MSR/syrop-Wiktor-Navigator/navigator/src/main/kotlin/pl/org/seva/navigator/debug/Debug.kt:55:5",
        "message": "isIgnoredForPeer is returning a constant. Prefer declaring a constant instead."
      }]
    }]
  }]
}